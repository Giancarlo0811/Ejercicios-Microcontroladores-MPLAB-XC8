

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Apr 19 14:10:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _RCREG	set	4014
    55   000000                     _TXREG	set	4013
    56   000000                     _SPBRG	set	4015
    57   000000                     _BAUDCON	set	4024
    58   000000                     _RCSTAbits	set	4011
    59   000000                     _TXSTAbits	set	4012
    60   000000                     _BAUDCONbits	set	4024
    61   000000                     _LATBbits	set	3978
    62   000000                     _TRISBbits	set	3987
    63   000000                     _ADCON1bits	set	4033
    64   000000                     _PIR1bits	set	3998
    65   000000                     _RCSTA	set	4011
    66   000000                     _TXSTA	set	4012
    67   000000                     _TRISCbits	set	3988
    68   000000                     _SPBRGH	set	4016
    69                           
    70                           	psect	smallconst
    71   000800                     __psmallconst:
    72                           	callstack 0
    73   000800  00                 	db	0
    74   000801                     STR_1:
    75   000801  45                 	db	69	;'E'
    76   000802  6E                 	db	110	;'n'
    77   000803  63                 	db	99	;'c'
    78   000804  65                 	db	101	;'e'
    79   000805  6E                 	db	110	;'n'
    80   000806  64                 	db	100	;'d'
    81   000807  65                 	db	101	;'e'
    82   000808  72                 	db	114	;'r'
    83   000809  20                 	db	32
    84   00080A  4C                 	db	76	;'L'
    85   00080B  45                 	db	69	;'E'
    86   00080C  44                 	db	68	;'D'
    87   00080D  20                 	db	32
    88   00080E  31                 	db	49	;'1'
    89   00080F  3A                 	db	58	;':'
    90   000810  20                 	db	32
    91   000811  61                 	db	97	;'a'
    92   000812  0D                 	db	13
    93   000813  0A                 	db	10
    94   000814  00                 	db	0
    95   000815                     STR_3:
    96   000815  45                 	db	69	;'E'
    97   000816  6E                 	db	110	;'n'
    98   000817  63                 	db	99	;'c'
    99   000818  65                 	db	101	;'e'
   100   000819  6E                 	db	110	;'n'
   101   00081A  64                 	db	100	;'d'
   102   00081B  65                 	db	101	;'e'
   103   00081C  72                 	db	114	;'r'
   104   00081D  20                 	db	32
   105   00081E  4C                 	db	76	;'L'
   106   00081F  45                 	db	69	;'E'
   107   000820  44                 	db	68	;'D'
   108   000821  20                 	db	32
   109   000822  32                 	db	50	;'2'
   110   000823  3A                 	db	58	;':'
   111   000824  20                 	db	32
   112   000825  63                 	db	99	;'c'
   113   000826  0D                 	db	13
   114   000827  0A                 	db	10
   115   000828  00                 	db	0
   116   000829                     STR_2:
   117   000829  41                 	db	65	;'A'
   118   00082A  70                 	db	112	;'p'
   119   00082B  61                 	db	97	;'a'
   120   00082C  67                 	db	103	;'g'
   121   00082D  61                 	db	97	;'a'
   122   00082E  72                 	db	114	;'r'
   123   00082F  20                 	db	32
   124   000830  4C                 	db	76	;'L'
   125   000831  45                 	db	69	;'E'
   126   000832  44                 	db	68	;'D'
   127   000833  20                 	db	32
   128   000834  31                 	db	49	;'1'
   129   000835  3A                 	db	58	;':'
   130   000836  20                 	db	32
   131   000837  62                 	db	98	;'b'
   132   000838  0D                 	db	13
   133   000839  0A                 	db	10
   134   00083A  00                 	db	0
   135   00083B                     STR_4:
   136   00083B  41                 	db	65	;'A'
   137   00083C  70                 	db	112	;'p'
   138   00083D  61                 	db	97	;'a'
   139   00083E  67                 	db	103	;'g'
   140   00083F  61                 	db	97	;'a'
   141   000840  72                 	db	114	;'r'
   142   000841  20                 	db	32
   143   000842  4C                 	db	76	;'L'
   144   000843  45                 	db	69	;'E'
   145   000844  44                 	db	68	;'D'
   146   000845  20                 	db	32
   147   000846  32                 	db	50	;'2'
   148   000847  3A                 	db	58	;':'
   149   000848  20                 	db	32
   150   000849  64                 	db	100	;'d'
   151   00084A  0D                 	db	13
   152   00084B  0A                 	db	10
   153   00084C  00                 	db	0
   154   00084D                     STR_6:
   155   00084D  4C                 	db	76	;'L'
   156   00084E  45                 	db	69	;'E'
   157   00084F  44                 	db	68	;'D'
   158   000850  20                 	db	32
   159   000851  31                 	db	49	;'1'
   160   000852  20                 	db	32
   161   000853  45                 	db	69	;'E'
   162   000854  6E                 	db	110	;'n'
   163   000855  63                 	db	99	;'c'
   164   000856  65                 	db	101	;'e'
   165   000857  6E                 	db	110	;'n'
   166   000858  64                 	db	100	;'d'
   167   000859  69                 	db	105	;'i'
   168   00085A  64                 	db	100	;'d'
   169   00085B  6F                 	db	111	;'o'
   170   00085C  0D                 	db	13
   171   00085D  0A                 	db	10
   172   00085E  00                 	db	0
   173   00085F                     STR_8:
   174   00085F  4C                 	db	76	;'L'
   175   000860  45                 	db	69	;'E'
   176   000861  44                 	db	68	;'D'
   177   000862  20                 	db	32
   178   000863  32                 	db	50	;'2'
   179   000864  20                 	db	32
   180   000865  45                 	db	69	;'E'
   181   000866  6E                 	db	110	;'n'
   182   000867  63                 	db	99	;'c'
   183   000868  65                 	db	101	;'e'
   184   000869  6E                 	db	110	;'n'
   185   00086A  64                 	db	100	;'d'
   186   00086B  69                 	db	105	;'i'
   187   00086C  64                 	db	100	;'d'
   188   00086D  6F                 	db	111	;'o'
   189   00086E  0D                 	db	13
   190   00086F  0A                 	db	10
   191   000870  00                 	db	0
   192   000871                     STR_7:
   193   000871  4C                 	db	76	;'L'
   194   000872  45                 	db	69	;'E'
   195   000873  44                 	db	68	;'D'
   196   000874  20                 	db	32
   197   000875  31                 	db	49	;'1'
   198   000876  20                 	db	32
   199   000877  41                 	db	65	;'A'
   200   000878  70                 	db	112	;'p'
   201   000879  61                 	db	97	;'a'
   202   00087A  67                 	db	103	;'g'
   203   00087B  61                 	db	97	;'a'
   204   00087C  64                 	db	100	;'d'
   205   00087D  6F                 	db	111	;'o'
   206   00087E  0D                 	db	13
   207   00087F  0A                 	db	10
   208   000880  00                 	db	0
   209   000881                     STR_9:
   210   000881  4C                 	db	76	;'L'
   211   000882  45                 	db	69	;'E'
   212   000883  44                 	db	68	;'D'
   213   000884  20                 	db	32
   214   000885  32                 	db	50	;'2'
   215   000886  20                 	db	32
   216   000887  41                 	db	65	;'A'
   217   000888  70                 	db	112	;'p'
   218   000889  61                 	db	97	;'a'
   219   00088A  67                 	db	103	;'g'
   220   00088B  61                 	db	97	;'a'
   221   00088C  64                 	db	100	;'d'
   222   00088D  6F                 	db	111	;'o'
   223   00088E  0D                 	db	13
   224   00088F  0A                 	db	10
   225   000890  00                 	db	0
   226   000891  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231   000B16                     __pcinit:
   232                           	callstack 0
   233   000B16                     start_initialization:
   234                           	callstack 0
   235   000B16                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Clear objects allocated to COMRAM (1 bytes)
   239   000B16  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   240   000B18                     end_of_initialization:
   241                           	callstack 0
   242   000B18                     __end_of__initialization:
   243                           	callstack 0
   244   000B18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245   000B1A  6EF8               	movwf	tblptru,c
   246   000B1C  0100               	movlb	0
   247   000B1E  EF49  F004         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250   00001A                     __pbssCOMRAM:
   251                           	callstack 0
   252   00001A                     _dato_rx:
   253                           	callstack 0
   254   00001A                     	ds	1
   255                           
   256                           	psect	cstackCOMRAM
   257   000001                     __pcstackCOMRAM:
   258                           	callstack 0
   259   000001                     ?_Uart_Available:
   260                           	callstack 0
   261   000001                     ?___lldiv:
   262                           	callstack 0
   263   000001                     Uart_Send_Char@txData:
   264                           	callstack 0
   265   000001                     ___lldiv@dividend:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x0
   269   000001                     	ds	1
   270   000002                     Uart_Send_String@info:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x1
   274   000002                     	ds	1
   275   000003                     ??_Uart_Available:
   276                           
   277                           ; 1 bytes @ 0x2
   278   000003                     	ds	2
   279   000005                     ___lldiv@divisor:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283   000005                     	ds	4
   284   000009                     ___lldiv@quotient:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x8
   288   000009                     	ds	4
   289   00000D                     ___lldiv@counter:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0xC
   293   00000D                     	ds	1
   294   00000E                     Uart_Init@baud:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0xD
   298   00000E                     	ds	4
   299   000012                     ??_Uart_Init:
   300                           
   301                           ; 1 bytes @ 0x11
   302   000012                     	ds	4
   303   000016                     Uart_Init@vx:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x15
   307   000016                     	ds	2
   308   000018                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x17
   311   000018                     	ds	2
   312                           
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 24 in file "uart_rx_leds.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          2       0       0       0       0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels required when called: 2
   338 ;; This function calls:
   339 ;;		_Uart_Available
   340 ;;		_Uart_Init
   341 ;;		_Uart_Read
   342 ;;		_Uart_Send_String
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text0
   349   000892                     __ptext0:
   350                           	callstack 0
   351   000892                     _main:
   352                           	callstack 29
   353   000892                     
   354                           ;uart_rx_leds.c: 25:     ADCON1bits.PCFG = 0x0F;
   355   000892  0E0F               	movlw	15
   356   000894  12C1               	iorwf	193,f,c	;volatile
   357   000896                     
   358                           ;uart_rx_leds.c: 26:     TRISBbits.RB2 = 0;
   359   000896  9493               	bcf	147,2,c	;volatile
   360   000898                     
   361                           ;uart_rx_leds.c: 27:     TRISBbits.RB3 = 0;
   362   000898  9693               	bcf	147,3,c	;volatile
   363   00089A                     
   364                           ;uart_rx_leds.c: 28:     LATBbits.LB2 = 0;
   365   00089A  948A               	bcf	138,2,c	;volatile
   366   00089C                     
   367                           ;uart_rx_leds.c: 29:     LATBbits.LB3 = 0;
   368   00089C  968A               	bcf	138,3,c	;volatile
   369   00089E                     
   370                           ;uart_rx_leds.c: 31:     Uart_Init(9600);
   371   00089E  0E80               	movlw	128
   372   0008A0  6E0E               	movwf	Uart_Init@baud^0,c
   373   0008A2  0E25               	movlw	37
   374   0008A4  6E0F               	movwf	(Uart_Init@baud+1)^0,c
   375   0008A6  0E00               	movlw	0
   376   0008A8  6E10               	movwf	(Uart_Init@baud+2)^0,c
   377   0008AA  0E00               	movlw	0
   378   0008AC  6E11               	movwf	(Uart_Init@baud+3)^0,c
   379   0008AE  EC0E  F005         	call	_Uart_Init	;wreg free
   380   0008B2                     
   381                           ;uart_rx_leds.c: 33:     Uart_Send_String("Encender LED 1: a\r\n");
   382   0008B2  0E01               	movlw	low STR_1
   383   0008B4  6E02               	movwf	Uart_Send_String@info^0,c
   384   0008B6  EC45  F005         	call	_Uart_Send_String	;wreg free
   385   0008BA                     
   386                           ;uart_rx_leds.c: 34:     Uart_Send_String("Apagar LED 1: b\r\n");
   387   0008BA  0E29               	movlw	low STR_2
   388   0008BC  6E02               	movwf	Uart_Send_String@info^0,c
   389   0008BE  EC45  F005         	call	_Uart_Send_String	;wreg free
   390   0008C2                     
   391                           ;uart_rx_leds.c: 35:     Uart_Send_String("Encender LED 2: c\r\n");
   392   0008C2  0E15               	movlw	low STR_3
   393   0008C4  6E02               	movwf	Uart_Send_String@info^0,c
   394   0008C6  EC45  F005         	call	_Uart_Send_String	;wreg free
   395   0008CA                     
   396                           ;uart_rx_leds.c: 36:     Uart_Send_String("Apagar LED 2: d\r\n");
   397   0008CA  0E3B               	movlw	low STR_4
   398   0008CC  6E02               	movwf	Uart_Send_String@info^0,c
   399   0008CE  EC45  F005         	call	_Uart_Send_String	;wreg free
   400   0008D2                     
   401                           ;uart_rx_leds.c: 37:     Uart_Send_String("\r\n");
   402   0008D2  0E12               	movlw	low (STR_1+17)
   403   0008D4  6E02               	movwf	Uart_Send_String@info^0,c
   404   0008D6  EC45  F005         	call	_Uart_Send_String	;wreg free
   405   0008DA                     l997:
   406                           
   407                           ;uart_rx_leds.c: 40:         if (Uart_Available() > 0) {
   408   0008DA  EC72  F005         	call	_Uart_Available	;wreg free
   409   0008DE  BE02               	btfsc	(?_Uart_Available+1)^0,7,c
   410   0008E0  EF7A  F004         	goto	u221
   411   0008E4  5002               	movf	(?_Uart_Available+1)^0,w,c
   412   0008E6  E108               	bnz	u220
   413   0008E8  0401               	decf	?_Uart_Available^0,w,c
   414   0008EA  A0D8               	btfss	status,0,c
   415   0008EC  EF7A  F004         	goto	u221
   416   0008F0  EF7C  F004         	goto	u220
   417   0008F4                     u221:
   418   0008F4  EF6D  F004         	goto	l997
   419   0008F8                     u220:
   420   0008F8                     
   421                           ;uart_rx_leds.c: 41:             dato_rx = Uart_Read();
   422   0008F8  EC5F  F005         	call	_Uart_Read	;wreg free
   423   0008FC  6E1A               	movwf	_dato_rx^0,c
   424                           
   425                           ;uart_rx_leds.c: 43:             switch(dato_rx) {
   426   0008FE  EF9D  F004         	goto	l1011
   427   000902                     l24:
   428                           
   429                           ;uart_rx_leds.c: 45:                     LATBbits.LB2 = 1;
   430   000902  848A               	bsf	138,2,c	;volatile
   431   000904                     
   432                           ;uart_rx_leds.c: 46:                     Uart_Send_String("LED 1 Encendido\r\n");
   433   000904  0E4D               	movlw	low STR_6
   434   000906  6E02               	movwf	Uart_Send_String@info^0,c
   435   000908  EC45  F005         	call	_Uart_Send_String	;wreg free
   436                           
   437                           ;uart_rx_leds.c: 47:                     break;
   438   00090C  EF6D  F004         	goto	l997
   439   000910                     l26:
   440                           
   441                           ;uart_rx_leds.c: 49:                     LATBbits.LB2 = 0;
   442   000910  948A               	bcf	138,2,c	;volatile
   443   000912                     
   444                           ;uart_rx_leds.c: 50:                     Uart_Send_String("LED 1 Apagado\r\n");
   445   000912  0E71               	movlw	low STR_7
   446   000914  6E02               	movwf	Uart_Send_String@info^0,c
   447   000916  EC45  F005         	call	_Uart_Send_String	;wreg free
   448                           
   449                           ;uart_rx_leds.c: 51:                     break;
   450   00091A  EF6D  F004         	goto	l997
   451   00091E                     l27:
   452                           
   453                           ;uart_rx_leds.c: 53:                     LATBbits.LB3 = 1;
   454   00091E  868A               	bsf	138,3,c	;volatile
   455   000920                     
   456                           ;uart_rx_leds.c: 54:                     Uart_Send_String("LED 2 Encendido\r\n");
   457   000920  0E5F               	movlw	low STR_8
   458   000922  6E02               	movwf	Uart_Send_String@info^0,c
   459   000924  EC45  F005         	call	_Uart_Send_String	;wreg free
   460                           
   461                           ;uart_rx_leds.c: 55:                     break;
   462   000928  EF6D  F004         	goto	l997
   463   00092C                     l28:
   464                           
   465                           ;uart_rx_leds.c: 57:                     LATBbits.LB3 = 0;
   466   00092C  968A               	bcf	138,3,c	;volatile
   467   00092E                     
   468                           ;uart_rx_leds.c: 58:                     Uart_Send_String("LED 2 Apagado\r\n");
   469   00092E  0E81               	movlw	low STR_9
   470   000930  6E02               	movwf	Uart_Send_String@info^0,c
   471   000932  EC45  F005         	call	_Uart_Send_String	;wreg free
   472                           
   473                           ;uart_rx_leds.c: 59:                     break;
   474   000936  EF6D  F004         	goto	l997
   475   00093A                     l1011:
   476   00093A  501A               	movf	_dato_rx^0,w,c
   477   00093C  6E18               	movwf	??_main^0,c
   478   00093E  6A19               	clrf	(??_main+1)^0,c
   479                           
   480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   481                           ; Switch size 1, requested type "simple"
   482                           ; Number of cases is 1, Range of values is 0 to 0
   483                           ; switch strategies available:
   484                           ; Name         Instructions Cycles
   485                           ; simple_byte            4     3 (average)
   486                           ;	Chosen strategy is simple_byte
   487   000940  5019               	movf	(??_main+1)^0,w,c
   488   000942  0A00               	xorlw	0	; case 0
   489   000944  B4D8               	btfsc	status,2,c
   490   000946  EFA7  F004         	goto	l1021
   491   00094A  EF6D  F004         	goto	l997
   492   00094E                     l1021:
   493                           
   494                           ; Switch size 1, requested type "simple"
   495                           ; Number of cases is 4, Range of values is 97 to 100
   496                           ; switch strategies available:
   497                           ; Name         Instructions Cycles
   498                           ; simple_byte           13     7 (average)
   499                           ;	Chosen strategy is simple_byte
   500   00094E  5018               	movf	??_main^0,w,c
   501   000950  0A61               	xorlw	97	; case 97
   502   000952  B4D8               	btfsc	status,2,c
   503   000954  EF81  F004         	goto	l24
   504   000958  0A03               	xorlw	3	; case 98
   505   00095A  B4D8               	btfsc	status,2,c
   506   00095C  EF88  F004         	goto	l26
   507   000960  0A01               	xorlw	1	; case 99
   508   000962  B4D8               	btfsc	status,2,c
   509   000964  EF8F  F004         	goto	l27
   510   000968  0A07               	xorlw	7	; case 100
   511   00096A  B4D8               	btfsc	status,2,c
   512   00096C  EF96  F004         	goto	l28
   513   000970  EF6D  F004         	goto	l997
   514   000974  EF00  F000         	goto	start
   515   000978                     __end_of_main:
   516                           	callstack 0
   517                           
   518 ;; *************** function _Uart_Send_String *****************
   519 ;; Defined at:
   520 ;;		line 35 in file "uart.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  info            1    1[COMRAM] PTR unsigned char 
   523 ;;		 -> STR_9(16), STR_8(18), STR_7(16), STR_6(18), 
   524 ;;		 -> STR_5(3), STR_4(18), STR_3(20), STR_2(18), 
   525 ;;		 -> STR_1(20), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   537 ;;      Params:         1       0       0       0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0
   540 ;;      Totals:         1       0       0       0       0       0       0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_Uart_Send_Char
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text1
   552   000A8A                     __ptext1:
   553                           	callstack 0
   554   000A8A                     _Uart_Send_String:
   555                           	callstack 29
   556   000A8A                     
   557                           ;uart.c: 35: void Uart_Send_String(char *info);uart.c: 36: {;uart.c: 37:     while(*info
      +                          )
   558   000A8A  EF50  F005         	goto	l969
   559   000A8E                     l965:
   560                           
   561                           ;uart.c: 38:     {;uart.c: 39:         Uart_Send_Char(*info++);
   562   000A8E  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   563   000A92                     	if	1	;There is more than 1 active tblptr byte
   564   000A92  0E08               	movlw	high __smallconst
   565   000A94  6EF7               	movwf	tblptrh,c
   566   000A96                     	endif
   567   000A96                     	if	0	;tblptru may be non-zero
   568   000A96                     	endif
   569   000A96                     	if	0	;tblptru may be non-zero
   570   000A96                     	endif
   571   000A96  0008               	tblrd		*
   572   000A98  50F5               	movf	tablat,w,c
   573   000A9A  EC80  F005         	call	_Uart_Send_Char
   574   000A9E  2A02               	incf	Uart_Send_String@info^0,f,c
   575   000AA0                     l969:
   576                           
   577                           ;uart.c: 37:     while(*info)
   578   000AA0  C002  FFF6         	movff	Uart_Send_String@info,tblptrl
   579   000AA4                     	if	1	;There is more than 1 active tblptr byte
   580   000AA4  0E08               	movlw	high __smallconst
   581   000AA6  6EF7               	movwf	tblptrh,c
   582   000AA8                     	endif
   583   000AA8                     	if	0	;tblptru may be non-zero
   584   000AA8                     	endif
   585   000AA8                     	if	0	;tblptru may be non-zero
   586   000AA8                     	endif
   587   000AA8  0008               	tblrd		*
   588   000AAA  50F5               	movf	tablat,w,c
   589   000AAC  0900               	iorlw	0
   590   000AAE  A4D8               	btfss	status,2,c
   591   000AB0  EF5C  F005         	goto	u201
   592   000AB4  EF5E  F005         	goto	u200
   593   000AB8                     u201:
   594   000AB8  EF47  F005         	goto	l965
   595   000ABC                     u200:
   596   000ABC  0012               	return		;funcret
   597   000ABE                     __end_of_Uart_Send_String:
   598                           	callstack 0
   599                           
   600 ;; *************** function _Uart_Send_Char *****************
   601 ;; Defined at:
   602 ;;		line 29 in file "uart.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  txData          1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  txData          1    0[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         0       0       0       0       0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_Uart_Send_String
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text2
   630   000B00                     __ptext2:
   631                           	callstack 0
   632   000B00                     _Uart_Send_Char:
   633                           	callstack 29
   634                           
   635                           ;incstack = 0
   636                           ;Uart_Send_Char@txData stored from wreg
   637   000B00  6E01               	movwf	Uart_Send_Char@txData^0,c
   638   000B02                     l64:
   639   000B02  A2AC               	btfss	172,1,c	;volatile
   640   000B04  EF86  F005         	goto	u11
   641   000B08  EF88  F005         	goto	u10
   642   000B0C                     u11:
   643   000B0C  EF81  F005         	goto	l64
   644   000B10                     u10:
   645   000B10                     
   646                           ;uart.c: 32:     TXREG = txData;
   647   000B10  C001  FFAD         	movff	Uart_Send_Char@txData,4013	;volatile
   648   000B14  0012               	return		;funcret
   649   000B16                     __end_of_Uart_Send_Char:
   650                           	callstack 0
   651                           
   652 ;; *************** function _Uart_Read *****************
   653 ;; Defined at:
   654 ;;		line 43 in file "uart.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      unsigned char 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         0       0       0       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_main
   678 ;;		_Uart_Read_String
   679 ;;		_Uart_Read_StringUntil
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text3
   684   000ABE                     __ptext3:
   685                           	callstack 0
   686   000ABE                     _Uart_Read:
   687                           	callstack 30
   688   000ABE                     l76:
   689   000ABE  AA9E               	btfss	158,5,c	;volatile
   690   000AC0  EF64  F005         	goto	u81
   691   000AC4  EF66  F005         	goto	u80
   692   000AC8                     u81:
   693   000AC8  EF5F  F005         	goto	l76
   694   000ACC                     u80:
   695   000ACC                     
   696                           ;uart.c: 46:     if(RCSTAbits.OERR == 1)
   697   000ACC  A2AB               	btfss	171,1,c	;volatile
   698   000ACE  EF6B  F005         	goto	u91
   699   000AD2  EF6D  F005         	goto	u90
   700   000AD6                     u91:
   701   000AD6  EF6F  F005         	goto	l79
   702   000ADA                     u90:
   703   000ADA                     
   704                           ;uart.c: 47:     {;uart.c: 48:         RCSTAbits.CREN = 0;
   705   000ADA  98AB               	bcf	171,4,c	;volatile
   706                           
   707                           ;uart.c: 49:         RCSTAbits.CREN = 1;
   708   000ADC  88AB               	bsf	171,4,c	;volatile
   709   000ADE                     l79:
   710                           
   711                           ;uart.c: 51:     PIR1bits.RCIF = 0;
   712   000ADE  9A9E               	bcf	158,5,c	;volatile
   713   000AE0                     
   714                           ;uart.c: 52:     return RCREG;
   715   000AE0  50AE               	movf	174,w,c	;volatile
   716   000AE2  0012               	return		;funcret
   717   000AE4                     __end_of_Uart_Read:
   718                           	callstack 0
   719                           
   720 ;; *************** function _Uart_Init *****************
   721 ;; Defined at:
   722 ;;		line 11 in file "uart.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  baud            4   13[COMRAM] unsigned long 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  vx              2   21[COMRAM] unsigned int 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         4       0       0       0       0       0       0       0       0
   737 ;;      Locals:         2       0       0       0       0       0       0       0       0
   738 ;;      Temps:          4       0       0       0       0       0       0       0       0
   739 ;;      Totals:        10       0       0       0       0       0       0       0       0
   740 ;;Total ram usage:       10 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 1
   743 ;; This function calls:
   744 ;;		___lldiv
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text4
   751   000A1C                     __ptext4:
   752                           	callstack 0
   753   000A1C                     _Uart_Init:
   754                           	callstack 29
   755   000A1C                     
   756                           ;uart.c: 11: void Uart_Init(unsigned long baud);uart.c: 12: {;uart.c: 13:     TRISCbits.
      +                          RC6 = 0;
   757   000A1C  9C94               	bcf	148,6,c	;volatile
   758                           
   759                           ;uart.c: 14:     TRISCbits.RC7 = 1;
   760   000A1E  8E94               	bsf	148,7,c	;volatile
   761   000A20                     
   762                           ;uart.c: 15:     TXSTA = 0x24;
   763   000A20  0E24               	movlw	36
   764   000A22  6EAC               	movwf	172,c	;volatile
   765                           
   766                           ;uart.c: 16:     RCSTA = 0x90;
   767   000A24  0E90               	movlw	144
   768   000A26  6EAB               	movwf	171,c	;volatile
   769                           
   770                           ;uart.c: 17:     BAUDCON = 0x00;
   771   000A28  0E00               	movlw	0
   772   000A2A  6EB8               	movwf	184,c	;volatile
   773   000A2C                     
   774                           ;uart.c: 18:     BAUDCONbits.BRG16 = 1;
   775   000A2C  86B8               	bsf	184,3,c	;volatile
   776   000A2E                     
   777                           ;uart.c: 19:     unsigned int vx = (48000000/(baud*4))-1;
   778   000A2E  0E00               	movlw	0
   779   000A30  6E01               	movwf	___lldiv@dividend^0,c
   780   000A32  0E6C               	movlw	108
   781   000A34  6E02               	movwf	(___lldiv@dividend+1)^0,c
   782   000A36  0EDC               	movlw	220
   783   000A38  6E03               	movwf	(___lldiv@dividend+2)^0,c
   784   000A3A  0E02               	movlw	2
   785   000A3C  6E04               	movwf	(___lldiv@dividend+3)^0,c
   786   000A3E  C00E  F012         	movff	Uart_Init@baud,??_Uart_Init
   787   000A42  C00F  F013         	movff	Uart_Init@baud+1,??_Uart_Init+1
   788   000A46  C010  F014         	movff	Uart_Init@baud+2,??_Uart_Init+2
   789   000A4A  C011  F015         	movff	Uart_Init@baud+3,??_Uart_Init+3
   790   000A4E  0E02               	movlw	2
   791   000A50                     u195:
   792   000A50  90D8               	bcf	status,0,c
   793   000A52  3612               	rlcf	??_Uart_Init^0,f,c
   794   000A54  3613               	rlcf	(??_Uart_Init+1)^0,f,c
   795   000A56  3614               	rlcf	(??_Uart_Init+2)^0,f,c
   796   000A58  3615               	rlcf	(??_Uart_Init+3)^0,f,c
   797   000A5A  2EE8               	decfsz	wreg,f,c
   798   000A5C  EF28  F005         	goto	u195
   799   000A60  C012  F005         	movff	??_Uart_Init,___lldiv@divisor
   800   000A64  C013  F006         	movff	??_Uart_Init+1,___lldiv@divisor+1
   801   000A68  C014  F007         	movff	??_Uart_Init+2,___lldiv@divisor+2
   802   000A6C  C015  F008         	movff	??_Uart_Init+3,___lldiv@divisor+3
   803   000A70  ECBC  F004         	call	___lldiv	;wreg free
   804   000A74  0EFF               	movlw	255
   805   000A76  2401               	addwf	?___lldiv^0,w,c
   806   000A78  6E16               	movwf	Uart_Init@vx^0,c
   807   000A7A  0EFF               	movlw	255
   808   000A7C  2002               	addwfc	(?___lldiv+1)^0,w,c
   809   000A7E  6E17               	movwf	(Uart_Init@vx+1)^0,c
   810   000A80                     
   811                           ;uart.c: 20:     SPBRG = vx & 0x00FF;
   812   000A80  C016  FFAF         	movff	Uart_Init@vx,4015	;volatile
   813   000A84                     
   814                           ;uart.c: 21:     SPBRGH = vx >> 8;
   815   000A84  5017               	movf	(Uart_Init@vx+1)^0,w,c
   816   000A86  6EB0               	movwf	176,c	;volatile
   817   000A88  0012               	return		;funcret
   818   000A8A                     __end_of_Uart_Init:
   819                           	callstack 0
   820                           
   821 ;; *************** function ___lldiv *****************
   822 ;; Defined at:
   823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  dividend        4    0[COMRAM] unsigned long 
   826 ;;  divisor         4    4[COMRAM] unsigned long 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  quotient        4    8[COMRAM] unsigned long 
   829 ;;  counter         1   12[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  4    0[COMRAM] unsigned long 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         8       0       0       0       0       0       0       0       0
   840 ;;      Locals:         5       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:        13       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:       13 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_Uart_Init
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text5
   853   000978                     __ptext5:
   854                           	callstack 0
   855   000978                     ___lldiv:
   856                           	callstack 29
   857   000978  0E00               	movlw	0
   858   00097A  6E09               	movwf	___lldiv@quotient^0,c
   859   00097C  0E00               	movlw	0
   860   00097E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   861   000980  0E00               	movlw	0
   862   000982  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   863   000984  0E00               	movlw	0
   864   000986  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   865   000988  5005               	movf	___lldiv@divisor^0,w,c
   866   00098A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   867   00098C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   868   00098E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   869   000990  B4D8               	btfsc	status,2,c
   870   000992  EFCD  F004         	goto	u161
   871   000996  EFCF  F004         	goto	u160
   872   00099A                     u161:
   873   00099A  EF05  F005         	goto	l129
   874   00099E                     u160:
   875   00099E  0E01               	movlw	1
   876   0009A0  6E0D               	movwf	___lldiv@counter^0,c
   877   0009A2  EFD9  F004         	goto	l937
   878   0009A6                     l935:
   879   0009A6  90D8               	bcf	status,0,c
   880   0009A8  3605               	rlcf	___lldiv@divisor^0,f,c
   881   0009AA  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   882   0009AC  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   883   0009AE  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   884   0009B0  2A0D               	incf	___lldiv@counter^0,f,c
   885   0009B2                     l937:
   886   0009B2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   887   0009B4  EFDE  F004         	goto	u171
   888   0009B8  EFE0  F004         	goto	u170
   889   0009BC                     u171:
   890   0009BC  EFD3  F004         	goto	l935
   891   0009C0                     u170:
   892   0009C0                     l939:
   893   0009C0  90D8               	bcf	status,0,c
   894   0009C2  3609               	rlcf	___lldiv@quotient^0,f,c
   895   0009C4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   896   0009C6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   897   0009C8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   898   0009CA  5005               	movf	___lldiv@divisor^0,w,c
   899   0009CC  5C01               	subwf	___lldiv@dividend^0,w,c
   900   0009CE  5006               	movf	(___lldiv@divisor+1)^0,w,c
   901   0009D0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   902   0009D2  5007               	movf	(___lldiv@divisor+2)^0,w,c
   903   0009D4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   904   0009D6  5008               	movf	(___lldiv@divisor+3)^0,w,c
   905   0009D8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   906   0009DA  A0D8               	btfss	status,0,c
   907   0009DC  EFF2  F004         	goto	u181
   908   0009E0  EFF4  F004         	goto	u180
   909   0009E4                     u181:
   910   0009E4  EFFD  F004         	goto	l947
   911   0009E8                     u180:
   912   0009E8  5005               	movf	___lldiv@divisor^0,w,c
   913   0009EA  5E01               	subwf	___lldiv@dividend^0,f,c
   914   0009EC  5006               	movf	(___lldiv@divisor+1)^0,w,c
   915   0009EE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   916   0009F0  5007               	movf	(___lldiv@divisor+2)^0,w,c
   917   0009F2  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   918   0009F4  5008               	movf	(___lldiv@divisor+3)^0,w,c
   919   0009F6  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   920   0009F8  8009               	bsf	___lldiv@quotient^0,0,c
   921   0009FA                     l947:
   922   0009FA  90D8               	bcf	status,0,c
   923   0009FC  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   924   0009FE  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   925   000A00  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   926   000A02  3205               	rrcf	___lldiv@divisor^0,f,c
   927   000A04  2E0D               	decfsz	___lldiv@counter^0,f,c
   928   000A06  EFE0  F004         	goto	l939
   929   000A0A                     l129:
   930   000A0A  C009  F001         	movff	___lldiv@quotient,?___lldiv
   931   000A0E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   932   000A12  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   933   000A16  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   934   000A1A  0012               	return		;funcret
   935   000A1C                     __end_of___lldiv:
   936                           	callstack 0
   937                           
   938 ;; *************** function _Uart_Available *****************
   939 ;; Defined at:
   940 ;;		line 24 in file "uart.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMRAM] short 
   947 ;; Registers used:
   948 ;;		wreg, status,2
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   954 ;;      Params:         2       0       0       0       0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0
   956 ;;      Temps:          1       0       0       0       0       0       0       0       0
   957 ;;      Totals:         3       0       0       0       0       0       0       0       0
   958 ;;Total ram usage:        3 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text6
   968   000AE4                     __ptext6:
   969                           	callstack 0
   970   000AE4                     _Uart_Available:
   971                           	callstack 30
   972   000AE4                     
   973                           ;uart.c: 26:     return PIR1bits.RCIF ? 1 : 0;
   974   000AE4  BA9E               	btfsc	158,5,c	;volatile
   975   000AE6  EF77  F005         	goto	u211
   976   000AEA  EF7B  F005         	goto	u210
   977   000AEE                     u211:
   978   000AEE  6A03               	clrf	??_Uart_Available^0,c
   979   000AF0  2A03               	incf	??_Uart_Available^0,f,c
   980   000AF2  EF7C  F005         	goto	u218
   981   000AF6                     u210:
   982   000AF6  6A03               	clrf	??_Uart_Available^0,c
   983   000AF8                     u218:
   984   000AF8  5003               	movf	??_Uart_Available^0,w,c
   985   000AFA  6E01               	movwf	?_Uart_Available^0,c
   986   000AFC  6A02               	clrf	(?_Uart_Available+1)^0,c
   987   000AFE  0012               	return		;funcret
   988   000B00                     __end_of_Uart_Available:
   989                           	callstack 0
   990                           
   991                           	psect	rparam
   992   000000                     
   993                           	psect	config
   994                           
   995                           ;Config register CONFIG1L @ 0x300000
   996                           ;	PLL Prescaler Selection bits
   997                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   998                           ;	System Clock Postscaler Selection bits
   999                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1000                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1001                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1002   300000                     	org	3145728
  1003   300000  21                 	db	33
  1004                           
  1005                           ;Config register CONFIG1H @ 0x300001
  1006                           ;	Oscillator Selection bits
  1007                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1008                           ;	Fail-Safe Clock Monitor Enable bit
  1009                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1010                           ;	Internal/External Oscillator Switchover bit
  1011                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1012   300001                     	org	3145729
  1013   300001  0E                 	db	14
  1014                           
  1015                           ;Config register CONFIG2L @ 0x300002
  1016                           ;	Power-up Timer Enable bit
  1017                           ;	PWRT = OFF, PWRT disabled
  1018                           ;	Brown-out Reset Enable bits
  1019                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1020                           ;	Brown-out Reset Voltage bits
  1021                           ;	BORV = 3, Minimum setting 2.05V
  1022                           ;	USB Voltage Regulator Enable bit
  1023                           ;	VREGEN = OFF, USB voltage regulator disabled
  1024   300002                     	org	3145730
  1025   300002  19                 	db	25
  1026                           
  1027                           ;Config register CONFIG2H @ 0x300003
  1028                           ;	Watchdog Timer Enable bit
  1029                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1030                           ;	Watchdog Timer Postscale Select bits
  1031                           ;	WDTPS = 32768, 1:32768
  1032   300003                     	org	3145731
  1033   300003  1E                 	db	30
  1034                           
  1035                           ; Padding undefined space
  1036   300004                     	org	3145732
  1037   300004  FF                 	db	255
  1038                           
  1039                           ;Config register CONFIG3H @ 0x300005
  1040                           ;	CCP2 MUX bit
  1041                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1042                           ;	PORTB A/D Enable bit
  1043                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1044                           ;	Low-Power Timer 1 Oscillator Enable bit
  1045                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1046                           ;	MCLR Pin Enable bit
  1047                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1048   300005                     	org	3145733
  1049   300005  81                 	db	129
  1050                           
  1051                           ;Config register CONFIG4L @ 0x300006
  1052                           ;	Stack Full/Underflow Reset Enable bit
  1053                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1054                           ;	Single-Supply ICSP Enable bit
  1055                           ;	LVP = OFF, Single-Supply ICSP disabled
  1056                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1057                           ;	ICPRT = OFF, ICPORT disabled
  1058                           ;	Extended Instruction Set Enable bit
  1059                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1060                           ;	Background Debugger Enable bit
  1061                           ;	DEBUG = 0x1, unprogrammed default
  1062   300006                     	org	3145734
  1063   300006  81                 	db	129
  1064                           
  1065                           ; Padding undefined space
  1066   300007                     	org	3145735
  1067   300007  FF                 	db	255
  1068                           
  1069                           ;Config register CONFIG5L @ 0x300008
  1070                           ;	Code Protection bit
  1071                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1072                           ;	Code Protection bit
  1073                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1074                           ;	Code Protection bit
  1075                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1076                           ;	Code Protection bit
  1077                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1078   300008                     	org	3145736
  1079   300008  0F                 	db	15
  1080                           
  1081                           ;Config register CONFIG5H @ 0x300009
  1082                           ;	Boot Block Code Protection bit
  1083                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1084                           ;	Data EEPROM Code Protection bit
  1085                           ;	CPD = OFF, Data EEPROM is not code-protected
  1086   300009                     	org	3145737
  1087   300009  C0                 	db	192
  1088                           
  1089                           ;Config register CONFIG6L @ 0x30000A
  1090                           ;	Write Protection bit
  1091                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1092                           ;	Write Protection bit
  1093                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1094                           ;	Write Protection bit
  1095                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1096                           ;	Write Protection bit
  1097                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1098   30000A                     	org	3145738
  1099   30000A  0F                 	db	15
  1100                           
  1101                           ;Config register CONFIG6H @ 0x30000B
  1102                           ;	Configuration Register Write Protection bit
  1103                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1104                           ;	Boot Block Write Protection bit
  1105                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1106                           ;	Data EEPROM Write Protection bit
  1107                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1108   30000B                     	org	3145739
  1109   30000B  E0                 	db	224
  1110                           
  1111                           ;Config register CONFIG7L @ 0x30000C
  1112                           ;	Table Read Protection bit
  1113                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1114                           ;	Table Read Protection bit
  1115                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1116                           ;	Table Read Protection bit
  1117                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1118                           ;	Table Read Protection bit
  1119                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1120   30000C                     	org	3145740
  1121   30000C  0F                 	db	15
  1122                           
  1123                           ;Config register CONFIG7H @ 0x30000D
  1124                           ;	Boot Block Table Read Protection bit
  1125                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1126   30000D                     	org	3145741
  1127   30000D  40                 	db	64
  1128                           tosu	equ	0xFFF
  1129                           tosh	equ	0xFFE
  1130                           tosl	equ	0xFFD
  1131                           stkptr	equ	0xFFC
  1132                           pclatu	equ	0xFFB
  1133                           pclath	equ	0xFFA
  1134                           pcl	equ	0xFF9
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           prodh	equ	0xFF4
  1140                           prodl	equ	0xFF3
  1141                           indf0	equ	0xFEF
  1142                           postinc0	equ	0xFEE
  1143                           postdec0	equ	0xFED
  1144                           preinc0	equ	0xFEC
  1145                           plusw0	equ	0xFEB
  1146                           fsr0h	equ	0xFEA
  1147                           fsr0l	equ	0xFE9
  1148                           wreg	equ	0xFE8
  1149                           indf1	equ	0xFE7
  1150                           postinc1	equ	0xFE6
  1151                           postdec1	equ	0xFE5
  1152                           preinc1	equ	0xFE4
  1153                           plusw1	equ	0xFE3
  1154                           fsr1h	equ	0xFE2
  1155                           fsr1l	equ	0xFE1
  1156                           bsr	equ	0xFE0
  1157                           indf2	equ	0xFDF
  1158                           postinc2	equ	0xFDE
  1159                           postdec2	equ	0xFDD
  1160                           preinc2	equ	0xFDC
  1161                           plusw2	equ	0xFDB
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8

Data Sizes:
    Strings     144
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Uart_Send_String@info	PTR unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), STR_2(CODE[18]), STR_3(CODE[20]), STR_4(CODE[18]), 
		 -> STR_5(CODE[3]), STR_6(CODE[18]), STR_7(CODE[16]), STR_8(CODE[18]), 
		 -> STR_9(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_Uart_Init
    _Uart_Send_String->_Uart_Send_Char
    _Uart_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1201
                                             23 COMRAM     2     2      0
                     _Uart_Available
                          _Uart_Init
                          _Uart_Read
                   _Uart_Send_String
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     1     0      1     744
                                              1 COMRAM     1     0      1
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             13 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Uart_Available                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Available
   _Uart_Init
     ___lldiv
   _Uart_Read
   _Uart_Send_String
     _Uart_Send_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1A       1       27.4%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2A      0       0      26        0.0%
BITBIGSFRlhlh        C      0       0      23        0.0%
BITBIGSFRlhll        9      0       0      24        0.0%
BITBIGSFRlhhh        8      0       0      21        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRlhhlh       7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      27        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Apr 19 14:10:42 2024

                      l24 0902                        l26 0910                        l27 091E  
                      l28 092C                        l61 0AFE                        l80 0AE2  
                      l64 0B02                        l73 0ABC                        l58 0A88  
                      l67 0B14                        l76 0ABE                        l78 0ACC  
                      l79 0ADE                        u10 0B10                        u11 0B0C  
                      u80 0ACC                        u81 0AC8                        u90 0ADA  
                      u91 0AD6                       l136 0A1A                       l129 0A0A  
                     l825 0ABE                       l931 0988                       l827 0ADA  
                     l941 09CA                       l933 099E                       l829 0AE0  
                     l943 09E8                       l935 09A6                       l951 0A1C  
                     l775 0B02                       l945 09F8                       l937 09B2  
                     l929 0978                       l961 0A84                       l953 0A20  
                     l777 0B10                       l971 0AE4                       l947 09FA  
                     l939 09C0                       l955 0A2C                       l963 0A8A  
                     l949 0A04                       l957 0A2E                       l965 0A8E  
                     l981 089A                       l959 0A80                       l967 0A9E  
                     l991 08C2                       l983 089C                       l975 0892  
                     l969 0AA0                       l993 08CA                       l985 089E  
                     l977 0896                       l995 08D2                       l987 08B2  
                     l979 0898                       l997 08DA                       l989 08BA  
                     l999 08F8                       u200 0ABC                       u201 0AB8  
                     u210 0AF6                       u211 0AEE                       u220 08F8  
                     u221 08F4                       u160 099E                       u161 099A  
                     u218 0AF8                       u170 09C0                       u171 09BC  
                     u180 09E8                       u181 09E4                       u195 0A50  
                     wreg 0FE8                      l1001 0904                      l1003 0912  
                    l1011 093A                      l1021 094E                      l1005 0920  
                    l1007 092E                      STR_1 0801                      STR_2 0829  
                    STR_3 0815                      STR_4 083B                      STR_5 0812  
                    STR_6 084D                      STR_7 0871                      STR_8 085F  
                    STR_9 0881                      _main 0892                      start 0000  
            ___param_bank 0000                     ?_main 0001           __end_of___lldiv 0A1C  
                   _RCREG 0FAE                     _RCSTA 0FAB                     _SPBRG 0FAF  
                   _TXREG 0FAD                     _TXSTA 0FAC                     tablat 0FF5  
__end_of_Uart_Send_String 0ABE                     status 0FD8           __initialization 0B16  
            __end_of_main 0978                    ??_main 0018             __activetblptr 0002  
          _Uart_Available 0AE4                    _SPBRGH 0FB0                 ??___lldiv 0009  
                  isa$std 0001            _Uart_Send_Char 0B00              __mediumconst 0000  
  __end_of_Uart_Available 0B00                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8                __accesstop 0060   __end_of__initialization 0B18  
           ___rparam_used 0001            __pcstackCOMRAM 0001    __end_of_Uart_Send_Char 0B16  
         ?_Uart_Available 0001         __end_of_Uart_Init 0A8A         __end_of_Uart_Read 0AE4  
         ?_Uart_Send_Char 0001                   _BAUDCON 0FB8               Uart_Init@vx 0016  
       ?_Uart_Send_String 0002      Uart_Send_Char@txData 0001        ??_Uart_Send_String 0003  
                 __Hparam 0000                   __Lparam 0000                   ___lldiv 0978  
            __psmallconst 0800                   __pcinit 0B16                   __ramtop 0800  
                 _dato_rx 001A                   __ptext0 0892                   __ptext1 0A8A  
                 __ptext2 0B00                   __ptext3 0ABE                   __ptext4 0A1C  
                 __ptext5 0978                   __ptext6 0AE4      end_of_initialization 0B18  
           __Lmediumconst 0000           ___lldiv@divisor 0005             Uart_Init@baud 000E  
         ___lldiv@counter 000D                 _RCSTAbits 0FAB                 _TRISBbits 0F93  
               _TRISCbits 0F94                 _TXSTAbits 0FAC               _BAUDCONbits 0FB8  
        ??_Uart_Available 0003       start_initialization 0B16          ??_Uart_Send_Char 0001  
               _Uart_Init 0A1C                 _Uart_Read 0ABE               __pbssCOMRAM 001A  
              ?_Uart_Init 000E                ?_Uart_Read 0001                  ?___lldiv 0001  
             __smallconst 0800                  _LATBbits 0F8A                  _PIR1bits 0F9E  
              _ADCON1bits 0FC1                  __Hrparam 0000               ??_Uart_Init 0012  
             ??_Uart_Read 0001                  __Lrparam 0000      Uart_Send_String@info 0002  
                isa$xinst 0000          _Uart_Send_String 0A8A          ___lldiv@dividend 0001  
        ___lldiv@quotient 0009  
