

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 27 15:35:00 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   0008DA                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display
    57   0008DA  3F                 	db	63
    58   0008DB  06                 	db	6
    59   0008DC  5B                 	db	91
    60   0008DD  4F                 	db	79
    61   0008DE  66                 	db	102
    62   0008DF  6D                 	db	109
    63   0008E0  7D                 	db	125
    64   0008E1  07                 	db	7
    65   0008E2  7F                 	db	127
    66   0008E3  6F                 	db	111
    67                           
    68                           	psect	nvCOMRAM
    69   00000E                     __pnvCOMRAM:
    70                           	callstack 0
    71   00000E                     _decenas:
    72                           	callstack 0
    73   00000E                     	ds	1
    74   000000                     _LATBbits	set	3978
    75   000000                     _LATD	set	3980
    76   000000                     _TRISBbits	set	3987
    77   000000                     _ADCON1bits	set	4033
    78   000000                     _TRISD	set	3989
    79                           
    80                           ; #config settings
    81                           
    82                           	psect	cinit
    83   0008B2                     __pcinit:
    84                           	callstack 0
    85   0008B2                     start_initialization:
    86                           	callstack 0
    87   0008B2                     __initialization:
    88                           	callstack 0
    89                           
    90                           ; Initialize objects allocated to COMRAM (10 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92   0008B2  0EDA               	movlw	low __pidataCOMRAM
    93   0008B4  6EF6               	movwf	tblptrl,c
    94   0008B6  0E08               	movlw	high __pidataCOMRAM
    95   0008B8  6EF7               	movwf	tblptrh,c
    96   0008BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97   0008BC  6EF8               	movwf	tblptru,c
    98   0008BE  EE00  F001         	lfsr	0,__pdataCOMRAM
    99   0008C2  EE10 F00A          	lfsr	1,10
   100   0008C6                     copy_data0:
   101   0008C6  0009               	tblrd		*+
   102   0008C8  CFF5 FFEE          	movff	tablat,postinc0
   103   0008CC  50E5               	movf	postdec1,w,c
   104   0008CE  50E1               	movf	fsr1l,w,c
   105   0008D0  E1FA               	bnz	copy_data0
   106                           
   107                           ; Clear objects allocated to COMRAM (1 bytes)
   108   0008D2  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   109   0008D4                     end_of_initialization:
   110                           	callstack 0
   111   0008D4                     __end_of__initialization:
   112                           	callstack 0
   113   0008D4  0100               	movlb	0
   114   0008D6  EF01  F004         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117   00000F                     __pbssCOMRAM:
   118                           	callstack 0
   119   00000F                     _unidades:
   120                           	callstack 0
   121   00000F                     	ds	1
   122                           
   123                           	psect	dataCOMRAM
   124   000001                     __pdataCOMRAM:
   125                           	callstack 0
   126   000001                     _display:
   127                           	callstack 0
   128   000001                     	ds	10
   129                           
   130                           	psect	cstackCOMRAM
   131   00000B                     __pcstackCOMRAM:
   132                           	callstack 0
   133   00000B                     ??_main:
   134                           
   135                           ; 1 bytes @ 0x0
   136   00000B                     	ds	1
   137   00000C                     main@i:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x1
   141   00000C                     	ds	2
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 29 in file "multiplexacion.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  i               2    1[COMRAM] int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   162 ;;      Params:         0       0       0       0       0       0       0       0       0
   163 ;;      Locals:         2       0       0       0       0       0       0       0       0
   164 ;;      Temps:          1       0       0       0       0       0       0       0       0
   165 ;;      Totals:         3       0       0       0       0       0       0       0       0
   166 ;;Total ram usage:        3 bytes
   167 ;; This function calls:
   168 ;;		Nothing
   169 ;; This function is called by:
   170 ;;		Startup code after reset
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text0
   175   000802                     __ptext0:
   176                           	callstack 0
   177   000802                     _main:
   178                           	callstack 31
   179   000802                     
   180                           ;multiplexacion.c: 30:     ADCON1bits.PCFG = 0x0F;
   181   000802  0E0F               	movlw	15
   182   000804  12C1               	iorwf	193,f,c	;volatile
   183   000806                     
   184                           ;multiplexacion.c: 31:     TRISBbits.RB0 = 0;
   185   000806  9093               	bcf	147,0,c	;volatile
   186   000808                     
   187                           ;multiplexacion.c: 32:     TRISBbits.RB1 = 0;
   188   000808  9293               	bcf	147,1,c	;volatile
   189                           
   190                           ;multiplexacion.c: 33:     TRISD = 0x00;
   191   00080A  0E00               	movlw	0
   192   00080C  6E95               	movwf	149,c	;volatile
   193                           
   194                           ;multiplexacion.c: 34:     LATD = 0x00;
   195   00080E  0E00               	movlw	0
   196   000810  6E8C               	movwf	140,c	;volatile
   197   000812                     
   198                           ;multiplexacion.c: 35:     LATBbits.LB0 = 0;
   199   000812  908A               	bcf	138,0,c	;volatile
   200   000814                     
   201                           ;multiplexacion.c: 36:     LATBbits.LB1 = 0;
   202   000814  928A               	bcf	138,1,c	;volatile
   203   000816                     l23:
   204                           
   205                           ;multiplexacion.c: 39:         for (decenas = 0; decenas < 10; decenas++) {
   206   000816  0E00               	movlw	0
   207   000818  6E0E               	movwf	_decenas^0,c
   208   00081A                     l722:
   209                           
   210                           ;multiplexacion.c: 40:             for (unidades = 0; unidades < 10; unidades++) {
   211   00081A  0E00               	movlw	0
   212   00081C  6E0F               	movwf	_unidades^0,c
   213   00081E                     l728:
   214                           
   215                           ;multiplexacion.c: 41:                 for (int i = 0; i < 20; i++) {
   216   00081E  0E00               	movlw	0
   217   000820  6E0D               	movwf	(main@i+1)^0,c
   218   000822  0E00               	movlw	0
   219   000824  6E0C               	movwf	main@i^0,c
   220   000826                     l28:
   221                           
   222                           ;multiplexacion.c: 42:                     LATBbits.LB0 = 1;
   223   000826  808A               	bsf	138,0,c	;volatile
   224                           
   225                           ;multiplexacion.c: 43:                     LATBbits.LB1 = 0;
   226   000828  928A               	bcf	138,1,c	;volatile
   227   00082A                     
   228                           ;multiplexacion.c: 44:                     LATD = display[unidades];
   229   00082A  500F               	movf	_unidades^0,w,c
   230   00082C  0F01               	addlw	low _display
   231   00082E  6ED9               	movwf	fsr2l,c
   232   000830  6ADA               	clrf	fsr2h,c
   233   000832  50DF               	movf	indf2,w,c
   234   000834  6E8C               	movwf	140,c	;volatile
   235   000836                     
   236                           ;multiplexacion.c: 45:                     _delay((unsigned long)((4)*(48000000/4000.0))
      +                          );
   237   000836  0E3F               	movlw	63
   238   000838  6E0B               	movwf	??_main^0,c
   239   00083A  0E55               	movlw	85
   240   00083C                     u47:
   241   00083C  2EE8               	decfsz	wreg,f,c
   242   00083E  D7FE               	bra	u47
   243   000840  2E0B               	decfsz	??_main^0,f,c
   244   000842  D7FC               	bra	u47
   245   000844  0000               	nop	
   246   000846                     
   247                           ;multiplexacion.c: 47:                     LATBbits.LB1 = 1;
   248   000846  828A               	bsf	138,1,c	;volatile
   249   000848                     
   250                           ;multiplexacion.c: 48:                     LATBbits.LB0 = 0;
   251   000848  908A               	bcf	138,0,c	;volatile
   252   00084A                     
   253                           ;multiplexacion.c: 49:                     LATD = display[decenas];
   254   00084A  500E               	movf	_decenas^0,w,c
   255   00084C  0F01               	addlw	low _display
   256   00084E  6ED9               	movwf	fsr2l,c
   257   000850  6ADA               	clrf	fsr2h,c
   258   000852  50DF               	movf	indf2,w,c
   259   000854  6E8C               	movwf	140,c	;volatile
   260                           
   261                           ;multiplexacion.c: 50:                     _delay((unsigned long)((4)*(48000000/4000.0))
      +                          );
   262   000856  0E3F               	movlw	63
   263   000858  6E0B               	movwf	??_main^0,c
   264   00085A  0E55               	movlw	85
   265   00085C                     u57:
   266   00085C  2EE8               	decfsz	wreg,f,c
   267   00085E  D7FE               	bra	u57
   268   000860  2E0B               	decfsz	??_main^0,f,c
   269   000862  D7FC               	bra	u57
   270   000864  0000               	nop	
   271   000866                     
   272                           ;multiplexacion.c: 51:                 }
   273   000866  4A0C               	infsnz	main@i^0,f,c
   274   000868  2A0D               	incf	(main@i+1)^0,f,c
   275   00086A  BE0D               	btfsc	(main@i+1)^0,7,c
   276   00086C  EF41  F004         	goto	u11
   277   000870  500D               	movf	(main@i+1)^0,w,c
   278   000872  E109               	bnz	u10
   279   000874  0E14               	movlw	20
   280   000876  5C0C               	subwf	main@i^0,w,c
   281   000878  A0D8               	btfss	status,0,c
   282   00087A  EF41  F004         	goto	u11
   283   00087E  EF43  F004         	goto	u10
   284   000882                     u11:
   285   000882  EF13  F004         	goto	l28
   286   000886                     u10:
   287   000886                     
   288                           ;multiplexacion.c: 52:             }
   289   000886  2A0F               	incf	_unidades^0,f,c
   290   000888  0E09               	movlw	9
   291   00088A  640F               	cpfsgt	_unidades^0,c
   292   00088C  EF4A  F004         	goto	u21
   293   000890  EF4C  F004         	goto	u20
   294   000894                     u21:
   295   000894  EF0F  F004         	goto	l728
   296   000898                     u20:
   297   000898                     
   298                           ;multiplexacion.c: 53:         }
   299   000898  2A0E               	incf	_decenas^0,f,c
   300   00089A  0E09               	movlw	9
   301   00089C  640E               	cpfsgt	_decenas^0,c
   302   00089E  EF53  F004         	goto	u31
   303   0008A2  EF55  F004         	goto	u30
   304   0008A6                     u31:
   305   0008A6  EF0D  F004         	goto	l722
   306   0008AA                     u30:
   307   0008AA  EF0B  F004         	goto	l23
   308   0008AE  EF00  F000         	goto	start
   309   0008B2                     __end_of_main:
   310                           	callstack 0
   311                           
   312                           	psect	smallconst
   313   000800                     __psmallconst:
   314                           	callstack 0
   315   000800  00                 	db	0
   316   000801  00                 	db	0	; dummy byte at the end
   317   000000                     
   318                           	psect	rparam
   319   000000                     
   320                           	psect	config
   321                           
   322                           ;Config register CONFIG1L @ 0x300000
   323                           ;	PLL Prescaler Selection bits
   324                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   325                           ;	System Clock Postscaler Selection bits
   326                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   327                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   328                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   329   300000                     	org	3145728
   330   300000  21                 	db	33
   331                           
   332                           ;Config register CONFIG1H @ 0x300001
   333                           ;	Oscillator Selection bits
   334                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   335                           ;	Fail-Safe Clock Monitor Enable bit
   336                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   337                           ;	Internal/External Oscillator Switchover bit
   338                           ;	IESO = OFF, Oscillator Switchover mode disabled
   339   300001                     	org	3145729
   340   300001  0E                 	db	14
   341                           
   342                           ;Config register CONFIG2L @ 0x300002
   343                           ;	Power-up Timer Enable bit
   344                           ;	PWRT = OFF, PWRT disabled
   345                           ;	Brown-out Reset Enable bits
   346                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   347                           ;	Brown-out Reset Voltage bits
   348                           ;	BORV = 3, Minimum setting 2.05V
   349                           ;	USB Voltage Regulator Enable bit
   350                           ;	VREGEN = OFF, USB voltage regulator disabled
   351   300002                     	org	3145730
   352   300002  19                 	db	25
   353                           
   354                           ;Config register CONFIG2H @ 0x300003
   355                           ;	Watchdog Timer Enable bit
   356                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   357                           ;	Watchdog Timer Postscale Select bits
   358                           ;	WDTPS = 32768, 1:32768
   359   300003                     	org	3145731
   360   300003  1E                 	db	30
   361                           
   362                           ; Padding undefined space
   363   300004                     	org	3145732
   364   300004  FF                 	db	255
   365                           
   366                           ;Config register CONFIG3H @ 0x300005
   367                           ;	CCP2 MUX bit
   368                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   369                           ;	PORTB A/D Enable bit
   370                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   371                           ;	Low-Power Timer 1 Oscillator Enable bit
   372                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   373                           ;	MCLR Pin Enable bit
   374                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   375   300005                     	org	3145733
   376   300005  81                 	db	129
   377                           
   378                           ;Config register CONFIG4L @ 0x300006
   379                           ;	Stack Full/Underflow Reset Enable bit
   380                           ;	STVREN = ON, Stack full/underflow will cause Reset
   381                           ;	Single-Supply ICSP Enable bit
   382                           ;	LVP = OFF, Single-Supply ICSP disabled
   383                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   384                           ;	ICPRT = OFF, ICPORT disabled
   385                           ;	Extended Instruction Set Enable bit
   386                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   387                           ;	Background Debugger Enable bit
   388                           ;	DEBUG = 0x1, unprogrammed default
   389   300006                     	org	3145734
   390   300006  81                 	db	129
   391                           
   392                           ; Padding undefined space
   393   300007                     	org	3145735
   394   300007  FF                 	db	255
   395                           
   396                           ;Config register CONFIG5L @ 0x300008
   397                           ;	Code Protection bit
   398                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   399                           ;	Code Protection bit
   400                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   401                           ;	Code Protection bit
   402                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   403                           ;	Code Protection bit
   404                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   405   300008                     	org	3145736
   406   300008  0F                 	db	15
   407                           
   408                           ;Config register CONFIG5H @ 0x300009
   409                           ;	Boot Block Code Protection bit
   410                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   411                           ;	Data EEPROM Code Protection bit
   412                           ;	CPD = OFF, Data EEPROM is not code-protected
   413   300009                     	org	3145737
   414   300009  C0                 	db	192
   415                           
   416                           ;Config register CONFIG6L @ 0x30000A
   417                           ;	Write Protection bit
   418                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   419                           ;	Write Protection bit
   420                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   421                           ;	Write Protection bit
   422                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   423                           ;	Write Protection bit
   424                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   425   30000A                     	org	3145738
   426   30000A  0F                 	db	15
   427                           
   428                           ;Config register CONFIG6H @ 0x30000B
   429                           ;	Configuration Register Write Protection bit
   430                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   431                           ;	Boot Block Write Protection bit
   432                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   433                           ;	Data EEPROM Write Protection bit
   434                           ;	WRTD = OFF, Data EEPROM is not write-protected
   435   30000B                     	org	3145739
   436   30000B  E0                 	db	224
   437                           
   438                           ;Config register CONFIG7L @ 0x30000C
   439                           ;	Table Read Protection bit
   440                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   441                           ;	Table Read Protection bit
   442                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   443                           ;	Table Read Protection bit
   444                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   445                           ;	Table Read Protection bit
   446                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   447   30000C                     	org	3145740
   448   30000C  0F                 	db	15
   449                           
   450                           ;Config register CONFIG7H @ 0x30000D
   451                           ;	Boot Block Table Read Protection bit
   452                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   453   30000D                     	org	3145741
   454   30000D  40                 	db	64
   455                           tosu	equ	0xFFF
   456                           tosh	equ	0xFFE
   457                           tosl	equ	0xFFD
   458                           stkptr	equ	0xFFC
   459                           pclatu	equ	0xFFB
   460                           pclath	equ	0xFFA
   461                           pcl	equ	0xFF9
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           prodh	equ	0xFF4
   467                           prodl	equ	0xFF3
   468                           indf0	equ	0xFEF
   469                           postinc0	equ	0xFEE
   470                           postdec0	equ	0xFED
   471                           preinc0	equ	0xFEC
   472                           plusw0	equ	0xFEB
   473                           fsr0h	equ	0xFEA
   474                           fsr0l	equ	0xFE9
   475                           wreg	equ	0xFE8
   476                           indf1	equ	0xFE7
   477                           postinc1	equ	0xFE6
   478                           postdec1	equ	0xFE5
   479                           preinc1	equ	0xFE4
   480                           plusw1	equ	0xFE3
   481                           fsr1h	equ	0xFE2
   482                           fsr1l	equ	0xFE1
   483                           bsr	equ	0xFE0
   484                           indf2	equ	0xFDF
   485                           postinc2	equ	0xFDE
   486                           postdec2	equ	0xFDD
   487                           preinc2	equ	0xFDC
   488                           plusw2	equ	0xFDB
   489                           fsr2h	equ	0xFDA
   490                           fsr2l	equ	0xFD9
   491                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       F       1       15.8%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRllll       2A      0       0      26        0.0%
BITBIGSFRllh         6      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      25        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F       3        0.0%
DATA                 0      0       F       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 27 15:35:00 2024

                     l23 0816                       l28 0826                       u10 0886  
                     u11 0882                       u20 0898                       u21 0894  
                     u30 08AA                       u31 08A6                       u47 083C  
                     u57 085C                      l710 0806                      l712 0808  
                    l722 081A                      l714 0812                      l740 0848  
                    l716 0814                      l708 0802                      l750 0898  
                    l742 084A                      l734 082A                      l752 089A  
                    l744 0866                      l736 0836                      l728 081E  
                    l746 0886                      l738 0846                      l748 0888  
                    wreg 0FE8                     _LATD 0F8C                     _main 0802  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_main 000B                    _TRISD 0F95                    main@i 000C  
                  tablat 0FF5                    status 0FD8          __initialization 08B2  
           __end_of_main 08B2                   ??_main 000B            __activetblptr 0000  
                 isa$std 0001             __pdataCOMRAM 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 08D4            ___rparam_used 0001  
         __pcstackCOMRAM 000B               __pnvCOMRAM 000E                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  _decenas 000E  
                __pcinit 08B2                  __ramtop 0800                  __ptext0 0802  
                _display 0001     end_of_initialization 08D4                  postdec1 0FE5  
                postinc0 0FEE                _TRISBbits 0F93            __pidataCOMRAM 08DA  
    start_initialization 08B2              __pbssCOMRAM 000F              __smallconst 0800  
               _LATBbits 0F8A               _ADCON1bits 0FC1                copy_data0 08C6  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               _unidades 000F  
