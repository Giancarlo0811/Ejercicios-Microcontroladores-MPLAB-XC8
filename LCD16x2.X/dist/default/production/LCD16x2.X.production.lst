

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 27 16:39:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 23/03/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   003590                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _v
   101   003590  03FF               	dw	1023
   102                           
   103                           	psect	idataBANK0
   104   00358C                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _t
   108   00358C  8F5C               	dw	36700
   109   00358E  41C2               	dw	16834
   110                           
   111                           	psect	smallconst
   112   000800                     __psmallconst:
   113                           	callstack 0
   114   000800  00                 	db	0
   115   000801                     _figura_2:
   116                           	callstack 0
   117   000801  04                 	db	4
   118   000802  11                 	db	17
   119   000803  0E                 	db	14
   120   000804  04                 	db	4
   121   000805  04                 	db	4
   122   000806  0A                 	db	10
   123   000807  11                 	db	17
   124   000808  00                 	db	0
   125   000809                     __end_of_figura_2:
   126                           	callstack 0
   127   000809                     _figura_1:
   128                           	callstack 0
   129   000809  0A                 	db	10
   130   00080A  0A                 	db	10
   131   00080B  0A                 	db	10
   132   00080C  00                 	db	0
   133   00080D  11                 	db	17
   134   00080E  11                 	db	17
   135   00080F  0E                 	db	14
   136   000810  00                 	db	0
   137   000811                     __end_of_figura_1:
   138                           	callstack 0
   139   000000                     _LATDbits	set	3980
   140   000000                     _ADCON1bits	set	4033
   141   000000                     _TRISDbits	set	3989
   142   000811                     STR_3:
   143   000811  43                 	db	67	;'C'
   144   000812  47                 	db	71	;'G'
   145   000813  52                 	db	82	;'R'
   146   000814  41                 	db	65	;'A'
   147   000815  4D                 	db	77	;'M'
   148   000816  20                 	db	32
   149   000817  43                 	db	67	;'C'
   150   000818  61                 	db	97	;'a'
   151   000819  72                 	db	114	;'r'
   152   00081A  61                 	db	97	;'a'
   153   00081B  63                 	db	99	;'c'
   154   00081C  74                 	db	116	;'t'
   155   00081D  65                 	db	101	;'e'
   156   00081E  72                 	db	114	;'r'
   157   00081F  65                 	db	101	;'e'
   158   000820  73                 	db	115	;'s'
   159   000821  00                 	db	0
   160   000822                     STR_1:
   161   000822  54                 	db	84	;'T'
   162   000823  65                 	db	101	;'e'
   163   000824  73                 	db	115	;'s'
   164   000825  74                 	db	116	;'t'
   165   000826  20                 	db	32
   166   000827  4C                 	db	76	;'L'
   167   000828  43                 	db	67	;'C'
   168   000829  44                 	db	68	;'D'
   169   00082A  20                 	db	32
   170   00082B  31                 	db	49	;'1'
   171   00082C  36                 	db	54	;'6'
   172   00082D  78                 	db	120	;'x'
   173   00082E  32                 	db	50	;'2'
   174   00082F  00                 	db	0
   175   000830                     STR_6:
   176   000830  46                 	db	70	;'F'
   177   000831  6C                 	db	108	;'l'
   178   000832  6F                 	db	111	;'o'
   179   000833  61                 	db	97	;'a'
   180   000834  74                 	db	116	;'t'
   181   000835  3A                 	db	58	;':'
   182   000836  20                 	db	32
   183   000837  25                 	db	37
   184   000838  30                 	db	48	;'0'
   185   000839  2E                 	db	46
   186   00083A  32                 	db	50	;'2'
   187   00083B  66                 	db	102	;'f'
   188   00083C  00                 	db	0
   189   00083D                     STR_2:
   190   00083D  50                 	db	80	;'P'
   191   00083E  49                 	db	73	;'I'
   192   00083F  43                 	db	67	;'C'
   193   000840  31                 	db	49	;'1'
   194   000841  38                 	db	56	;'8'
   195   000842  46                 	db	70	;'F'
   196   000843  34                 	db	52	;'4'
   197   000844  35                 	db	53	;'5'
   198   000845  35                 	db	53	;'5'
   199   000846  30                 	db	48	;'0'
   200   000847  00                 	db	0
   201   000848                     STR_5:
   202   000848  49                 	db	73	;'I'
   203   000849  6E                 	db	110	;'n'
   204   00084A  74                 	db	116	;'t'
   205   00084B  3A                 	db	58	;':'
   206   00084C  20                 	db	32
   207   00084D  25                 	db	37
   208   00084E  75                 	db	117	;'u'
   209   00084F  00                 	db	0
   210   000850                     STR_4:
   211   000850  48                 	db	72	;'H'
   212   000851  6F                 	db	111	;'o'
   213   000852  6C                 	db	108	;'l'
   214   000853  61                 	db	97	;'a'
   215   000854  00                 	db	0
   216   000855                     STR_7:
   217   000855  69                 	db	105	;'i'
   218   000856  6E                 	db	110	;'n'
   219   000857  66                 	db	102	;'f'
   220   000858  00                 	db	0
   221   000859                     STR_10:
   222   000859  6E                 	db	110	;'n'
   223   00085A  61                 	db	97	;'a'
   224   00085B  6E                 	db	110	;'n'
   225   00085C  00                 	db	0
   226   00085D  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231   00310E                     __pcinit:
   232                           	callstack 0
   233   00310E                     start_initialization:
   234                           	callstack 0
   235   00310E                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to BANK0 (4 bytes)
   239                           ; load TBLPTR registers with __pidataBANK0
   240   00310E  0E8C               	movlw	low __pidataBANK0
   241   003110  6EF6               	movwf	tblptrl,c
   242   003112  0E35               	movlw	high __pidataBANK0
   243   003114  6EF7               	movwf	tblptrh,c
   244   003116  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   245   003118  6EF8               	movwf	tblptru,c
   246   00311A  EE00  F0AD         	lfsr	0,__pdataBANK0
   247   00311E  EE10 F004          	lfsr	1,4
   248   003122                     copy_data0:
   249   003122  0009               	tblrd		*+
   250   003124  CFF5 FFEE          	movff	tablat,postinc0
   251   003128  50E5               	movf	postdec1,w,c
   252   00312A  50E1               	movf	fsr1l,w,c
   253   00312C  E1FA               	bnz	copy_data0
   254                           
   255                           ; Initialize objects allocated to COMRAM (2 bytes)
   256                           ; load TBLPTR registers with __pidataCOMRAM
   257   00312E  0E90               	movlw	low __pidataCOMRAM
   258   003130  6EF6               	movwf	tblptrl,c
   259   003132  0E35               	movlw	high __pidataCOMRAM
   260   003134  6EF7               	movwf	tblptrh,c
   261   003136  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   262   003138  6EF8               	movwf	tblptru,c
   263   00313A  0009               	tblrd		*+	;fetch initializer
   264   00313C  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   265   003140  0009               	tblrd		*+	;fetch initializer
   266   003142  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   267                           
   268                           ; Clear objects allocated to BANK1 (80 bytes)
   269   003146  EE01  F000         	lfsr	0,__pbssBANK1
   270   00314A  0E50               	movlw	80
   271   00314C                     clear_0:
   272   00314C  6AEE               	clrf	postinc0,c
   273   00314E  06E8               	decf	wreg,f,c
   274   003150  E1FD               	bnz	clear_0
   275                           
   276                           ; Clear objects allocated to BANK0 (24 bytes)
   277   003152  EE00  F095         	lfsr	0,__pbssBANK0
   278   003156  0E18               	movlw	24
   279   003158                     clear_1:
   280   003158  6AEE               	clrf	postinc0,c
   281   00315A  06E8               	decf	wreg,f,c
   282   00315C  E1FD               	bnz	clear_1
   283                           
   284                           ; Clear objects allocated to COMRAM (9 bytes)
   285   00315E  EE00  F054         	lfsr	0,__pbssCOMRAM
   286   003162  0E09               	movlw	9
   287   003164                     clear_2:
   288   003164  6AEE               	clrf	postinc0,c
   289   003166  06E8               	decf	wreg,f,c
   290   003168  E1FD               	bnz	clear_2
   291   00316A                     end_of_initialization:
   292                           	callstack 0
   293   00316A                     __end_of__initialization:
   294                           	callstack 0
   295   00316A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   296   00316C  6EF8               	movwf	tblptru,c
   297   00316E  0100               	movlb	0
   298   003170  EF16  F011         	goto	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMRAM
   301   000054                     __pbssCOMRAM:
   302                           	callstack 0
   303   000054                     ___fpclassifyf@F465:
   304                           	callstack 0
   305   000054                     	ds	4
   306   000058                     _width:
   307                           	callstack 0
   308   000058                     	ds	2
   309   00005A                     _prec:
   310                           	callstack 0
   311   00005A                     	ds	2
   312   00005C                     _flags:
   313                           	callstack 0
   314   00005C                     	ds	1
   315                           
   316                           	psect	dataCOMRAM
   317   00005D                     __pdataCOMRAM:
   318                           	callstack 0
   319   00005D                     _v:
   320                           	callstack 0
   321   00005D                     	ds	2
   322                           
   323                           	psect	bssBANK0
   324   000095                     __pbssBANK0:
   325                           	callstack 0
   326   000095                     floorf@F521:
   327                           	callstack 0
   328   000095                     	ds	4
   329   000099                     _buffer:
   330                           	callstack 0
   331   000099                     	ds	20
   332                           
   333                           	psect	dataBANK0
   334   0000AD                     __pdataBANK0:
   335                           	callstack 0
   336   0000AD                     _t:
   337                           	callstack 0
   338   0000AD                     	ds	4
   339                           
   340                           	psect	bssBANK1
   341   000100                     __pbssBANK1:
   342                           	callstack 0
   343   000100                     _dbuf:
   344                           	callstack 0
   345   000100                     	ds	80
   346                           
   347                           	psect	cstackBANK0
   348   000060                     __pcstackBANK0:
   349                           	callstack 0
   350   000060                     efgtoa@ne:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x0
   354   000060                     	ds	2
   355   000062                     efgtoa@p:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359   000062                     	ds	2
   360   000064                     efgtoa@t:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364   000064                     	ds	2
   365   000066                     _efgtoa$845:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369   000066                     	ds	2
   370   000068                     efgtoa@pp:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x8
   374   000068                     	ds	1
   375   000069                     efgtoa@mode:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x9
   379   000069                     	ds	1
   380   00006A                     efgtoa@nmode:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xA
   384   00006A                     	ds	1
   385   00006B                     efgtoa@d:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xB
   389   00006B                     	ds	2
   390   00006D                     efgtoa@m:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xD
   394   00006D                     	ds	2
   395   00006F                     efgtoa@e:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0xF
   399   00006F                     	ds	2
   400   000071                     efgtoa@ou:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x11
   404   000071                     	ds	4
   405   000075                     efgtoa@w:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x15
   409   000075                     	ds	2
   410   000077                     efgtoa@h:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x17
   414   000077                     	ds	4
   415   00007B                     efgtoa@l:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x1B
   419   00007B                     	ds	4
   420   00007F                     efgtoa@i:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x1F
   424   00007F                     	ds	2
   425   000081                     efgtoa@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x21
   429   000081                     	ds	1
   430   000082                     efgtoa@g:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x22
   434   000082                     	ds	4
   435   000086                     efgtoa@n:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x26
   439   000086                     	ds	2
   440   000088                     efgtoa@u:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x28
   444   000088                     	ds	4
   445   00008C                     ?_vfprintf:
   446                           	callstack 0
   447   00008C                     vfprintf@fp:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x2C
   451   00008C                     	ds	1
   452   00008D                     vfprintf@fmt:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x2D
   456   00008D                     	ds	1
   457   00008E                     vfprintf@ap:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x2E
   461   00008E                     	ds	1
   462   00008F                     ?_sprintf:
   463                           	callstack 0
   464   00008F                     sprintf@s:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x2F
   468   00008F                     	ds	1
   469   000090                     sprintf@fmt:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x30
   473   000090                     	ds	5
   474                           
   475                           	psect	cstackCOMRAM
   476   000001                     __pcstackCOMRAM:
   477                           	callstack 0
   478   000001                     ?___fpclassifyf:
   479                           	callstack 0
   480   000001                     ?___wmul:
   481                           	callstack 0
   482   000001                     ?___lwdiv:
   483                           	callstack 0
   484   000001                     ?___lwmod:
   485                           	callstack 0
   486   000001                     ?___fladd:
   487                           	callstack 0
   488   000001                     ?___fldiv:
   489                           	callstack 0
   490   000001                     ?___flmul:
   491                           	callstack 0
   492   000001                     ?_labs:
   493                           	callstack 0
   494   000001                     ?___flneg:
   495                           	callstack 0
   496   000001                     ?___fltol:
   497                           	callstack 0
   498   000001                     Lcd_Port@a:
   499                           	callstack 0
   500   000001                     ___wmul@multiplier:
   501                           	callstack 0
   502   000001                     ___lwdiv@dividend:
   503                           	callstack 0
   504   000001                     ___lwmod@dividend:
   505                           	callstack 0
   506   000001                     memcpy@d1:
   507                           	callstack 0
   508   000001                     fputc@c:
   509                           	callstack 0
   510   000001                     strcpy@dest:
   511                           	callstack 0
   512   000001                     ___fleq@ff1:
   513                           	callstack 0
   514   000001                     ___flneg@f1:
   515                           	callstack 0
   516   000001                     ___fltol@f1:
   517                           	callstack 0
   518   000001                     ___fladd@b:
   519                           	callstack 0
   520   000001                     ___fldiv@b:
   521                           	callstack 0
   522   000001                     ___flmul@b:
   523                           	callstack 0
   524   000001                     ___fpclassifyf@x:
   525                           	callstack 0
   526   000001                     labs@a:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x0
   530   000001                     	ds	1
   531   000002                     ??_Lcd_Cmd:
   532   000002                     Lcd_Write_Char@temp:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x1
   536   000002                     	ds	1
   537   000003                     Lcd_Cmd@a:
   538                           	callstack 0
   539   000003                     Lcd_Write_Char@y:
   540                           	callstack 0
   541   000003                     fputc@fp:
   542                           	callstack 0
   543   000003                     strcpy@src:
   544                           	callstack 0
   545   000003                     ___wmul@multiplicand:
   546                           	callstack 0
   547   000003                     ___lwdiv@divisor:
   548                           	callstack 0
   549   000003                     ___lwmod@divisor:
   550                           	callstack 0
   551   000003                     memcpy@s1:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x2
   555   000003                     	ds	1
   556   000004                     ??_Lcd_Init:
   557   000004                     ??_fputc:
   558   000004                     ??_strcpy:
   559   000004                     Lcd_Set_Cursor@b:
   560                           	callstack 0
   561   000004                     Lcd_Write_Char@a:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x3
   565   000004                     	ds	1
   566   000005                     ??___fpclassifyf:
   567   000005                     ??_labs:
   568   000005                     ??___fltol:
   569   000005                     Lcd_Set_Cursor@a:
   570                           	callstack 0
   571   000005                     Lcd_CGRAM_CreateChar@chardata:
   572                           	callstack 0
   573   000005                     ___lwmod@counter:
   574                           	callstack 0
   575   000005                     Lcd_Write_String@a:
   576                           	callstack 0
   577   000005                     ___wmul@product:
   578                           	callstack 0
   579   000005                     ___lwdiv@quotient:
   580                           	callstack 0
   581   000005                     memcpy@n:
   582                           	callstack 0
   583   000005                     strcpy@d:
   584                           	callstack 0
   585   000005                     ___fleq@ff2:
   586                           	callstack 0
   587   000005                     ___fladd@a:
   588                           	callstack 0
   589   000005                     ___fldiv@a:
   590                           	callstack 0
   591   000005                     ___flmul@a:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x4
   595   000005                     	ds	1
   596   000006                     ??_Lcd_CGRAM_CreateChar:
   597   000006                     Lcd_Set_Cursor@z:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x5
   601   000006                     	ds	1
   602   000007                     ??_Lcd_Write_String:
   603   000007                     ?_read_prec_or_width:
   604                           	callstack 0
   605   000007                     Lcd_Set_Cursor@y:
   606                           	callstack 0
   607   000007                     ___lwdiv@counter:
   608                           	callstack 0
   609   000007                     read_prec_or_width@fmt:
   610                           	callstack 0
   611   000007                     memcpy@tmp:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x6
   615   000007                     	ds	1
   616   000008                     Lcd_Set_Cursor@temp:
   617                           	callstack 0
   618   000008                     Lcd_CGRAM_CreateChar@add:
   619                           	callstack 0
   620   000008                     read_prec_or_width@ap:
   621                           	callstack 0
   622   000008                     memcpy@d:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x7
   626   000008                     	ds	1
   627   000009                     ??___fladd:
   628   000009                     ??___fldiv:
   629   000009                     ??___flmul:
   630   000009                     ??___fleq:
   631   000009                     Lcd_CGRAM_CreateChar@i:
   632                           	callstack 0
   633   000009                     ___fltol@sign1:
   634                           	callstack 0
   635   000009                     read_prec_or_width@c:
   636                           	callstack 0
   637   000009                     Lcd_Write_String@i:
   638                           	callstack 0
   639   000009                     ___fpclassifyf@e:
   640                           	callstack 0
   641   000009                     fputs@s:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x8
   645   000009                     	ds	1
   646   00000A                     Lcd_CGRAM_CreateChar@i_272:
   647                           	callstack 0
   648   00000A                     ___fltol@exp1:
   649                           	callstack 0
   650   00000A                     read_prec_or_width@n:
   651                           	callstack 0
   652   00000A                     memcpy@s:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x9
   656   00000A                     	ds	1
   657   00000B                     Lcd_CGRAM_CreateChar@i_273:
   658                           	callstack 0
   659   00000B                     fputs@fp:
   660                           	callstack 0
   661   00000B                     ___fpclassifyf@u:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0xA
   665   00000B                     	ds	1
   666   00000C                     Lcd_CGRAM_CreateChar@i_274:
   667                           	callstack 0
   668   00000C                     fputs@c:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xB
   672   00000C                     	ds	1
   673   00000D                     Lcd_CGRAM_CreateChar@i_275:
   674                           	callstack 0
   675   00000D                     ___fladd@signs:
   676                           	callstack 0
   677   00000D                     ___flmul@sign:
   678                           	callstack 0
   679   00000D                     fputs@i:
   680                           	callstack 0
   681   00000D                     ___fldiv@rem:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0xC
   685   00000D                     	ds	1
   686   00000E                     Lcd_CGRAM_CreateChar@i_276:
   687                           	callstack 0
   688   00000E                     ___fladd@aexp:
   689                           	callstack 0
   690   00000E                     ___flmul@grs:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0xD
   694   00000E                     	ds	1
   695   00000F                     Lcd_CGRAM_CreateChar@i_277:
   696                           	callstack 0
   697   00000F                     ___fladd@bexp:
   698                           	callstack 0
   699   00000F                     pad@fp:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0xE
   703   00000F                     	ds	1
   704   000010                     Lcd_CGRAM_CreateChar@i_278:
   705                           	callstack 0
   706   000010                     ___fladd@grs:
   707                           	callstack 0
   708   000010                     pad@buf:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0xF
   712   000010                     	ds	1
   713   000011                     ___fldiv@sign:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x10
   717   000011                     	ds	1
   718   000012                     ___flmul@aexp:
   719                           	callstack 0
   720   000012                     ___fldiv@new_exp:
   721                           	callstack 0
   722   000012                     pad@p:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x11
   726   000012                     	ds	1
   727   000013                     ___flmul@bexp:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x12
   731   000013                     	ds	1
   732   000014                     ??_pad:
   733   000014                     ___fldiv@grs:
   734                           	callstack 0
   735   000014                     ___flmul@prod:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x13
   739   000014                     	ds	1
   740   000015                     pad@i:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x14
   744   000015                     	ds	2
   745   000017                     utoa@fp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x16
   749   000017                     	ds	1
   750   000018                     ___fldiv@bexp:
   751                           	callstack 0
   752   000018                     ___flmul@temp:
   753                           	callstack 0
   754   000018                     utoa@d:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x17
   758   000018                     	ds	1
   759   000019                     ___fldiv@aexp:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x18
   763   000019                     	ds	1
   764   00001A                     ?___flsub:
   765                           	callstack 0
   766   00001A                     ?_floorf:
   767                           	callstack 0
   768   00001A                     utoa@p:
   769                           	callstack 0
   770   00001A                     ___flge@ff1:
   771                           	callstack 0
   772   00001A                     ___flsub@b:
   773                           	callstack 0
   774   00001A                     floorf@x:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x19
   778   00001A                     	ds	2
   779   00001C                     utoa@w:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x1B
   783   00001C                     	ds	2
   784   00001E                     ??_floorf:
   785   00001E                     utoa@i:
   786                           	callstack 0
   787   00001E                     ___flge@ff2:
   788                           	callstack 0
   789   00001E                     ___flsub@a:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x1D
   793   00001E                     	ds	4
   794   000022                     ??___flge:
   795                           
   796                           ; 1 bytes @ 0x21
   797   000022                     	ds	2
   798   000024                     floorf@m:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x23
   802   000024                     	ds	4
   803   000028                     floorf@e:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x27
   807   000028                     	ds	2
   808   00002A                     floorf@u:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x29
   812   00002A                     	ds	4
   813   00002E                     efgtoa@fp:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x2D
   817   00002E                     	ds	1
   818   00002F                     efgtoa@f:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x2E
   822   00002F                     	ds	4
   823   000033                     efgtoa@c:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x32
   827   000033                     	ds	1
   828   000034                     ??_efgtoa:
   829                           
   830                           ; 1 bytes @ 0x33
   831   000034                     	ds	2
   832   000036                     vfpfcnvrt@fp:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x35
   836   000036                     	ds	1
   837   000037                     vfpfcnvrt@fmt:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x36
   841   000037                     	ds	1
   842   000038                     vfpfcnvrt@ap:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x37
   846   000038                     	ds	1
   847   000039                     ??_vfpfcnvrt:
   848                           
   849                           ; 1 bytes @ 0x38
   850   000039                     	ds	2
   851   00003B                     vfpfcnvrt@done:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x3A
   855   00003B                     	ds	1
   856   00003C                     vfpfcnvrt@convarg:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x3B
   860   00003C                     	ds	4
   861   000040                     vfpfcnvrt@c:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x3F
   865   000040                     	ds	1
   866   000041                     vfpfcnvrt@cp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x40
   870   000041                     	ds	1
   871   000042                     vfprintf@cfmt:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x41
   875   000042                     	ds	1
   876   000043                     sprintf@ap:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x42
   880   000043                     	ds	1
   881   000044                     sprintf@f:
   882                           	callstack 0
   883                           
   884                           ; 12 bytes @ 0x43
   885   000044                     	ds	12
   886   000050                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x4F
   889   000050                     	ds	2
   890   000052                     main@i:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x51
   894   000052                     	ds	1
   895   000053                     main@i_142:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x52
   899   000053                     	ds	1
   900                           
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 29 in file "lcd16x2.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  i               1   82[COMRAM] unsigned char 
   911 ;;  i               1   81[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   921 ;;      Params:         0       0       0       0       0       0       0       0       0
   922 ;;      Locals:         2       0       0       0       0       0       0       0       0
   923 ;;      Temps:          2       0       0       0       0       0       0       0       0
   924 ;;      Totals:         4       0       0       0       0       0       0       0       0
   925 ;;Total ram usage:        4 bytes
   926 ;; Hardware stack levels required when called: 8
   927 ;; This function calls:
   928 ;;		_Lcd_Blink
   929 ;;		_Lcd_CGRAM_Close
   930 ;;		_Lcd_CGRAM_CreateChar
   931 ;;		_Lcd_CGRAM_Init
   932 ;;		_Lcd_Clear
   933 ;;		_Lcd_Init
   934 ;;		_Lcd_NoBlink
   935 ;;		_Lcd_Set_Cursor
   936 ;;		_Lcd_Shift_Left
   937 ;;		_Lcd_Shift_Right
   938 ;;		_Lcd_Write_Char
   939 ;;		_Lcd_Write_String
   940 ;;		_sprintf
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text0
   947   00222C                     __ptext0:
   948                           	callstack 0
   949   00222C                     _main:
   950                           	callstack 23
   951   00222C                     
   952                           ;lcd16x2.c: 30:     ADCON1bits.PCFG = 0x0F;
   953   00222C  0E0F               	movlw	15
   954   00222E  12C1               	iorwf	193,f,c	;volatile
   955   002230                     
   956                           ;lcd16x2.c: 31:     Lcd_Init();
   957   002230  ECC8  F017         	call	_Lcd_Init	;wreg free
   958   002234                     
   959                           ;lcd16x2.c: 33:     Lcd_CGRAM_Init();
   960   002234  ECB1  F01A         	call	_Lcd_CGRAM_Init	;wreg free
   961   002238                     
   962                           ;lcd16x2.c: 34:     Lcd_CGRAM_CreateChar(0, figura_1);
   963   002238  0E09               	movlw	low _figura_1
   964   00223A  6E05               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
   965   00223C  0E00               	movlw	0
   966   00223E  EC4D  F013         	call	_Lcd_CGRAM_CreateChar
   967   002242                     
   968                           ;lcd16x2.c: 35:     Lcd_CGRAM_CreateChar(1, figura_2);
   969   002242  0E01               	movlw	low _figura_2
   970   002244  6E05               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
   971   002246  0E01               	movlw	1
   972   002248  EC4D  F013         	call	_Lcd_CGRAM_CreateChar
   973   00224C                     
   974                           ;lcd16x2.c: 36:     Lcd_CGRAM_Close();
   975   00224C  ECB8  F01A         	call	_Lcd_CGRAM_Close	;wreg free
   976   002250                     
   977                           ;lcd16x2.c: 37:     Lcd_Clear();
   978   002250  ECAA  F01A         	call	_Lcd_Clear	;wreg free
   979   002254                     l4693:
   980                           
   981                           ;lcd16x2.c: 40:         Lcd_Set_Cursor(1,1);
   982   002254  0E01               	movlw	1
   983   002256  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   984   002258  0E01               	movlw	1
   985   00225A  EC62  F016         	call	_Lcd_Set_Cursor
   986   00225E                     
   987                           ;lcd16x2.c: 41:         Lcd_Write_String("Test LCD 16x2");
   988   00225E  0E22               	movlw	low STR_1
   989   002260  6E05               	movwf	Lcd_Write_String@a^0,c
   990   002262  5005               	movf	Lcd_Write_String@a^0,w,c
   991   002264  A4D8               	btfss	status,2,c
   992   002266  0E08               	movlw	high __smallconst
   993   002268  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   994   00226A  EC0E  F018         	call	_Lcd_Write_String	;wreg free
   995   00226E                     
   996                           ;lcd16x2.c: 42:         Lcd_Set_Cursor(2, 1);
   997   00226E  0E01               	movlw	1
   998   002270  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   999   002272  0E02               	movlw	2
  1000   002274  EC62  F016         	call	_Lcd_Set_Cursor
  1001   002278                     
  1002                           ;lcd16x2.c: 43:         Lcd_Write_String("PIC18F4550");
  1003   002278  0E3D               	movlw	low STR_2
  1004   00227A  6E05               	movwf	Lcd_Write_String@a^0,c
  1005   00227C  5005               	movf	Lcd_Write_String@a^0,w,c
  1006   00227E  A4D8               	btfss	status,2,c
  1007   002280  0E08               	movlw	high __smallconst
  1008   002282  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1009   002284  EC0E  F018         	call	_Lcd_Write_String	;wreg free
  1010   002288                     
  1011                           ;lcd16x2.c: 44:         Lcd_Set_Cursor(2, 12);
  1012   002288  0E0C               	movlw	12
  1013   00228A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1014   00228C  0E02               	movlw	2
  1015   00228E  EC62  F016         	call	_Lcd_Set_Cursor
  1016   002292                     
  1017                           ;lcd16x2.c: 45:         Lcd_Blink();
  1018   002292  ECBF  F01A         	call	_Lcd_Blink	;wreg free
  1019   002296                     
  1020                           ;lcd16x2.c: 46:         _delay((unsigned long)((2000)*(48000000/4000.0)));
  1021   002296  0E7A               	movlw	122
  1022   002298  6E51               	movwf	(??_main+1)^0,c
  1023   00229A  0EC1               	movlw	193
  1024   00229C  6E50               	movwf	??_main^0,c
  1025   00229E  0E82               	movlw	130
  1026   0022A0                     u4587:
  1027   0022A0  2EE8               	decfsz	wreg,f,c
  1028   0022A2  D7FE               	bra	u4587
  1029   0022A4  2E50               	decfsz	??_main^0,f,c
  1030   0022A6  D7FC               	bra	u4587
  1031   0022A8  2E51               	decfsz	(??_main+1)^0,f,c
  1032   0022AA  D7FA               	bra	u4587
  1033   0022AC                     
  1034                           ;lcd16x2.c: 47:         Lcd_NoBlink();
  1035   0022AC  ECA3  F01A         	call	_Lcd_NoBlink	;wreg free
  1036   0022B0                     
  1037                           ;lcd16x2.c: 48:         Lcd_Clear();
  1038   0022B0  ECAA  F01A         	call	_Lcd_Clear	;wreg free
  1039   0022B4                     
  1040                           ;lcd16x2.c: 49:         _delay((unsigned long)((500)*(48000000/4000.0)));
  1041   0022B4  0E1F               	movlw	31
  1042   0022B6  6E51               	movwf	(??_main+1)^0,c
  1043   0022B8  0E71               	movlw	113
  1044   0022BA  6E50               	movwf	??_main^0,c
  1045   0022BC  0E1E               	movlw	30
  1046   0022BE                     u4597:
  1047   0022BE  2EE8               	decfsz	wreg,f,c
  1048   0022C0  D7FE               	bra	u4597
  1049   0022C2  2E50               	decfsz	??_main^0,f,c
  1050   0022C4  D7FC               	bra	u4597
  1051   0022C6  2E51               	decfsz	(??_main+1)^0,f,c
  1052   0022C8  D7FA               	bra	u4597
  1053   0022CA  D000               	nop2	
  1054   0022CC                     
  1055                           ;lcd16x2.c: 51:         Lcd_Set_Cursor(1,1);
  1056   0022CC  0E01               	movlw	1
  1057   0022CE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1058   0022D0  0E01               	movlw	1
  1059   0022D2  EC62  F016         	call	_Lcd_Set_Cursor
  1060   0022D6                     
  1061                           ;lcd16x2.c: 52:         Lcd_Write_String("CGRAM Caracteres");
  1062   0022D6  0E11               	movlw	low STR_3
  1063   0022D8  6E05               	movwf	Lcd_Write_String@a^0,c
  1064   0022DA  5005               	movf	Lcd_Write_String@a^0,w,c
  1065   0022DC  A4D8               	btfss	status,2,c
  1066   0022DE  0E08               	movlw	high __smallconst
  1067   0022E0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1068   0022E2  EC0E  F018         	call	_Lcd_Write_String	;wreg free
  1069   0022E6                     
  1070                           ;lcd16x2.c: 53:         Lcd_Set_Cursor(2,1);
  1071   0022E6  0E01               	movlw	1
  1072   0022E8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1073   0022EA  0E02               	movlw	2
  1074   0022EC  EC62  F016         	call	_Lcd_Set_Cursor
  1075   0022F0                     
  1076                           ;lcd16x2.c: 54:         Lcd_Write_Char(0);
  1077   0022F0  0E00               	movlw	0
  1078   0022F2  EC58  F01A         	call	_Lcd_Write_Char
  1079   0022F6                     
  1080                           ;lcd16x2.c: 55:         Lcd_Write_Char(1);
  1081   0022F6  0E01               	movlw	1
  1082   0022F8  EC58  F01A         	call	_Lcd_Write_Char
  1083   0022FC                     
  1084                           ;lcd16x2.c: 56:         _delay((unsigned long)((1500)*(48000000/4000.0)));
  1085   0022FC  0E5C               	movlw	92
  1086   0022FE  6E51               	movwf	(??_main+1)^0,c
  1087   002300  0E51               	movlw	81
  1088   002302  6E50               	movwf	??_main^0,c
  1089   002304  0E60               	movlw	96
  1090   002306                     u4607:
  1091   002306  2EE8               	decfsz	wreg,f,c
  1092   002308  D7FE               	bra	u4607
  1093   00230A  2E50               	decfsz	??_main^0,f,c
  1094   00230C  D7FC               	bra	u4607
  1095   00230E  2E51               	decfsz	(??_main+1)^0,f,c
  1096   002310  D7FA               	bra	u4607
  1097   002312  D000               	nop2	
  1098   002314                     
  1099                           ;lcd16x2.c: 57:         Lcd_Clear();
  1100   002314  ECAA  F01A         	call	_Lcd_Clear	;wreg free
  1101   002318                     
  1102                           ;lcd16x2.c: 58:         _delay((unsigned long)((500)*(48000000/4000.0)));
  1103   002318  0E1F               	movlw	31
  1104   00231A  6E51               	movwf	(??_main+1)^0,c
  1105   00231C  0E71               	movlw	113
  1106   00231E  6E50               	movwf	??_main^0,c
  1107   002320  0E1E               	movlw	30
  1108   002322                     u4617:
  1109   002322  2EE8               	decfsz	wreg,f,c
  1110   002324  D7FE               	bra	u4617
  1111   002326  2E50               	decfsz	??_main^0,f,c
  1112   002328  D7FC               	bra	u4617
  1113   00232A  2E51               	decfsz	(??_main+1)^0,f,c
  1114   00232C  D7FA               	bra	u4617
  1115   00232E  D000               	nop2	
  1116   002330                     
  1117                           ;lcd16x2.c: 60:         Lcd_Set_Cursor(1,1);
  1118   002330  0E01               	movlw	1
  1119   002332  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1120   002334  0E01               	movlw	1
  1121   002336  EC62  F016         	call	_Lcd_Set_Cursor
  1122   00233A                     
  1123                           ;lcd16x2.c: 61:         Lcd_Write_String("Hola");
  1124   00233A  0E50               	movlw	low STR_4
  1125   00233C  6E05               	movwf	Lcd_Write_String@a^0,c
  1126   00233E  5005               	movf	Lcd_Write_String@a^0,w,c
  1127   002340  A4D8               	btfss	status,2,c
  1128   002342  0E08               	movlw	high __smallconst
  1129   002344  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1130   002346  EC0E  F018         	call	_Lcd_Write_String	;wreg free
  1131   00234A                     
  1132                           ;lcd16x2.c: 62:         _delay((unsigned long)((500)*(48000000/4000.0)));
  1133   00234A  0E1F               	movlw	31
  1134   00234C  6E51               	movwf	(??_main+1)^0,c
  1135   00234E  0E71               	movlw	113
  1136   002350  6E50               	movwf	??_main^0,c
  1137   002352  0E1E               	movlw	30
  1138   002354                     u4627:
  1139   002354  2EE8               	decfsz	wreg,f,c
  1140   002356  D7FE               	bra	u4627
  1141   002358  2E50               	decfsz	??_main^0,f,c
  1142   00235A  D7FC               	bra	u4627
  1143   00235C  2E51               	decfsz	(??_main+1)^0,f,c
  1144   00235E  D7FA               	bra	u4627
  1145   002360  D000               	nop2	
  1146   002362                     
  1147                           ;lcd16x2.c: 63:         for (char i = 0; i < 15; i++) {
  1148   002362  0E00               	movlw	0
  1149   002364  6E52               	movwf	main@i^0,c
  1150   002366                     l4741:
  1151                           
  1152                           ;lcd16x2.c: 64:             Lcd_Shift_Right();
  1153   002366  EC95  F01A         	call	_Lcd_Shift_Right	;wreg free
  1154   00236A                     
  1155                           ;lcd16x2.c: 65:             _delay((unsigned long)((400)*(48000000/4000.0)));
  1156   00236A  0E19               	movlw	25
  1157   00236C  6E51               	movwf	(??_main+1)^0,c
  1158   00236E  0E5A               	movlw	90
  1159   002370  6E50               	movwf	??_main^0,c
  1160   002372  0EB2               	movlw	178
  1161   002374                     u4637:
  1162   002374  2EE8               	decfsz	wreg,f,c
  1163   002376  D7FE               	bra	u4637
  1164   002378  2E50               	decfsz	??_main^0,f,c
  1165   00237A  D7FC               	bra	u4637
  1166   00237C  2E51               	decfsz	(??_main+1)^0,f,c
  1167   00237E  D7FA               	bra	u4637
  1168   002380                     
  1169                           ;lcd16x2.c: 66:         }
  1170   002380  2A52               	incf	main@i^0,f,c
  1171   002382  0E0E               	movlw	14
  1172   002384  6452               	cpfsgt	main@i^0,c
  1173   002386  EFC7  F011         	goto	u4561
  1174   00238A  EFC9  F011         	goto	u4560
  1175   00238E                     u4561:
  1176   00238E  EFB3  F011         	goto	l4741
  1177   002392                     u4560:
  1178   002392                     
  1179                           ;lcd16x2.c: 67:         _delay((unsigned long)((400)*(48000000/4000.0)));
  1180   002392  0E19               	movlw	25
  1181   002394  6E51               	movwf	(??_main+1)^0,c
  1182   002396  0E5A               	movlw	90
  1183   002398  6E50               	movwf	??_main^0,c
  1184   00239A  0EB2               	movlw	178
  1185   00239C                     u4647:
  1186   00239C  2EE8               	decfsz	wreg,f,c
  1187   00239E  D7FE               	bra	u4647
  1188   0023A0  2E50               	decfsz	??_main^0,f,c
  1189   0023A2  D7FC               	bra	u4647
  1190   0023A4  2E51               	decfsz	(??_main+1)^0,f,c
  1191   0023A6  D7FA               	bra	u4647
  1192   0023A8                     
  1193                           ;lcd16x2.c: 68:         for (char i = 0; i < 15; i++) {
  1194   0023A8  0E00               	movlw	0
  1195   0023AA  6E53               	movwf	main@i_142^0,c
  1196   0023AC                     l4757:
  1197                           
  1198                           ;lcd16x2.c: 69:             Lcd_Shift_Left();
  1199   0023AC  EC9C  F01A         	call	_Lcd_Shift_Left	;wreg free
  1200   0023B0                     
  1201                           ;lcd16x2.c: 70:             _delay((unsigned long)((400)*(48000000/4000.0)));
  1202   0023B0  0E19               	movlw	25
  1203   0023B2  6E51               	movwf	(??_main+1)^0,c
  1204   0023B4  0E5A               	movlw	90
  1205   0023B6  6E50               	movwf	??_main^0,c
  1206   0023B8  0EB2               	movlw	178
  1207   0023BA                     u4657:
  1208   0023BA  2EE8               	decfsz	wreg,f,c
  1209   0023BC  D7FE               	bra	u4657
  1210   0023BE  2E50               	decfsz	??_main^0,f,c
  1211   0023C0  D7FC               	bra	u4657
  1212   0023C2  2E51               	decfsz	(??_main+1)^0,f,c
  1213   0023C4  D7FA               	bra	u4657
  1214   0023C6                     
  1215                           ;lcd16x2.c: 71:         }
  1216   0023C6  2A53               	incf	main@i_142^0,f,c
  1217   0023C8  0E0E               	movlw	14
  1218   0023CA  6453               	cpfsgt	main@i_142^0,c
  1219   0023CC  EFEA  F011         	goto	u4571
  1220   0023D0  EFEC  F011         	goto	u4570
  1221   0023D4                     u4571:
  1222   0023D4  EFD6  F011         	goto	l4757
  1223   0023D8                     u4570:
  1224   0023D8                     
  1225                           ;lcd16x2.c: 72:         Lcd_Clear();
  1226   0023D8  ECAA  F01A         	call	_Lcd_Clear	;wreg free
  1227   0023DC                     
  1228                           ;lcd16x2.c: 73:         _delay((unsigned long)((500)*(48000000/4000.0)));
  1229   0023DC  0E1F               	movlw	31
  1230   0023DE  6E51               	movwf	(??_main+1)^0,c
  1231   0023E0  0E71               	movlw	113
  1232   0023E2  6E50               	movwf	??_main^0,c
  1233   0023E4  0E1E               	movlw	30
  1234   0023E6                     u4667:
  1235   0023E6  2EE8               	decfsz	wreg,f,c
  1236   0023E8  D7FE               	bra	u4667
  1237   0023EA  2E50               	decfsz	??_main^0,f,c
  1238   0023EC  D7FC               	bra	u4667
  1239   0023EE  2E51               	decfsz	(??_main+1)^0,f,c
  1240   0023F0  D7FA               	bra	u4667
  1241   0023F2  D000               	nop2	
  1242   0023F4                     
  1243                           ;lcd16x2.c: 75:         Lcd_Set_Cursor(1,1);
  1244   0023F4  0E01               	movlw	1
  1245   0023F6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1246   0023F8  0E01               	movlw	1
  1247   0023FA  EC62  F016         	call	_Lcd_Set_Cursor
  1248   0023FE                     
  1249                           ;lcd16x2.c: 76:         sprintf(buffer, "Int: %u", v);
  1250   0023FE  0E99               	movlw	low _buffer
  1251   002400  0100               	movlb	0	; () banked
  1252   002402  6F8F               	movwf	sprintf@s& (0+255),b
  1253   002404  0E48               	movlw	low STR_5
  1254   002406  6F90               	movwf	sprintf@fmt& (0+255),b
  1255   002408  0E03               	movlw	3
  1256   00240A  6F92               	movwf	(?_sprintf+3)& (0+255),b
  1257   00240C  6991               	setf	(?_sprintf+2)& (0+255),b
  1258   00240E  EC20  F01A         	call	_sprintf	;wreg free
  1259   002412                     
  1260                           ;lcd16x2.c: 77:         Lcd_Write_String(buffer);
  1261   002412  0E99               	movlw	low _buffer
  1262   002414  6E05               	movwf	Lcd_Write_String@a^0,c
  1263   002416  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
  1264   002418  EC0E  F018         	call	_Lcd_Write_String	;wreg free
  1265   00241C                     
  1266                           ;lcd16x2.c: 78:         Lcd_Set_Cursor(2,1);
  1267   00241C  0E01               	movlw	1
  1268   00241E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1269   002420  0E02               	movlw	2
  1270   002422  EC62  F016         	call	_Lcd_Set_Cursor
  1271   002426                     
  1272                           ;lcd16x2.c: 79:         sprintf(buffer, "Float: %0.2f", t);
  1273   002426  0E99               	movlw	low _buffer
  1274   002428  0100               	movlb	0	; () banked
  1275   00242A  6F8F               	movwf	sprintf@s& (0+255),b
  1276   00242C  0E30               	movlw	low STR_6
  1277   00242E  6F90               	movwf	sprintf@fmt& (0+255),b
  1278   002430  0E5C               	movlw	92
  1279   002432  6F91               	movwf	(?_sprintf+2)& (0+255),b
  1280   002434  0E8F               	movlw	143
  1281   002436  6F92               	movwf	(?_sprintf+3)& (0+255),b
  1282   002438  0EC2               	movlw	194
  1283   00243A  6F93               	movwf	(?_sprintf+4)& (0+255),b
  1284   00243C  0E41               	movlw	65
  1285   00243E  6F94               	movwf	(?_sprintf+5)& (0+255),b
  1286   002440  EC20  F01A         	call	_sprintf	;wreg free
  1287   002444                     
  1288                           ;lcd16x2.c: 80:         Lcd_Write_String(buffer);
  1289   002444  0E99               	movlw	low _buffer
  1290   002446  6E05               	movwf	Lcd_Write_String@a^0,c
  1291   002448  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
  1292   00244A  EC0E  F018         	call	_Lcd_Write_String	;wreg free
  1293   00244E                     
  1294                           ;lcd16x2.c: 81:         _delay((unsigned long)((1500)*(48000000/4000.0)));
  1295   00244E  0E5C               	movlw	92
  1296   002450  6E51               	movwf	(??_main+1)^0,c
  1297   002452  0E51               	movlw	81
  1298   002454  6E50               	movwf	??_main^0,c
  1299   002456  0E60               	movlw	96
  1300   002458                     u4677:
  1301   002458  2EE8               	decfsz	wreg,f,c
  1302   00245A  D7FE               	bra	u4677
  1303   00245C  2E50               	decfsz	??_main^0,f,c
  1304   00245E  D7FC               	bra	u4677
  1305   002460  2E51               	decfsz	(??_main+1)^0,f,c
  1306   002462  D7FA               	bra	u4677
  1307   002464  D000               	nop2	
  1308                           
  1309                           ;lcd16x2.c: 82:         Lcd_Clear();
  1310   002466  ECAA  F01A         	call	_Lcd_Clear	;wreg free
  1311   00246A                     
  1312                           ;lcd16x2.c: 83:         _delay((unsigned long)((200)*(48000000/4000.0)));
  1313   00246A  0E0D               	movlw	13
  1314   00246C  6E51               	movwf	(??_main+1)^0,c
  1315   00246E  0E2D               	movlw	45
  1316   002470  6E50               	movwf	??_main^0,c
  1317   002472  0ED8               	movlw	216
  1318   002474                     u4687:
  1319   002474  2EE8               	decfsz	wreg,f,c
  1320   002476  D7FE               	bra	u4687
  1321   002478  2E50               	decfsz	??_main^0,f,c
  1322   00247A  D7FC               	bra	u4687
  1323   00247C  2E51               	decfsz	(??_main+1)^0,f,c
  1324   00247E  D7FA               	bra	u4687
  1325   002480  EF2A  F011         	goto	l4693
  1326   002484  EF00  F000         	goto	start
  1327   002488                     __end_of_main:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _sprintf *****************
  1331 ;; Defined at:
  1332 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  s               1   47[BANK0 ] PTR unsigned char 
  1335 ;;		 -> buffer(20), 
  1336 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1337 ;;		 -> STR_6(13), STR_5(8), 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  f              12   67[COMRAM] struct _IO_FILE
  1340 ;;  ret             2    0        int 
  1341 ;;  ap              1   66[COMRAM] PTR void [1]
  1342 ;;		 -> ?_sprintf(2), 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2   47[BANK0 ] int 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1352 ;;      Params:         0       6       0       0       0       0       0       0       0
  1353 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1355 ;;      Totals:        13       6       0       0       0       0       0       0       0
  1356 ;;Total ram usage:       19 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 7
  1359 ;; This function calls:
  1360 ;;		_vfprintf
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text1
  1367   003440                     __ptext1:
  1368                           	callstack 0
  1369   003440                     _sprintf:
  1370                           	callstack 23
  1371   003440  0E91               	movlw	low (?_sprintf+2)
  1372   003442  6E43               	movwf	sprintf@ap^0,c
  1373   003444  C08F  F044         	movff	sprintf@s,sprintf@f
  1374   003448  0E00               	movlw	0
  1375   00344A  6E48               	movwf	(sprintf@f+4)^0,c
  1376   00344C  0E00               	movlw	0
  1377   00344E  6E47               	movwf	(sprintf@f+3)^0,c
  1378   003450  0E00               	movlw	0
  1379   003452  6E4F               	movwf	(sprintf@f+11)^0,c
  1380   003454  0E00               	movlw	0
  1381   003456  6E4E               	movwf	(sprintf@f+10)^0,c
  1382   003458  0E44               	movlw	low sprintf@f
  1383   00345A  0100               	movlb	0	; () banked
  1384   00345C  6F8C               	movwf	vfprintf@fp& (0+255),b
  1385   00345E  C090  F08D         	movff	sprintf@fmt,vfprintf@fmt
  1386   003462  0E43               	movlw	low sprintf@ap
  1387   003464  6F8E               	movwf	vfprintf@ap& (0+255),b
  1388   003466  ECC3  F019         	call	_vfprintf	;wreg free
  1389   00346A  0100               	movlb	0	; () banked
  1390   00346C  518F               	movf	sprintf@s& (0+255),w,b
  1391   00346E  2447               	addwf	(sprintf@f+3)^0,w,c
  1392   003470  6ED9               	movwf	fsr2l,c
  1393   003472  6ADA               	clrf	fsr2h,c
  1394   003474  6ADF               	clrf	indf2,c
  1395   003476                     
  1396                           ; BSR set to: 0
  1397   003476  0012               	return		;funcret
  1398   003478                     __end_of_sprintf:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _vfprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1406 ;;		 -> sprintf@f(12), 
  1407 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1408 ;;		 -> STR_6(13), STR_5(8), 
  1409 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1410 ;;		 -> sprintf@ap(1), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  cfmt            1   65[COMRAM] PTR unsigned char 
  1413 ;;		 -> STR_6(13), STR_5(8), 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2   44[BANK0 ] int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         0       3       0       0       0       0       0       0       0
  1424 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         1       3       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        4 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 6
  1430 ;; This function calls:
  1431 ;;		_vfpfcnvrt
  1432 ;; This function is called by:
  1433 ;;		_sprintf
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text2
  1438   003386                     __ptext2:
  1439                           	callstack 0
  1440   003386                     _vfprintf:
  1441                           	callstack 23
  1442   003386                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1444   003386  C08D  F042         	movff	vfprintf@fmt,vfprintf@cfmt
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1447   00338A  EFCF  F019         	goto	l4661
  1448   00338E                     l4659:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1451   00338E  C08C  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  1452   003392  0E42               	movlw	low vfprintf@cfmt
  1453   003394  6E37               	movwf	vfpfcnvrt@fmt^0,c
  1454   003396  C08E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  1455   00339A  EC9B  F00F         	call	_vfpfcnvrt	;wreg free
  1456   00339E                     l4661:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1459   00339E  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
  1460   0033A2                     	if	1	;There is more than 1 active tblptr byte
  1461   0033A2  0E08               	movlw	high __smallconst
  1462   0033A4  6EF7               	movwf	tblptrh,c
  1463   0033A6                     	endif
  1464   0033A6                     	if	0	;tblptru may be non-zero
  1465   0033A6                     	endif
  1466   0033A6                     	if	0	;tblptru may be non-zero
  1467   0033A6                     	endif
  1468   0033A6  0008               	tblrd		*
  1469   0033A8  50F5               	movf	tablat,w,c
  1470   0033AA  0900               	iorlw	0
  1471   0033AC  A4D8               	btfss	status,2,c
  1472   0033AE  EFDB  F019         	goto	u4551
  1473   0033B2  EFDD  F019         	goto	u4550
  1474   0033B6                     u4551:
  1475   0033B6  EFC7  F019         	goto	l4659
  1476   0033BA                     u4550:
  1477   0033BA                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1479   0033BA  0E00               	movlw	0
  1480   0033BC  0100               	movlb	0	; () banked
  1481   0033BE  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1482   0033C0  0E00               	movlw	0
  1483   0033C2  6F8C               	movwf	?_vfprintf& (0+255),b
  1484   0033C4                     
  1485                           ; BSR set to: 0
  1486   0033C4  0012               	return		;funcret
  1487   0033C6                     __end_of_vfprintf:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _vfpfcnvrt *****************
  1491 ;; Defined at:
  1492 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  1495 ;;		 -> sprintf@f(12), 
  1496 ;;  fmt             1   54[COMRAM] PTR PTR unsigned char 
  1497 ;;		 -> vfprintf@cfmt(1), 
  1498 ;;  ap              1   55[COMRAM] PTR PTR void 
  1499 ;;		 -> sprintf@ap(1), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  convarg         4   59[COMRAM] struct .
  1502 ;;  cp              1   64[COMRAM] PTR unsigned char 
  1503 ;;		 -> STR_6(13), STR_5(8), 
  1504 ;;  c               1   63[COMRAM] unsigned char 
  1505 ;;  done            1   58[COMRAM] _Bool 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1515 ;;      Params:         3       0       0       0       0       0       0       0       0
  1516 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1517 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1518 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1519 ;;Total ram usage:       12 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 5
  1522 ;; This function calls:
  1523 ;;		_efgtoa
  1524 ;;		_fputc
  1525 ;;		_read_prec_or_width
  1526 ;;		_utoa
  1527 ;; This function is called by:
  1528 ;;		_vfprintf
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text3
  1533   001F36                     __ptext3:
  1534                           	callstack 0
  1535   001F36                     _vfpfcnvrt:
  1536                           	callstack 23
  1537   001F36                     
  1538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1539   001F36  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1540   001F38  6ED9               	movwf	fsr2l,c
  1541   001F3A  6ADA               	clrf	fsr2h,c
  1542   001F3C  CFDF FFF6          	movff	indf2,tblptrl
  1543   001F40                     	if	1	;There is more than 1 active tblptr byte
  1544   001F40  0E08               	movlw	high __smallconst
  1545   001F42  6EF7               	movwf	tblptrh,c
  1546   001F44                     	endif
  1547   001F44                     	if	0	;tblptru may be non-zero
  1548   001F44                     	endif
  1549   001F44                     	if	0	;tblptru may be non-zero
  1550   001F44                     	endif
  1551   001F44  0008               	tblrd		*
  1552   001F46  50F5               	movf	tablat,w,c
  1553   001F48  0A25               	xorlw	37
  1554   001F4A  A4D8               	btfss	status,2,c
  1555   001F4C  EFAA  F00F         	goto	u4501
  1556   001F50  EFAC  F00F         	goto	u4500
  1557   001F54                     u4501:
  1558   001F54  EF04  F011         	goto	l4631
  1559   001F58                     u4500:
  1560   001F58                     
  1561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1562   001F58  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1563   001F5A  6ED9               	movwf	fsr2l,c
  1564   001F5C  6ADA               	clrf	fsr2h,c
  1565   001F5E  2ADF               	incf	indf2,f,c
  1566   001F60                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1568   001F60  0E00               	movlw	0
  1569   001F62  6E59               	movwf	(_width+1)^0,c
  1570   001F64  0E00               	movlw	0
  1571   001F66  6E58               	movwf	_width^0,c
  1572   001F68  C058  F05C         	movff	_width,_flags
  1573   001F6C                     
  1574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1575   001F6C  685A               	setf	_prec^0,c
  1576   001F6E  685B               	setf	(_prec+1)^0,c
  1577   001F70                     
  1578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1579   001F70  0E00               	movlw	0
  1580   001F72  6E3B               	movwf	vfpfcnvrt@done^0,c
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1583   001F74  EFE0  F00F         	goto	l4569
  1584   001F78                     l4559:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1587   001F78  825C               	bsf	_flags^0,1,c
  1588   001F7A                     
  1589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1590   001F7A  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1591   001F7C  6ED9               	movwf	fsr2l,c
  1592   001F7E  6ADA               	clrf	fsr2h,c
  1593   001F80  2ADF               	incf	indf2,f,c
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1596   001F82  EFE0  F00F         	goto	l4569
  1597   001F86                     l4563:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1600   001F86  0E01               	movlw	1
  1601   001F88  6E3B               	movwf	vfpfcnvrt@done^0,c
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1604   001F8A  EFE0  F00F         	goto	l4569
  1605   001F8E                     l4567:
  1606   001F8E  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1607   001F90  6ED9               	movwf	fsr2l,c
  1608   001F92  6ADA               	clrf	fsr2h,c
  1609   001F94  CFDF FFF6          	movff	indf2,tblptrl
  1610   001F98                     	if	1	;There is more than 1 active tblptr byte
  1611   001F98  0E08               	movlw	high __smallconst
  1612   001F9A  6EF7               	movwf	tblptrh,c
  1613   001F9C                     	endif
  1614   001F9C                     	if	0	;tblptru may be non-zero
  1615   001F9C                     	endif
  1616   001F9C                     	if	0	;tblptru may be non-zero
  1617   001F9C                     	endif
  1618   001F9C  0008               	tblrd		*
  1619   001F9E  50F5               	movf	tablat,w,c
  1620   001FA0  6E39               	movwf	??_vfpfcnvrt^0,c
  1621   001FA2  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  1622                           
  1623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1624                           ; Switch size 1, requested type "simple"
  1625                           ; Number of cases is 1, Range of values is 0 to 0
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte            4     3 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630   001FA4  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1631   001FA6  0A00               	xorlw	0	; case 0
  1632   001FA8  B4D8               	btfsc	status,2,c
  1633   001FAA  EFD9  F00F         	goto	l4905
  1634   001FAE  EFC3  F00F         	goto	l4563
  1635   001FB2                     l4905:
  1636                           
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 1, Range of values is 48 to 48
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte            4     3 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643   001FB2  5039               	movf	??_vfpfcnvrt^0,w,c
  1644   001FB4  0A30               	xorlw	48	; case 48
  1645   001FB6  B4D8               	btfsc	status,2,c
  1646   001FB8  EFBC  F00F         	goto	l4559
  1647   001FBC  EFC3  F00F         	goto	l4563
  1648   001FC0                     l4569:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1651   001FC0  503B               	movf	vfpfcnvrt@done^0,w,c
  1652   001FC2  B4D8               	btfsc	status,2,c
  1653   001FC4  EFE6  F00F         	goto	u4511
  1654   001FC8  EFE8  F00F         	goto	u4510
  1655   001FCC                     u4511:
  1656   001FCC  EFC7  F00F         	goto	l4567
  1657   001FD0                     u4510:
  1658   001FD0                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1660   001FD0  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1661   001FD2  6ED9               	movwf	fsr2l,c
  1662   001FD4  6ADA               	clrf	fsr2h,c
  1663   001FD6  CFDF FFF6          	movff	indf2,tblptrl
  1664   001FDA                     	if	1	;There is more than 1 active tblptr byte
  1665   001FDA  0E08               	movlw	high __smallconst
  1666   001FDC  6EF7               	movwf	tblptrh,c
  1667   001FDE                     	endif
  1668   001FDE                     	if	0	;tblptru may be non-zero
  1669   001FDE                     	endif
  1670   001FDE                     	if	0	;tblptru may be non-zero
  1671   001FDE                     	endif
  1672   001FDE  0008               	tblrd		*
  1673   001FE0  50F5               	movf	tablat,w,c
  1674   001FE2  0A2E               	xorlw	46
  1675   001FE4  A4D8               	btfss	status,2,c
  1676   001FE6  EFF7  F00F         	goto	u4521
  1677   001FEA  EFF9  F00F         	goto	u4520
  1678   001FEE                     u4521:
  1679   001FEE  EF07  F010         	goto	l4577
  1680   001FF2                     u4520:
  1681   001FF2                     
  1682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1683   001FF2  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1684   001FF4  6ED9               	movwf	fsr2l,c
  1685   001FF6  6ADA               	clrf	fsr2h,c
  1686   001FF8  2ADF               	incf	indf2,f,c
  1687   001FFA                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1689   001FFA  C037  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1690   001FFE  C038  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1691   002002  EC75  F017         	call	_read_prec_or_width	;wreg free
  1692   002006  C007  F05A         	movff	?_read_prec_or_width,_prec
  1693   00200A  C008  F05B         	movff	?_read_prec_or_width+1,_prec+1
  1694   00200E                     l4577:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1697   00200E  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1698   002010  6ED9               	movwf	fsr2l,c
  1699   002012  6ADA               	clrf	fsr2h,c
  1700   002014  50DF               	movf	indf2,w,c
  1701   002016  6E41               	movwf	vfpfcnvrt@cp^0,c
  1702   002018  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1703   00201C                     	if	1	;There is more than 1 active tblptr byte
  1704   00201C  0E08               	movlw	high __smallconst
  1705   00201E  6EF7               	movwf	tblptrh,c
  1706   002020                     	endif
  1707   002020                     	if	0	;tblptru may be non-zero
  1708   002020                     	endif
  1709   002020                     	if	0	;tblptru may be non-zero
  1710   002020                     	endif
  1711   002020  0008               	tblrd		*
  1712   002022  50F5               	movf	tablat,w,c
  1713   002024  0A75               	xorlw	117
  1714   002026  A4D8               	btfss	status,2,c
  1715   002028  EF18  F010         	goto	u4531
  1716   00202C  EF1A  F010         	goto	u4530
  1717   002030                     u4531:
  1718   002030  EF4D  F010         	goto	l4593
  1719   002034                     u4530:
  1720   002034                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1722   002034  5038               	movf	vfpfcnvrt@ap^0,w,c
  1723   002036  6ED9               	movwf	fsr2l,c
  1724   002038  6ADA               	clrf	fsr2h,c
  1725   00203A  0E02               	movlw	2
  1726   00203C  26DF               	addwf	indf2,f,c
  1727   00203E  5CDF               	subwf	indf2,w,c
  1728   002040  6ED9               	movwf	fsr2l,c
  1729   002042  6ADA               	clrf	fsr2h,c
  1730   002044  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  1731   002048  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+1
  1732   00204C                     
  1733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1734   00204C  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1735   00204E  6ED9               	movwf	fsr2l,c
  1736   002050  6ADA               	clrf	fsr2h,c
  1737   002052  2841               	incf	vfpfcnvrt@cp^0,w,c
  1738   002054  6EDF               	movwf	indf2,c
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1741   002056  EF37  F010         	goto	l4591
  1742   00205A                     l4585:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1745   00205A  C036  F017         	movff	vfpfcnvrt@fp,utoa@fp
  1746   00205E  C03C  F018         	movff	vfpfcnvrt@convarg,utoa@d
  1747   002062  C03D  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1748   002066  EC4C  F014         	call	_utoa	;wreg free
  1749   00206A  EF15  F011         	goto	l962
  1750   00206E                     l4591:
  1751   00206E  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1752   002072                     	if	1	;There is more than 1 active tblptr byte
  1753   002072  0E08               	movlw	high __smallconst
  1754   002074  6EF7               	movwf	tblptrh,c
  1755   002076                     	endif
  1756   002076                     	if	0	;tblptru may be non-zero
  1757   002076                     	endif
  1758   002076                     	if	0	;tblptru may be non-zero
  1759   002076                     	endif
  1760   002076  0008               	tblrd		*
  1761   002078  50F5               	movf	tablat,w,c
  1762   00207A  6E39               	movwf	??_vfpfcnvrt^0,c
  1763   00207C  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  1764                           
  1765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 1, Range of values is 0 to 0
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte            4     3 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772   00207E  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1773   002080  0A00               	xorlw	0	; case 0
  1774   002082  B4D8               	btfsc	status,2,c
  1775   002084  EF46  F010         	goto	l4907
  1776   002088  EF4D  F010         	goto	l4593
  1777   00208C                     l4907:
  1778                           
  1779                           ; Switch size 1, requested type "simple"
  1780                           ; Number of cases is 1, Range of values is 117 to 117
  1781                           ; switch strategies available:
  1782                           ; Name         Instructions Cycles
  1783                           ; simple_byte            4     3 (average)
  1784                           ;	Chosen strategy is simple_byte
  1785   00208C  5039               	movf	??_vfpfcnvrt^0,w,c
  1786   00208E  0A75               	xorlw	117	; case 117
  1787   002090  B4D8               	btfsc	status,2,c
  1788   002092  EF2D  F010         	goto	l4585
  1789   002096  EF4D  F010         	goto	l4593
  1790   00209A                     l4593:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1793   00209A  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1794   00209C  6ED9               	movwf	fsr2l,c
  1795   00209E  6ADA               	clrf	fsr2h,c
  1796   0020A0  50DF               	movf	indf2,w,c
  1797   0020A2  6E41               	movwf	vfpfcnvrt@cp^0,c
  1798   0020A4                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1800   0020A4  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1801   0020A8                     	if	1	;There is more than 1 active tblptr byte
  1802   0020A8  0E08               	movlw	high __smallconst
  1803   0020AA  6EF7               	movwf	tblptrh,c
  1804   0020AC                     	endif
  1805   0020AC                     	if	0	;tblptru may be non-zero
  1806   0020AC                     	endif
  1807   0020AC                     	if	0	;tblptru may be non-zero
  1808   0020AC                     	endif
  1809   0020AC  0008               	tblrd		*
  1810   0020AE  CFF5 F040          	movff	tablat,vfpfcnvrt@c
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1813   0020B2  EF66  F010         	goto	l4605
  1814   0020B6                     l4597:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1817   0020B6  2A41               	incf	vfpfcnvrt@cp^0,f,c
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1820   0020B8  EF7F  F010         	goto	l4607
  1821   0020BC                     l4599:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1824   0020BC  0E6C               	movlw	108
  1825   0020BE  6E40               	movwf	vfpfcnvrt@c^0,c
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  1828   0020C0  EF7F  F010         	goto	l4607
  1829   0020C4                     l4601:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1832   0020C4  0E00               	movlw	0
  1833   0020C6  6E40               	movwf	vfpfcnvrt@c^0,c
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  1836   0020C8  EF7F  F010         	goto	l4607
  1837   0020CC                     l4605:
  1838   0020CC  5040               	movf	vfpfcnvrt@c^0,w,c
  1839   0020CE  6E39               	movwf	??_vfpfcnvrt^0,c
  1840   0020D0  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  1841                           
  1842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 1, Range of values is 0 to 0
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte            4     3 (average)
  1848                           ;	Chosen strategy is simple_byte
  1849   0020D2  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1850   0020D4  0A00               	xorlw	0	; case 0
  1851   0020D6  B4D8               	btfsc	status,2,c
  1852   0020D8  EF70  F010         	goto	l4909
  1853   0020DC  EF62  F010         	goto	l4601
  1854   0020E0                     l4909:
  1855                           
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 3, Range of values is 76 to 108
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte           10     6 (average)
  1861                           ;	Chosen strategy is simple_byte
  1862   0020E0  5039               	movf	??_vfpfcnvrt^0,w,c
  1863   0020E2  0A4C               	xorlw	76	; case 76
  1864   0020E4  B4D8               	btfsc	status,2,c
  1865   0020E6  EF5B  F010         	goto	l4597
  1866   0020EA  0A2A               	xorlw	42	; case 102
  1867   0020EC  B4D8               	btfsc	status,2,c
  1868   0020EE  EF5E  F010         	goto	l4599
  1869   0020F2  0A0A               	xorlw	10	; case 108
  1870   0020F4  B4D8               	btfsc	status,2,c
  1871   0020F6  EF5B  F010         	goto	l4597
  1872   0020FA  EF62  F010         	goto	l4601
  1873   0020FE                     l4607:
  1874   0020FE  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1875   002102                     	if	1	;There is more than 1 active tblptr byte
  1876   002102  0E08               	movlw	high __smallconst
  1877   002104  6EF7               	movwf	tblptrh,c
  1878   002106                     	endif
  1879   002106                     	if	0	;tblptru may be non-zero
  1880   002106                     	endif
  1881   002106                     	if	0	;tblptru may be non-zero
  1882   002106                     	endif
  1883   002106  0008               	tblrd		*
  1884   002108  50F5               	movf	tablat,w,c
  1885   00210A  0A66               	xorlw	102
  1886   00210C  A4D8               	btfss	status,2,c
  1887   00210E  EF8B  F010         	goto	u4541
  1888   002112  EF8D  F010         	goto	u4540
  1889   002116                     u4541:
  1890   002116  EFFE  F010         	goto	l4627
  1891   00211A                     u4540:
  1892   00211A  EFB7  F010         	goto	l4615
  1893   00211E                     l4609:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1896   00211E  5038               	movf	vfpfcnvrt@ap^0,w,c
  1897   002120  6ED9               	movwf	fsr2l,c
  1898   002122  6ADA               	clrf	fsr2h,c
  1899   002124  CFDF F039          	movff	indf2,??_vfpfcnvrt
  1900   002128  0E04               	movlw	4
  1901   00212A  26DF               	addwf	indf2,f,c
  1902   00212C  5039               	movf	??_vfpfcnvrt^0,w,c
  1903   00212E  6ED9               	movwf	fsr2l,c
  1904   002130  6ADA               	clrf	fsr2h,c
  1905   002132  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  1906   002136  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+1
  1907   00213A  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+2
  1908   00213E  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg+3
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  1911   002142  EFCC  F010         	goto	l4617
  1912   002146                     l4611:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1915   002146  5038               	movf	vfpfcnvrt@ap^0,w,c
  1916   002148  6ED9               	movwf	fsr2l,c
  1917   00214A  6ADA               	clrf	fsr2h,c
  1918   00214C  CFDF F039          	movff	indf2,??_vfpfcnvrt
  1919   002150  0E04               	movlw	4
  1920   002152  26DF               	addwf	indf2,f,c
  1921   002154  5039               	movf	??_vfpfcnvrt^0,w,c
  1922   002156  6ED9               	movwf	fsr2l,c
  1923   002158  6ADA               	clrf	fsr2h,c
  1924   00215A  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  1925   00215E  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+1
  1926   002162  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+2
  1927   002166  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg+3
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  1930   00216A  EFCC  F010         	goto	l4617
  1931   00216E                     l4615:
  1932   00216E  5040               	movf	vfpfcnvrt@c^0,w,c
  1933   002170  6E39               	movwf	??_vfpfcnvrt^0,c
  1934   002172  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  1935                           
  1936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 1, Range of values is 0 to 0
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943   002174  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1944   002176  0A00               	xorlw	0	; case 0
  1945   002178  B4D8               	btfsc	status,2,c
  1946   00217A  EFC1  F010         	goto	l4911
  1947   00217E  EFCC  F010         	goto	l4617
  1948   002182                     l4911:
  1949                           
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 2, Range of values is 76 to 108
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte            7     4 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956   002182  5039               	movf	??_vfpfcnvrt^0,w,c
  1957   002184  0A4C               	xorlw	76	; case 76
  1958   002186  B4D8               	btfsc	status,2,c
  1959   002188  EFA3  F010         	goto	l4611
  1960   00218C  0A20               	xorlw	32	; case 108
  1961   00218E  B4D8               	btfsc	status,2,c
  1962   002190  EF8F  F010         	goto	l4609
  1963   002194  EFCC  F010         	goto	l4617
  1964   002198                     l4617:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1967   002198  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1968   00219A  6ED9               	movwf	fsr2l,c
  1969   00219C  6ADA               	clrf	fsr2h,c
  1970   00219E  2841               	incf	vfpfcnvrt@cp^0,w,c
  1971   0021A0  6EDF               	movwf	indf2,c
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1974   0021A2  EFE8  F010         	goto	l4625
  1975   0021A6                     l4619:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1978   0021A6  C036  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1979   0021AA  C03C  F02F         	movff	vfpfcnvrt@convarg,efgtoa@f
  1980   0021AE  C03D  F030         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1981   0021B2  C03E  F031         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1982   0021B6  C03F  F032         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1983   0021BA  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1984   0021BE                     	if	1	;There is more than 1 active tblptr byte
  1985   0021BE  0E08               	movlw	high __smallconst
  1986   0021C0  6EF7               	movwf	tblptrh,c
  1987   0021C2                     	endif
  1988   0021C2                     	if	0	;tblptru may be non-zero
  1989   0021C2                     	endif
  1990   0021C2                     	if	0	;tblptru may be non-zero
  1991   0021C2                     	endif
  1992   0021C2  0008               	tblrd		*
  1993   0021C4  CFF5 F033          	movff	tablat,efgtoa@c
  1994   0021C8  EC2F  F004         	call	_efgtoa	;wreg free
  1995   0021CC  EF15  F011         	goto	l962
  1996   0021D0                     l4625:
  1997   0021D0  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1998   0021D4                     	if	1	;There is more than 1 active tblptr byte
  1999   0021D4  0E08               	movlw	high __smallconst
  2000   0021D6  6EF7               	movwf	tblptrh,c
  2001   0021D8                     	endif
  2002   0021D8                     	if	0	;tblptru may be non-zero
  2003   0021D8                     	endif
  2004   0021D8                     	if	0	;tblptru may be non-zero
  2005   0021D8                     	endif
  2006   0021D8  0008               	tblrd		*
  2007   0021DA  50F5               	movf	tablat,w,c
  2008   0021DC  6E39               	movwf	??_vfpfcnvrt^0,c
  2009   0021DE  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2010                           
  2011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2012                           ; Switch size 1, requested type "simple"
  2013                           ; Number of cases is 1, Range of values is 0 to 0
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte            4     3 (average)
  2017                           ;	Chosen strategy is simple_byte
  2018   0021E0  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2019   0021E2  0A00               	xorlw	0	; case 0
  2020   0021E4  B4D8               	btfsc	status,2,c
  2021   0021E6  EFF7  F010         	goto	l4913
  2022   0021EA  EFFE  F010         	goto	l4627
  2023   0021EE                     l4913:
  2024                           
  2025                           ; Switch size 1, requested type "simple"
  2026                           ; Number of cases is 1, Range of values is 102 to 102
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte            4     3 (average)
  2030                           ;	Chosen strategy is simple_byte
  2031   0021EE  5039               	movf	??_vfpfcnvrt^0,w,c
  2032   0021F0  0A66               	xorlw	102	; case 102
  2033   0021F2  B4D8               	btfsc	status,2,c
  2034   0021F4  EFD3  F010         	goto	l4619
  2035   0021F8  EFFE  F010         	goto	l4627
  2036   0021FC                     l4627:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2039   0021FC  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2040   0021FE  6ED9               	movwf	fsr2l,c
  2041   002200  6ADA               	clrf	fsr2h,c
  2042   002202  2ADF               	incf	indf2,f,c
  2043   002204  EF15  F011         	goto	l962
  2044   002208                     l4631:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2047   002208  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2048   00220A  6ED9               	movwf	fsr2l,c
  2049   00220C  6ADA               	clrf	fsr2h,c
  2050   00220E  CFDF FFF6          	movff	indf2,tblptrl
  2051   002212                     	if	1	;There is more than 1 active tblptr byte
  2052   002212  0E08               	movlw	high __smallconst
  2053   002214  6EF7               	movwf	tblptrh,c
  2054   002216                     	endif
  2055   002216                     	if	0	;tblptru may be non-zero
  2056   002216                     	endif
  2057   002216                     	if	0	;tblptru may be non-zero
  2058   002216                     	endif
  2059   002216  0008               	tblrd		*
  2060   002218  50F5               	movf	tablat,w,c
  2061   00221A  6E01               	movwf	fputc@c^0,c
  2062   00221C  6A02               	clrf	(fputc@c+1)^0,c
  2063   00221E  C036  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2064   002222  ECCB  F016         	call	_fputc	;wreg free
  2065   002226  EFFE  F010         	goto	l4627
  2066   00222A                     l962:
  2067   00222A  0012               	return		;funcret
  2068   00222C                     __end_of_vfpfcnvrt:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _utoa *****************
  2072 ;; Defined at:
  2073 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2076 ;;		 -> sprintf@f(12), 
  2077 ;;  d               2   23[COMRAM] unsigned int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  i               2   29[COMRAM] int 
  2080 ;;  w               2   27[COMRAM] int 
  2081 ;;  p               2   25[COMRAM] int 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         3       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        9 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 4
  2098 ;; This function calls:
  2099 ;;		___lwdiv
  2100 ;;		___lwmod
  2101 ;;		_pad
  2102 ;; This function is called by:
  2103 ;;		_vfpfcnvrt
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text4
  2108   002898                     __ptext4:
  2109                           	callstack 0
  2110   002898                     _utoa:
  2111                           	callstack 23
  2112   002898                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           1013:     if (!(prec < 0)) {
  2114   002898  BE5B               	btfsc	(_prec+1)^0,7,c
  2115   00289A  EF51  F014         	goto	u4431
  2116   00289E  EF53  F014         	goto	u4430
  2117   0028A2                     u4431:
  2118   0028A2  EF54  F014         	goto	l4517
  2119   0028A6                     u4430:
  2120   0028A6                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  2122   0028A6  925C               	bcf	_flags^0,1,c
  2123   0028A8                     l4517:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  2126   0028A8  BE5B               	btfsc	(_prec+1)^0,7,c
  2127   0028AA  EF5B  F014         	goto	u4440
  2128   0028AE  EF59  F014         	goto	u4441
  2129   0028B2                     u4441:
  2130   0028B2  EF61  F014         	goto	l927
  2131   0028B6                     u4440:
  2132   0028B6  0E00               	movlw	0
  2133   0028B8  6E1B               	movwf	(utoa@p+1)^0,c
  2134   0028BA  0E01               	movlw	1
  2135   0028BC  6E1A               	movwf	utoa@p^0,c
  2136   0028BE  EF65  F014         	goto	l929
  2137   0028C2                     l927:
  2138   0028C2  C05A  F01A         	movff	_prec,utoa@p
  2139   0028C6  C05B  F01B         	movff	_prec+1,utoa@p+1
  2140   0028CA                     l929:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  2143   0028CA  C058  F01C         	movff	_width,utoa@w
  2144   0028CE  C059  F01D         	movff	_width+1,utoa@w+1
  2145   0028D2                     
  2146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  2147   0028D2  0E00               	movlw	0
  2148   0028D4  6E1F               	movwf	(utoa@i+1)^0,c
  2149   0028D6  0E4F               	movlw	79
  2150   0028D8  6E1E               	movwf	utoa@i^0,c
  2151   0028DA                     
  2152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  2153   0028DA  0E00               	movlw	0
  2154   0028DC  0101               	movlb	1	; () banked
  2155   0028DE  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2158   0028E0  EF9C  F014         	goto	l4535
  2159   0028E4                     l4525:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  2162   0028E4  061E               	decf	utoa@i^0,f,c
  2163   0028E6  A0D8               	btfss	status,0,c
  2164   0028E8  061F               	decf	(utoa@i+1)^0,f,c
  2165   0028EA                     
  2166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  2167   0028EA  0E00               	movlw	low _dbuf
  2168   0028EC  241E               	addwf	utoa@i^0,w,c
  2169   0028EE  6ED9               	movwf	fsr2l,c
  2170   0028F0  0E01               	movlw	high _dbuf
  2171   0028F2  201F               	addwfc	(utoa@i+1)^0,w,c
  2172   0028F4  6EDA               	movwf	fsr2h,c
  2173   0028F6  C018  F001         	movff	utoa@d,___lwmod@dividend
  2174   0028FA  C019  F002         	movff	utoa@d+1,___lwmod@dividend+1
  2175   0028FE  0E00               	movlw	0
  2176   002900  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2177   002902  0E0A               	movlw	10
  2178   002904  6E03               	movwf	___lwmod@divisor^0,c
  2179   002906  ECED  F018         	call	___lwmod	;wreg free
  2180   00290A  5001               	movf	?___lwmod^0,w,c
  2181   00290C  0F30               	addlw	48
  2182   00290E  6EDF               	movwf	indf2,c
  2183   002910                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  2185   002910  061A               	decf	utoa@p^0,f,c
  2186   002912  A0D8               	btfss	status,0,c
  2187   002914  061B               	decf	(utoa@p+1)^0,f,c
  2188   002916                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  2190   002916  061C               	decf	utoa@w^0,f,c
  2191   002918  A0D8               	btfss	status,0,c
  2192   00291A  061D               	decf	(utoa@w+1)^0,f,c
  2193   00291C                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  2195   00291C  C018  F001         	movff	utoa@d,___lwdiv@dividend
  2196   002920  C019  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  2197   002924  0E00               	movlw	0
  2198   002926  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2199   002928  0E0A               	movlw	10
  2200   00292A  6E03               	movwf	___lwdiv@divisor^0,c
  2201   00292C  EC4D  F018         	call	___lwdiv	;wreg free
  2202   002930  C001  F018         	movff	?___lwdiv,utoa@d
  2203   002934  C002  F019         	movff	?___lwdiv+1,utoa@d+1
  2204   002938                     l4535:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2207   002938  501E               	movf	utoa@i^0,w,c
  2208   00293A  101F               	iorwf	(utoa@i+1)^0,w,c
  2209   00293C  B4D8               	btfsc	status,2,c
  2210   00293E  EFA3  F014         	goto	u4451
  2211   002942  EFA5  F014         	goto	u4450
  2212   002946                     u4451:
  2213   002946  EFCF  F014         	goto	l4545
  2214   00294A                     u4450:
  2215   00294A  5018               	movf	utoa@d^0,w,c
  2216   00294C  1019               	iorwf	(utoa@d+1)^0,w,c
  2217   00294E  A4D8               	btfss	status,2,c
  2218   002950  EFAC  F014         	goto	u4461
  2219   002954  EFAE  F014         	goto	u4460
  2220   002958                     u4461:
  2221   002958  EF72  F014         	goto	l4525
  2222   00295C                     u4460:
  2223   00295C  BE1B               	btfsc	(utoa@p+1)^0,7,c
  2224   00295E  EFBB  F014         	goto	u4470
  2225   002962  501B               	movf	(utoa@p+1)^0,w,c
  2226   002964  E106               	bnz	u4471
  2227   002966  041A               	decf	utoa@p^0,w,c
  2228   002968  B0D8               	btfsc	status,0,c
  2229   00296A  EFB9  F014         	goto	u4471
  2230   00296E  EFBB  F014         	goto	u4470
  2231   002972                     u4471:
  2232   002972  EF72  F014         	goto	l4525
  2233   002976                     u4470:
  2234   002976  BE1D               	btfsc	(utoa@w+1)^0,7,c
  2235   002978  EFC6  F014         	goto	u4481
  2236   00297C  501D               	movf	(utoa@w+1)^0,w,c
  2237   00297E  E108               	bnz	u4480
  2238   002980  041C               	decf	utoa@w^0,w,c
  2239   002982  A0D8               	btfss	status,0,c
  2240   002984  EFC6  F014         	goto	u4481
  2241   002988  EFC8  F014         	goto	u4480
  2242   00298C                     u4481:
  2243   00298C  EFCF  F014         	goto	l4545
  2244   002990                     u4480:
  2245   002990  B25C               	btfsc	_flags^0,1,c
  2246   002992  EFCD  F014         	goto	u4491
  2247   002996  EFCF  F014         	goto	u4490
  2248   00299A                     u4491:
  2249   00299A  EF72  F014         	goto	l4525
  2250   00299E                     u4490:
  2251   00299E                     l4545:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2254   00299E  C017  F00F         	movff	utoa@fp,pad@fp
  2255   0029A2  0E00               	movlw	low _dbuf
  2256   0029A4  241E               	addwf	utoa@i^0,w,c
  2257   0029A6  6E10               	movwf	pad@buf^0,c
  2258   0029A8  0E01               	movlw	high _dbuf
  2259   0029AA  201F               	addwfc	(utoa@i+1)^0,w,c
  2260   0029AC  6E11               	movwf	(pad@buf+1)^0,c
  2261   0029AE  C01C  F012         	movff	utoa@w,pad@p
  2262   0029B2  C01D  F013         	movff	utoa@w+1,pad@p+1
  2263   0029B6  ECBA  F018         	call	_pad	;wreg free
  2264   0029BA  0012               	return		;funcret
  2265   0029BC                     __end_of_utoa:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function ___lwmod *****************
  2269 ;; Defined at:
  2270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  dividend        2    0[COMRAM] unsigned int 
  2273 ;;  divisor         2    2[COMRAM] unsigned int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  counter         1    4[COMRAM] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2    0[COMRAM] unsigned int 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         4       0       0       0       0       0       0       0       0
  2286 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2288 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2289 ;;Total ram usage:        5 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_utoa
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text5
  2299   0031DA                     __ptext5:
  2300                           	callstack 0
  2301   0031DA                     ___lwmod:
  2302                           	callstack 26
  2303   0031DA  5003               	movf	___lwmod@divisor^0,w,c
  2304   0031DC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2305   0031DE  B4D8               	btfsc	status,2,c
  2306   0031E0  EFF4  F018         	goto	u3071
  2307   0031E4  EFF6  F018         	goto	u3070
  2308   0031E8                     u3071:
  2309   0031E8  EF1A  F019         	goto	l656
  2310   0031EC                     u3070:
  2311   0031EC  0E01               	movlw	1
  2312   0031EE  6E05               	movwf	___lwmod@counter^0,c
  2313   0031F0  EFFE  F018         	goto	l3269
  2314   0031F4                     l3267:
  2315   0031F4  90D8               	bcf	status,0,c
  2316   0031F6  3603               	rlcf	___lwmod@divisor^0,f,c
  2317   0031F8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2318   0031FA  2A05               	incf	___lwmod@counter^0,f,c
  2319   0031FC                     l3269:
  2320   0031FC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2321   0031FE  EF03  F019         	goto	u3081
  2322   003202  EF05  F019         	goto	u3080
  2323   003206                     u3081:
  2324   003206  EFFA  F018         	goto	l3267
  2325   00320A                     u3080:
  2326   00320A                     l3271:
  2327   00320A  5003               	movf	___lwmod@divisor^0,w,c
  2328   00320C  5C01               	subwf	___lwmod@dividend^0,w,c
  2329   00320E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2330   003210  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2331   003212  A0D8               	btfss	status,0,c
  2332   003214  EF0E  F019         	goto	u3091
  2333   003218  EF10  F019         	goto	u3090
  2334   00321C                     u3091:
  2335   00321C  EF14  F019         	goto	l3275
  2336   003220                     u3090:
  2337   003220  5003               	movf	___lwmod@divisor^0,w,c
  2338   003222  5E01               	subwf	___lwmod@dividend^0,f,c
  2339   003224  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2340   003226  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2341   003228                     l3275:
  2342   003228  90D8               	bcf	status,0,c
  2343   00322A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2344   00322C  3203               	rrcf	___lwmod@divisor^0,f,c
  2345   00322E  2E05               	decfsz	___lwmod@counter^0,f,c
  2346   003230  EF05  F019         	goto	l3271
  2347   003234                     l656:
  2348   003234  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2349   003238  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2350   00323C  0012               	return		;funcret
  2351   00323E                     __end_of___lwmod:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function ___lwdiv *****************
  2355 ;; Defined at:
  2356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  dividend        2    0[COMRAM] unsigned int 
  2359 ;;  divisor         2    2[COMRAM] unsigned int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  quotient        2    4[COMRAM] unsigned int 
  2362 ;;  counter         1    6[COMRAM] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    0[COMRAM] unsigned int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         4       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        7 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_utoa
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text6
  2386   00309A                     __ptext6:
  2387                           	callstack 0
  2388   00309A                     ___lwdiv:
  2389                           	callstack 26
  2390   00309A  0E00               	movlw	0
  2391   00309C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2392   00309E  0E00               	movlw	0
  2393   0030A0  6E05               	movwf	___lwdiv@quotient^0,c
  2394   0030A2  5003               	movf	___lwdiv@divisor^0,w,c
  2395   0030A4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2396   0030A6  B4D8               	btfsc	status,2,c
  2397   0030A8  EF58  F018         	goto	u3041
  2398   0030AC  EF5A  F018         	goto	u3040
  2399   0030B0                     u3041:
  2400   0030B0  EF82  F018         	goto	l646
  2401   0030B4                     u3040:
  2402   0030B4  0E01               	movlw	1
  2403   0030B6  6E07               	movwf	___lwdiv@counter^0,c
  2404   0030B8  EF62  F018         	goto	l3249
  2405   0030BC                     l3247:
  2406   0030BC  90D8               	bcf	status,0,c
  2407   0030BE  3603               	rlcf	___lwdiv@divisor^0,f,c
  2408   0030C0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2409   0030C2  2A07               	incf	___lwdiv@counter^0,f,c
  2410   0030C4                     l3249:
  2411   0030C4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2412   0030C6  EF67  F018         	goto	u3051
  2413   0030CA  EF69  F018         	goto	u3050
  2414   0030CE                     u3051:
  2415   0030CE  EF5E  F018         	goto	l3247
  2416   0030D2                     u3050:
  2417   0030D2                     l3251:
  2418   0030D2  90D8               	bcf	status,0,c
  2419   0030D4  3605               	rlcf	___lwdiv@quotient^0,f,c
  2420   0030D6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2421   0030D8  5003               	movf	___lwdiv@divisor^0,w,c
  2422   0030DA  5C01               	subwf	___lwdiv@dividend^0,w,c
  2423   0030DC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2424   0030DE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2425   0030E0  A0D8               	btfss	status,0,c
  2426   0030E2  EF75  F018         	goto	u3061
  2427   0030E6  EF77  F018         	goto	u3060
  2428   0030EA                     u3061:
  2429   0030EA  EF7C  F018         	goto	l3259
  2430   0030EE                     u3060:
  2431   0030EE  5003               	movf	___lwdiv@divisor^0,w,c
  2432   0030F0  5E01               	subwf	___lwdiv@dividend^0,f,c
  2433   0030F2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2434   0030F4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2435   0030F6  8005               	bsf	___lwdiv@quotient^0,0,c
  2436   0030F8                     l3259:
  2437   0030F8  90D8               	bcf	status,0,c
  2438   0030FA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2439   0030FC  3203               	rrcf	___lwdiv@divisor^0,f,c
  2440   0030FE  2E07               	decfsz	___lwdiv@counter^0,f,c
  2441   003100  EF69  F018         	goto	l3251
  2442   003104                     l646:
  2443   003104  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2444   003108  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2445   00310C  0012               	return		;funcret
  2446   00310E                     __end_of___lwdiv:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _read_prec_or_width *****************
  2450 ;; Defined at:
  2451 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2454 ;;		 -> vfprintf@cfmt(1), 
  2455 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2456 ;;		 -> sprintf@ap(1), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  c               1    8[COMRAM] unsigned char 
  2459 ;;  n               2    9[COMRAM] int 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    6[COMRAM] int 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0
  2470 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2472 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2473 ;;Total ram usage:        5 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 1
  2476 ;; This function calls:
  2477 ;;		___wmul
  2478 ;; This function is called by:
  2479 ;;		_vfpfcnvrt
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text7
  2484   002EEA                     __ptext7:
  2485                           	callstack 0
  2486   002EEA                     _read_prec_or_width:
  2487                           	callstack 26
  2488   002EEA                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2490   002EEA  0E00               	movlw	0
  2491   002EEC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2492   002EEE  0E00               	movlw	0
  2493   002EF0  6E0A               	movwf	read_prec_or_width@n^0,c
  2494   002EF2                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2496   002EF2  5007               	movf	read_prec_or_width@fmt^0,w,c
  2497   002EF4  6ED9               	movwf	fsr2l,c
  2498   002EF6  6ADA               	clrf	fsr2h,c
  2499   002EF8  CFDF FFF6          	movff	indf2,tblptrl
  2500   002EFC                     	if	1	;There is more than 1 active tblptr byte
  2501   002EFC  0E08               	movlw	high __smallconst
  2502   002EFE  6EF7               	movwf	tblptrh,c
  2503   002F00                     	endif
  2504   002F00                     	if	0	;tblptru may be non-zero
  2505   002F00                     	endif
  2506   002F00                     	if	0	;tblptru may be non-zero
  2507   002F00                     	endif
  2508   002F00  0008               	tblrd		*
  2509   002F02  50F5               	movf	tablat,w,c
  2510   002F04  0A2A               	xorlw	42
  2511   002F06  A4D8               	btfss	status,2,c
  2512   002F08  EF88  F017         	goto	u3781
  2513   002F0C  EF8A  F017         	goto	u3780
  2514   002F10                     u3781:
  2515   002F10  EFB0  F017         	goto	l3663
  2516   002F14                     u3780:
  2517   002F14                     
  2518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2519   002F14  5007               	movf	read_prec_or_width@fmt^0,w,c
  2520   002F16  6ED9               	movwf	fsr2l,c
  2521   002F18  6ADA               	clrf	fsr2h,c
  2522   002F1A  2ADF               	incf	indf2,f,c
  2523   002F1C                     
  2524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2525   002F1C  5008               	movf	read_prec_or_width@ap^0,w,c
  2526   002F1E  6ED9               	movwf	fsr2l,c
  2527   002F20  6ADA               	clrf	fsr2h,c
  2528   002F22  0E02               	movlw	2
  2529   002F24  26DF               	addwf	indf2,f,c
  2530   002F26  5CDF               	subwf	indf2,w,c
  2531   002F28  6ED9               	movwf	fsr2l,c
  2532   002F2A  6ADA               	clrf	fsr2h,c
  2533   002F2C  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2534   002F30  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2537   002F34  EFC3  F017         	goto	l941
  2538   002F38                     l3659:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2541   002F38  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2542   002F3C  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2543   002F40  0E00               	movlw	0
  2544   002F42  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2545   002F44  0E0A               	movlw	10
  2546   002F46  6E03               	movwf	___wmul@multiplicand^0,c
  2547   002F48  EC72  F01A         	call	___wmul	;wreg free
  2548   002F4C  5009               	movf	read_prec_or_width@c^0,w,c
  2549   002F4E  2401               	addwf	?___wmul^0,w,c
  2550   002F50  6E0A               	movwf	read_prec_or_width@n^0,c
  2551   002F52  0E00               	movlw	0
  2552   002F54  2002               	addwfc	(?___wmul+1)^0,w,c
  2553   002F56  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2554   002F58                     
  2555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2556   002F58  5007               	movf	read_prec_or_width@fmt^0,w,c
  2557   002F5A  6ED9               	movwf	fsr2l,c
  2558   002F5C  6ADA               	clrf	fsr2h,c
  2559   002F5E  2ADF               	incf	indf2,f,c
  2560   002F60                     l3663:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2563   002F60  5007               	movf	read_prec_or_width@fmt^0,w,c
  2564   002F62  6ED9               	movwf	fsr2l,c
  2565   002F64  6ADA               	clrf	fsr2h,c
  2566   002F66  CFDF FFF6          	movff	indf2,tblptrl
  2567   002F6A                     	if	1	;There is more than 1 active tblptr byte
  2568   002F6A  0E08               	movlw	high __smallconst
  2569   002F6C  6EF7               	movwf	tblptrh,c
  2570   002F6E                     	endif
  2571   002F6E                     	if	0	;tblptru may be non-zero
  2572   002F6E                     	endif
  2573   002F6E                     	if	0	;tblptru may be non-zero
  2574   002F6E                     	endif
  2575   002F6E  0008               	tblrd		*
  2576   002F70  50F5               	movf	tablat,w,c
  2577   002F72  0FD0               	addlw	208
  2578   002F74  6E09               	movwf	read_prec_or_width@c^0,c
  2579   002F76  0E09               	movlw	9
  2580   002F78  6409               	cpfsgt	read_prec_or_width@c^0,c
  2581   002F7A  EFC1  F017         	goto	u3791
  2582   002F7E  EFC3  F017         	goto	u3790
  2583   002F82                     u3791:
  2584   002F82  EF9C  F017         	goto	l3659
  2585   002F86                     u3790:
  2586   002F86                     l941:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2589   002F86  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2590   002F8A  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2591   002F8E  0012               	return		;funcret
  2592   002F90                     __end_of_read_prec_or_width:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function ___wmul *****************
  2596 ;; Defined at:
  2597 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  multiplier      2    0[COMRAM] unsigned int 
  2600 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  product         2    4[COMRAM] unsigned int 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2    0[COMRAM] unsigned int 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, prodl, prodh
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         4       0       0       0       0       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2615 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        6 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_read_prec_or_width
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text8
  2626   0034E4                     __ptext8:
  2627                           	callstack 0
  2628   0034E4                     ___wmul:
  2629                           	callstack 26
  2630   0034E4  5001               	movf	___wmul@multiplier^0,w,c
  2631   0034E6  0203               	mulwf	___wmul@multiplicand^0,c
  2632   0034E8  CFF3 F005          	movff	prodl,___wmul@product
  2633   0034EC  CFF4 F006          	movff	prodh,___wmul@product+1
  2634   0034F0  5001               	movf	___wmul@multiplier^0,w,c
  2635   0034F2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2636   0034F4  50F3               	movf	243,w,c
  2637   0034F6  2606               	addwf	(___wmul@product+1)^0,f,c
  2638   0034F8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2639   0034FA  0203               	mulwf	___wmul@multiplicand^0,c
  2640   0034FC  50F3               	movf	243,w,c
  2641   0034FE  2606               	addwf	(___wmul@product+1)^0,f,c
  2642   003500  C005  F001         	movff	___wmul@product,?___wmul
  2643   003504  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2644   003508  0012               	return		;funcret
  2645   00350A                     __end_of___wmul:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _efgtoa *****************
  2649 ;; Defined at:
  2650 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  2653 ;;		 -> sprintf@f(12), 
  2654 ;;  f               4   46[COMRAM] PTR struct _IO_FILE
  2655 ;;  c               1   50[COMRAM] unsigned char 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  u               4   40[BANK0 ] struct flui
  2658 ;;  g               4   34[BANK0 ] struct flui
  2659 ;;  l               4   27[BANK0 ] struct flui
  2660 ;;  h               4   23[BANK0 ] struct flui
  2661 ;;  ou              4   17[BANK0 ] struct flui
  2662 ;;  n               2   38[BANK0 ] int 
  2663 ;;  i               2   31[BANK0 ] int 
  2664 ;;  w               2   21[BANK0 ] int 
  2665 ;;  e               2   15[BANK0 ] int 
  2666 ;;  m               2   13[BANK0 ] int 
  2667 ;;  d               2   11[BANK0 ] int 
  2668 ;;  t               2    4[BANK0 ] int 
  2669 ;;  p               2    2[BANK0 ] int 
  2670 ;;  ne              2    0[BANK0 ] int 
  2671 ;;  sign            1   33[BANK0 ] unsigned char 
  2672 ;;  nmode           1   10[BANK0 ] unsigned char 
  2673 ;;  mode            1    9[BANK0 ] unsigned char 
  2674 ;;  pp              1    8[BANK0 ] unsigned char 
  2675 ;;  esign           1    0        unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2685 ;;      Params:         6       0       0       0       0       0       0       0       0
  2686 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2687 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2688 ;;      Totals:         8      44       0       0       0       0       0       0       0
  2689 ;;Total ram usage:       52 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 4
  2692 ;; This function calls:
  2693 ;;		___fladd
  2694 ;;		___fldiv
  2695 ;;		___fleq
  2696 ;;		___flge
  2697 ;;		___flmul
  2698 ;;		___flneg
  2699 ;;		___flsub
  2700 ;;		___fltol
  2701 ;;		___fpclassifyf
  2702 ;;		_floorf
  2703 ;;		_labs
  2704 ;;		_memcpy
  2705 ;;		_pad
  2706 ;;		_strcpy
  2707 ;; This function is called by:
  2708 ;;		_vfpfcnvrt
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text9
  2713   00085E                     __ptext9:
  2714                           	callstack 0
  2715   00085E                     _efgtoa:
  2716                           	callstack 23
  2717   00085E                     
  2718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2719   00085E  0E00               	movlw	0
  2720   000860  0100               	movlb	0	; () banked
  2721   000862  6F81               	movwf	efgtoa@sign& (0+255),b
  2722   000864                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2725   000864  C02F  F082         	movff	efgtoa@f,efgtoa@g
  2726   000868  C030  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2727   00086C  C031  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2728   000870  C032  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2729   000874                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2732   000874  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2733   000876  EF41  F004         	goto	u4080
  2734   00087A  EF3F  F004         	goto	u4081
  2735   00087E                     u4081:
  2736   00087E  EF55  F004         	goto	l4289
  2737   000882                     u4080:
  2738   000882                     
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2741   000882  0E01               	movlw	1
  2742   000884  6F81               	movwf	efgtoa@sign& (0+255),b
  2743   000886                     
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2746   000886  C082  F001         	movff	efgtoa@g,___flneg@f1
  2747   00088A  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2748   00088E  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2749   000892  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2750   000896  EC3C  F01A         	call	___flneg	;wreg free
  2751   00089A  C001  F082         	movff	?___flneg,efgtoa@g
  2752   00089E  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2753   0008A2  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2754   0008A6  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2755   0008AA                     l4289:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2758   0008AA  0E00               	movlw	0
  2759   0008AC  0100               	movlb	0	; () banked
  2760   0008AE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2761   0008B0  0E00               	movlw	0
  2762   0008B2  6F86               	movwf	efgtoa@n& (0+255),b
  2763   0008B4                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2766   0008B4  C058  F075         	movff	_width,efgtoa@w
  2767   0008B8  C059  F076         	movff	_width+1,efgtoa@w+1
  2768   0008BC                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2771   0008BC  5181               	movf	efgtoa@sign& (0+255),w,b
  2772   0008BE  B4D8               	btfsc	status,2,c
  2773   0008C0  EF64  F004         	goto	u4091
  2774   0008C4  EF66  F004         	goto	u4090
  2775   0008C8                     u4091:
  2776   0008C8  EF7A  F004         	goto	l4303
  2777   0008CC                     u4090:
  2778   0008CC                     
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2781   0008CC  5181               	movf	efgtoa@sign& (0+255),w,b
  2782   0008CE  A4D8               	btfss	status,2,c
  2783   0008D0  EF6C  F004         	goto	u4101
  2784   0008D4  EF6E  F004         	goto	u4100
  2785   0008D8                     u4101:
  2786   0008D8  EF74  F004         	goto	l4299
  2787   0008DC                     u4100:
  2788   0008DC                     
  2789                           ; BSR set to: 0
  2790   0008DC  0E00               	movlw	0
  2791   0008DE  6F67               	movwf	(_efgtoa$845+1)& (0+255),b
  2792   0008E0  0E2B               	movlw	43
  2793   0008E2  6F66               	movwf	_efgtoa$845& (0+255),b
  2794   0008E4  EF78  F004         	goto	l4301
  2795   0008E8                     l4299:
  2796                           
  2797                           ; BSR set to: 0
  2798   0008E8  0E00               	movlw	0
  2799   0008EA  6F67               	movwf	(_efgtoa$845+1)& (0+255),b
  2800   0008EC  0E2D               	movlw	45
  2801   0008EE  6F66               	movwf	_efgtoa$845& (0+255),b
  2802   0008F0                     l4301:
  2803                           
  2804                           ; BSR set to: 0
  2805   0008F0  C066  F081         	movff	_efgtoa$845,efgtoa@sign
  2806   0008F4                     l4303:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2810   0008F4  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2811   0008F8  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2812   0008FC  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2813   000900  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2814   000904  ECE3  F015         	call	___fpclassifyf	;wreg free
  2815   000908  0401               	decf	?___fpclassifyf^0,w,c
  2816   00090A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2817   00090C  A4D8               	btfss	status,2,c
  2818   00090E  EF8B  F004         	goto	u4111
  2819   000912  EF8D  F004         	goto	u4110
  2820   000916                     u4111:
  2821   000916  EFBC  F004         	goto	l4321
  2822   00091A                     u4110:
  2823   00091A                     
  2824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2825   00091A  0100               	movlb	0	; () banked
  2826   00091C  5181               	movf	efgtoa@sign& (0+255),w,b
  2827   00091E  B4D8               	btfsc	status,2,c
  2828   000920  EF94  F004         	goto	u4121
  2829   000924  EF96  F004         	goto	u4120
  2830   000928                     u4121:
  2831   000928  EF9F  F004         	goto	l4313
  2832   00092C                     u4120:
  2833   00092C                     
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2836   00092C  C081  F100         	movff	efgtoa@sign,_dbuf
  2837   000930                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2840   000930  0775               	decf	efgtoa@w& (0+255),f,b
  2841   000932  A0D8               	btfss	status,0,c
  2842   000934  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2843   000936                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2846   000936  0E00               	movlw	0
  2847   000938  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2848   00093A  0E01               	movlw	1
  2849   00093C  6F86               	movwf	efgtoa@n& (0+255),b
  2850   00093E                     l4313:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2854   00093E  0E00               	movlw	low _dbuf
  2855   000940  2586               	addwf	efgtoa@n& (0+255),w,b
  2856   000942  6E01               	movwf	strcpy@dest^0,c
  2857   000944  0E01               	movlw	high _dbuf
  2858   000946  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2859   000948  6E02               	movwf	(strcpy@dest+1)^0,c
  2860   00094A  0E55               	movlw	low STR_7
  2861   00094C  6E03               	movwf	strcpy@src^0,c
  2862   00094E  EC03  F01A         	call	_strcpy	;wreg free
  2863   000952                     l4315:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2866   000952  0100               	movlb	0	; () banked
  2867   000954  0EFD               	movlw	253
  2868   000956  2775               	addwf	efgtoa@w& (0+255),f,b
  2869   000958  0EFF               	movlw	255
  2870   00095A  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2871   00095C                     
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2874   00095C  C02E  F00F         	movff	efgtoa@fp,pad@fp
  2875   000960  0E00               	movlw	low _dbuf
  2876   000962  6E10               	movwf	pad@buf^0,c
  2877   000964  0E01               	movlw	high _dbuf
  2878   000966  6E11               	movwf	(pad@buf+1)^0,c
  2879   000968  C075  F012         	movff	efgtoa@w,pad@p
  2880   00096C  C076  F013         	movff	efgtoa@w+1,pad@p+1
  2881   000970  ECBA  F018         	call	_pad	;wreg free
  2882   000974  EF58  F009         	goto	l875
  2883   000978                     l4321:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2886   000978  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2887   00097C  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2888   000980  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2889   000984  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2890   000988  ECE3  F015         	call	___fpclassifyf	;wreg free
  2891   00098C  5001               	movf	?___fpclassifyf^0,w,c
  2892   00098E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2893   000990  A4D8               	btfss	status,2,c
  2894   000992  EFCD  F004         	goto	u4131
  2895   000996  EFCF  F004         	goto	u4130
  2896   00099A                     u4131:
  2897   00099A  EFED  F004         	goto	l4339
  2898   00099E                     u4130:
  2899   00099E                     
  2900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2901   00099E  0100               	movlb	0	; () banked
  2902   0009A0  5181               	movf	efgtoa@sign& (0+255),w,b
  2903   0009A2  B4D8               	btfsc	status,2,c
  2904   0009A4  EFD6  F004         	goto	u4141
  2905   0009A8  EFD8  F004         	goto	u4140
  2906   0009AC                     u4141:
  2907   0009AC  EFE1  F004         	goto	l4331
  2908   0009B0                     u4140:
  2909   0009B0                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2912   0009B0  C081  F100         	movff	efgtoa@sign,_dbuf
  2913   0009B4                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2916   0009B4  0775               	decf	efgtoa@w& (0+255),f,b
  2917   0009B6  A0D8               	btfss	status,0,c
  2918   0009B8  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2919   0009BA                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2922   0009BA  0E00               	movlw	0
  2923   0009BC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2924   0009BE  0E01               	movlw	1
  2925   0009C0  6F86               	movwf	efgtoa@n& (0+255),b
  2926   0009C2                     l4331:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2930   0009C2  0E00               	movlw	low _dbuf
  2931   0009C4  2586               	addwf	efgtoa@n& (0+255),w,b
  2932   0009C6  6E01               	movwf	strcpy@dest^0,c
  2933   0009C8  0E01               	movlw	high _dbuf
  2934   0009CA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2935   0009CC  6E02               	movwf	(strcpy@dest+1)^0,c
  2936   0009CE  0E59               	movlw	low STR_10
  2937   0009D0  6E03               	movwf	strcpy@src^0,c
  2938   0009D2  EC03  F01A         	call	_strcpy	;wreg free
  2939   0009D6  EFA9  F004         	goto	l4315
  2940   0009DA                     l4339:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2943   0009DA  0E00               	movlw	0
  2944   0009DC  0100               	movlb	0	; () banked
  2945   0009DE  6F88               	movwf	efgtoa@u& (0+255),b
  2946   0009E0  0E00               	movlw	0
  2947   0009E2  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2948   0009E4  0E80               	movlw	128
  2949   0009E6  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2950   0009E8  0E3F               	movlw	63
  2951   0009EA  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2954   0009EC  0E00               	movlw	0
  2955   0009EE  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2956   0009F0  0E00               	movlw	0
  2957   0009F2  6F6F               	movwf	efgtoa@e& (0+255),b
  2958   0009F4                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2961   0009F4  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2962   0009F8  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2963   0009FC  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2964   000A00  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2965   000A04  0E00               	movlw	0
  2966   000A06  6E05               	movwf	___fleq@ff2^0,c
  2967   000A08  0E00               	movlw	0
  2968   000A0A  6E06               	movwf	(___fleq@ff2+1)^0,c
  2969   000A0C  0E00               	movlw	0
  2970   000A0E  6E07               	movwf	(___fleq@ff2+2)^0,c
  2971   000A10  0E00               	movlw	0
  2972   000A12  6E08               	movwf	(___fleq@ff2+3)^0,c
  2973   000A14  EC20  F017         	call	___fleq	;wreg free
  2974   000A18  B0D8               	btfsc	status,0,c
  2975   000A1A  EF11  F005         	goto	u4151
  2976   000A1E  EF13  F005         	goto	u4150
  2977   000A22                     u4151:
  2978   000A22  EFF2  F005         	goto	l878
  2979   000A26                     u4150:
  2980   000A26  EF20  F005         	goto	l4347
  2981   000A2A                     l880:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2984   000A2A  C071  F088         	movff	efgtoa@ou,efgtoa@u
  2985   000A2E  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2986   000A32  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2987   000A36  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2988   000A3A                     
  2989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2990   000A3A  0100               	movlb	0	; () banked
  2991   000A3C  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2992   000A3E  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2993   000A40                     l4347:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2996   000A40  C088  F001         	movff	efgtoa@u,___flmul@b
  2997   000A44  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2998   000A48  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2999   000A4C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3000   000A50  0E00               	movlw	0
  3001   000A52  6E05               	movwf	___flmul@a^0,c
  3002   000A54  0E00               	movlw	0
  3003   000A56  6E06               	movwf	(___flmul@a+1)^0,c
  3004   000A58  0E20               	movlw	32
  3005   000A5A  6E07               	movwf	(___flmul@a+2)^0,c
  3006   000A5C  0E41               	movlw	65
  3007   000A5E  6E08               	movwf	(___flmul@a+3)^0,c
  3008   000A60  ECB9  F00B         	call	___flmul	;wreg free
  3009   000A64  C001  F071         	movff	?___flmul,efgtoa@ou
  3010   000A68  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  3011   000A6C  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  3012   000A70  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  3013   000A74  0100               	movlb	0	; () banked
  3014   000A76  5171               	movf	efgtoa@ou& (0+255),w,b
  3015   000A78  5D82               	subwf	efgtoa@g& (0+255),w,b
  3016   000A7A  6E01               	movwf	labs@a^0,c
  3017   000A7C  5172               	movf	(efgtoa@ou+1)& (0+255),w,b
  3018   000A7E  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3019   000A80  6E02               	movwf	(labs@a+1)^0,c
  3020   000A82  5173               	movf	(efgtoa@ou+2)& (0+255),w,b
  3021   000A84  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3022   000A86  6E03               	movwf	(labs@a+2)^0,c
  3023   000A88  5174               	movf	(efgtoa@ou+3)& (0+255),w,b
  3024   000A8A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3025   000A8C  6E04               	movwf	(labs@a+3)^0,c
  3026   000A8E  EC4D  F019         	call	_labs	;wreg free
  3027   000A92  BE04               	btfsc	(?_labs+3)^0,7,c
  3028   000A94  EF57  F005         	goto	u4161
  3029   000A98  5004               	movf	(?_labs+3)^0,w,c
  3030   000A9A  1003               	iorwf	(?_labs+2)^0,w,c
  3031   000A9C  1002               	iorwf	(?_labs+1)^0,w,c
  3032   000A9E  E109               	bnz	u4160
  3033   000AA0  0E02               	movlw	2
  3034   000AA2  5C01               	subwf	?_labs^0,w,c
  3035   000AA4  A0D8               	btfss	status,0,c
  3036   000AA6  EF57  F005         	goto	u4161
  3037   000AAA  EF59  F005         	goto	u4160
  3038   000AAE                     u4161:
  3039   000AAE  EF15  F005         	goto	l880
  3040   000AB2                     u4160:
  3041   000AB2  C071  F01A         	movff	efgtoa@ou,___flge@ff1
  3042   000AB6  C072  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3043   000ABA  C073  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3044   000ABE  C074  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3045   000AC2  C082  F01E         	movff	efgtoa@g,___flge@ff2
  3046   000AC6  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3047   000ACA  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3048   000ACE  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3049   000AD2  EC61  F015         	call	___flge	;wreg free
  3050   000AD6  A0D8               	btfss	status,0,c
  3051   000AD8  EF70  F005         	goto	u4171
  3052   000ADC  EF72  F005         	goto	u4170
  3053   000AE0                     u4171:
  3054   000AE0  EF15  F005         	goto	l880
  3055   000AE4                     u4170:
  3056   000AE4                     
  3057                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3058   000AE4  0100               	movlb	0	; () banked
  3059   000AE6  5188               	movf	efgtoa@u& (0+255),w,b
  3060   000AE8  5D82               	subwf	efgtoa@g& (0+255),w,b
  3061   000AEA  6E01               	movwf	labs@a^0,c
  3062   000AEC  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3063   000AEE  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3064   000AF0  6E02               	movwf	(labs@a+1)^0,c
  3065   000AF2  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3066   000AF4  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3067   000AF6  6E03               	movwf	(labs@a+2)^0,c
  3068   000AF8  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3069   000AFA  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3070   000AFC  6E04               	movwf	(labs@a+3)^0,c
  3071   000AFE  EC4D  F019         	call	_labs	;wreg free
  3072   000B02  BE04               	btfsc	(?_labs+3)^0,7,c
  3073   000B04  EF91  F005         	goto	u4180
  3074   000B08  5004               	movf	(?_labs+3)^0,w,c
  3075   000B0A  1003               	iorwf	(?_labs+2)^0,w,c
  3076   000B0C  1002               	iorwf	(?_labs+1)^0,w,c
  3077   000B0E  E107               	bnz	u4181
  3078   000B10  0E02               	movlw	2
  3079   000B12  5C01               	subwf	?_labs^0,w,c
  3080   000B14  B0D8               	btfsc	status,0,c
  3081   000B16  EF8F  F005         	goto	u4181
  3082   000B1A  EF91  F005         	goto	u4180
  3083   000B1E                     u4181:
  3084   000B1E  EFD9  F005         	goto	l4365
  3085   000B22                     u4180:
  3086   000B22                     l4355:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3089   000B22  C088  F082         	movff	efgtoa@u,efgtoa@g
  3090   000B26  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3091   000B2A  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3092   000B2E  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3095   000B32  EFF2  F005         	goto	l878
  3096   000B36                     l4357:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3099   000B36  C088  F001         	movff	efgtoa@u,___fldiv@b
  3100   000B3A  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3101   000B3E  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3102   000B42  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3103   000B46  0E00               	movlw	0
  3104   000B48  6E05               	movwf	___fldiv@a^0,c
  3105   000B4A  0E00               	movlw	0
  3106   000B4C  6E06               	movwf	(___fldiv@a+1)^0,c
  3107   000B4E  0E20               	movlw	32
  3108   000B50  6E07               	movwf	(___fldiv@a+2)^0,c
  3109   000B52  0E41               	movlw	65
  3110   000B54  6E08               	movwf	(___fldiv@a+3)^0,c
  3111   000B56  ECCE  F00D         	call	___fldiv	;wreg free
  3112   000B5A  C001  F088         	movff	?___fldiv,efgtoa@u
  3113   000B5E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3114   000B62  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3115   000B66  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3116   000B6A                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3118   000B6A  0100               	movlb	0	; () banked
  3119   000B6C  076F               	decf	efgtoa@e& (0+255),f,b
  3120   000B6E  A0D8               	btfss	status,0,c
  3121   000B70  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3122   000B72                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3125   000B72  5188               	movf	efgtoa@u& (0+255),w,b
  3126   000B74  5D82               	subwf	efgtoa@g& (0+255),w,b
  3127   000B76  6E01               	movwf	labs@a^0,c
  3128   000B78  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3129   000B7A  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3130   000B7C  6E02               	movwf	(labs@a+1)^0,c
  3131   000B7E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3132   000B80  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3133   000B82  6E03               	movwf	(labs@a+2)^0,c
  3134   000B84  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3135   000B86  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3136   000B88  6E04               	movwf	(labs@a+3)^0,c
  3137   000B8A  EC4D  F019         	call	_labs	;wreg free
  3138   000B8E  BE04               	btfsc	(?_labs+3)^0,7,c
  3139   000B90  EFD7  F005         	goto	u4190
  3140   000B94  5004               	movf	(?_labs+3)^0,w,c
  3141   000B96  1003               	iorwf	(?_labs+2)^0,w,c
  3142   000B98  1002               	iorwf	(?_labs+1)^0,w,c
  3143   000B9A  E107               	bnz	u4191
  3144   000B9C  0E02               	movlw	2
  3145   000B9E  5C01               	subwf	?_labs^0,w,c
  3146   000BA0  B0D8               	btfsc	status,0,c
  3147   000BA2  EFD5  F005         	goto	u4191
  3148   000BA6  EFD7  F005         	goto	u4190
  3149   000BAA                     u4191:
  3150   000BAA  EFD9  F005         	goto	l4365
  3151   000BAE                     u4190:
  3152   000BAE  EF91  F005         	goto	l4355
  3153   000BB2                     l4365:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3156   000BB2  C082  F01A         	movff	efgtoa@g,___flge@ff1
  3157   000BB6  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3158   000BBA  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3159   000BBE  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3160   000BC2  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3161   000BC6  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3162   000BCA  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3163   000BCE  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3164   000BD2  EC61  F015         	call	___flge	;wreg free
  3165   000BD6  A0D8               	btfss	status,0,c
  3166   000BD8  EFF0  F005         	goto	u4201
  3167   000BDC  EFF2  F005         	goto	u4200
  3168   000BE0                     u4201:
  3169   000BE0  EF9B  F005         	goto	l4357
  3170   000BE4                     u4200:
  3171   000BE4                     l878:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3174   000BE4  C033  F069         	movff	efgtoa@c,efgtoa@mode
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3177   000BE8  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3178   000BEC                     
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3180   000BEC  BE5B               	btfsc	(_prec+1)^0,7,c
  3181   000BEE  EFFB  F005         	goto	u4211
  3182   000BF2  EFFD  F005         	goto	u4210
  3183   000BF6                     u4211:
  3184   000BF6  EF03  F006         	goto	l4371
  3185   000BFA                     u4210:
  3186   000BFA  C05A  F062         	movff	_prec,efgtoa@p
  3187   000BFE  C05B  F063         	movff	_prec+1,efgtoa@p+1
  3188   000C02  EF08  F006         	goto	l4373
  3189   000C06                     l4371:
  3190   000C06  0E00               	movlw	0
  3191   000C08  0100               	movlb	0	; () banked
  3192   000C0A  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3193   000C0C  0E06               	movlw	6
  3194   000C0E  6F62               	movwf	efgtoa@p& (0+255),b
  3195   000C10                     l4373:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3198   000C10  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3199   000C14  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3200   000C18                     
  3201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3202   000C18  0100               	movlb	0	; () banked
  3203   000C1A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3204   000C1C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3205   000C1E                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3208   000C1E  0E66               	movlw	102
  3209   000C20  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3210   000C22  A4D8               	btfss	status,2,c
  3211   000C24  EF16  F006         	goto	u4221
  3212   000C28  EF18  F006         	goto	u4220
  3213   000C2C                     u4221:
  3214   000C2C  EF38  F006         	goto	l4387
  3215   000C30                     u4220:
  3216   000C30                     
  3217                           ; BSR set to: 0
  3218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3219   000C30  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3220   000C32  EF1F  F006         	goto	u4230
  3221   000C36  EF1D  F006         	goto	u4231
  3222   000C3A                     u4231:
  3223   000C3A  EF2B  F006         	goto	l4383
  3224   000C3E                     u4230:
  3225   000C3E                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3228   000C3E  0E00               	movlw	0
  3229   000C40  6F88               	movwf	efgtoa@u& (0+255),b
  3230   000C42  0E00               	movlw	0
  3231   000C44  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3232   000C46  0E80               	movlw	128
  3233   000C48  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3234   000C4A  0E3F               	movlw	63
  3235   000C4C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3238   000C4E  0E00               	movlw	0
  3239   000C50  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3240   000C52  0E00               	movlw	0
  3241   000C54  6F6F               	movwf	efgtoa@e& (0+255),b
  3242   000C56                     l4383:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3246   000C56  0E67               	movlw	103
  3247   000C58  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3248   000C5A  B4D8               	btfsc	status,2,c
  3249   000C5C  EF32  F006         	goto	u4241
  3250   000C60  EF34  F006         	goto	u4240
  3251   000C64                     u4241:
  3252   000C64  EF38  F006         	goto	l4387
  3253   000C68                     u4240:
  3254   000C68                     
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3257   000C68  516F               	movf	efgtoa@e& (0+255),w,b
  3258   000C6A  276D               	addwf	efgtoa@m& (0+255),f,b
  3259   000C6C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3260   000C6E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3261   000C70                     l4387:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3265   000C70  0E00               	movlw	0
  3266   000C72  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3267   000C74  0E00               	movlw	0
  3268   000C76  6F7F               	movwf	efgtoa@i& (0+255),b
  3269   000C78                     
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3272   000C78  C082  F077         	movff	efgtoa@g,efgtoa@h
  3273   000C7C  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  3274   000C80  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  3275   000C84  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  3276   000C88                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3279   000C88  C088  F071         	movff	efgtoa@u,efgtoa@ou
  3280   000C8C  C089  F072         	movff	efgtoa@u+1,efgtoa@ou+1
  3281   000C90  C08A  F073         	movff	efgtoa@u+2,efgtoa@ou+2
  3282   000C94  C08B  F074         	movff	efgtoa@u+3,efgtoa@ou+3
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3285   000C98  EFC9  F006         	goto	l4401
  3286   000C9C                     l4393:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3290   000C9C  C077  F001         	movff	efgtoa@h,___fldiv@b
  3291   000CA0  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3292   000CA4  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3293   000CA8  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3294   000CAC  C088  F005         	movff	efgtoa@u,___fldiv@a
  3295   000CB0  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3296   000CB4  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3297   000CB8  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3298   000CBC  ECCE  F00D         	call	___fldiv	;wreg free
  3299   000CC0  C001  F01A         	movff	?___fldiv,floorf@x
  3300   000CC4  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3301   000CC8  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3302   000CCC  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3303   000CD0  EC44  F012         	call	_floorf	;wreg free
  3304   000CD4  C01A  F07B         	movff	?_floorf,efgtoa@l
  3305   000CD8  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  3306   000CDC  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  3307   000CE0  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3310   000CE4  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3311   000CE8  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3312   000CEC  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3313   000CF0  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3314   000CF4  ECDE  F014         	call	___fltol	;wreg free
  3315   000CF8  C001  F06B         	movff	?___fltol,efgtoa@d
  3316   000CFC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3317   000D00                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3319   000D00  C077  F01A         	movff	efgtoa@h,___flsub@b
  3320   000D04  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3321   000D08  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3322   000D0C  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3323   000D10  C07B  F005         	movff	efgtoa@l,___flmul@a
  3324   000D14  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  3325   000D18  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  3326   000D1C  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  3327   000D20  C088  F001         	movff	efgtoa@u,___flmul@b
  3328   000D24  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3329   000D28  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3330   000D2C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3331   000D30  ECB9  F00B         	call	___flmul	;wreg free
  3332   000D34  C001  F01E         	movff	?___flmul,___flsub@a
  3333   000D38  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3334   000D3C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3335   000D40  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3336   000D44  ECA0  F019         	call	___flsub	;wreg free
  3337   000D48  C01A  F077         	movff	?___flsub,efgtoa@h
  3338   000D4C  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  3339   000D50  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  3340   000D54  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  3341   000D58                     
  3342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3343   000D58  C088  F001         	movff	efgtoa@u,___fldiv@b
  3344   000D5C  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3345   000D60  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3346   000D64  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3347   000D68  0E00               	movlw	0
  3348   000D6A  6E05               	movwf	___fldiv@a^0,c
  3349   000D6C  0E00               	movlw	0
  3350   000D6E  6E06               	movwf	(___fldiv@a+1)^0,c
  3351   000D70  0E20               	movlw	32
  3352   000D72  6E07               	movwf	(___fldiv@a+2)^0,c
  3353   000D74  0E41               	movlw	65
  3354   000D76  6E08               	movwf	(___fldiv@a+3)^0,c
  3355   000D78  ECCE  F00D         	call	___fldiv	;wreg free
  3356   000D7C  C001  F088         	movff	?___fldiv,efgtoa@u
  3357   000D80  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3358   000D84  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3359   000D88  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3360   000D8C                     
  3361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3362   000D8C  0100               	movlb	0	; () banked
  3363   000D8E  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3364   000D90  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3365   000D92                     l4401:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3369   000D92  516D               	movf	efgtoa@m& (0+255),w,b
  3370   000D94  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3371   000D96  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3372   000D98  0A80               	xorlw	128
  3373   000D9A  6E34               	movwf	??_efgtoa^0,c
  3374   000D9C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3375   000D9E  0A80               	xorlw	128
  3376   000DA0  5834               	subwfb	??_efgtoa^0,w,c
  3377   000DA2  A0D8               	btfss	status,0,c
  3378   000DA4  EFD6  F006         	goto	u4251
  3379   000DA8  EFD8  F006         	goto	u4250
  3380   000DAC                     u4251:
  3381   000DAC  EF4E  F006         	goto	l4393
  3382   000DB0                     u4250:
  3383   000DB0                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3386   000DB0  C088  F001         	movff	efgtoa@u,___flmul@b
  3387   000DB4  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3388   000DB8  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3389   000DBC  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3390   000DC0  0E00               	movlw	0
  3391   000DC2  6E05               	movwf	___flmul@a^0,c
  3392   000DC4  0E00               	movlw	0
  3393   000DC6  6E06               	movwf	(___flmul@a+1)^0,c
  3394   000DC8  0EA0               	movlw	160
  3395   000DCA  6E07               	movwf	(___flmul@a+2)^0,c
  3396   000DCC  0E40               	movlw	64
  3397   000DCE  6E08               	movwf	(___flmul@a+3)^0,c
  3398   000DD0  ECB9  F00B         	call	___flmul	;wreg free
  3399   000DD4  C001  F07B         	movff	?___flmul,efgtoa@l
  3400   000DD8  C002  F07C         	movff	?___flmul+1,efgtoa@l+1
  3401   000DDC  C003  F07D         	movff	?___flmul+2,efgtoa@l+2
  3402   000DE0  C004  F07E         	movff	?___flmul+3,efgtoa@l+3
  3403   000DE4                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3405   000DE4  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3406   000DE8  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3407   000DEC  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3408   000DF0  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3409   000DF4  C07B  F01E         	movff	efgtoa@l,___flge@ff2
  3410   000DF8  C07C  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3411   000DFC  C07D  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3412   000E00  C07E  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3413   000E04  EC61  F015         	call	___flge	;wreg free
  3414   000E08  B0D8               	btfsc	status,0,c
  3415   000E0A  EF09  F007         	goto	u4261
  3416   000E0E  EF0B  F007         	goto	u4260
  3417   000E12                     u4261:
  3418   000E12  EF16  F007         	goto	l4409
  3419   000E16                     u4260:
  3420   000E16                     
  3421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3422   000E16  0E00               	movlw	0
  3423   000E18  0100               	movlb	0	; () banked
  3424   000E1A  6F7B               	movwf	efgtoa@l& (0+255),b
  3425   000E1C  0E00               	movlw	0
  3426   000E1E  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3427   000E20  0E00               	movlw	0
  3428   000E22  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3429   000E24  0E00               	movlw	0
  3430   000E26  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3433   000E28  EF3F  F007         	goto	l4415
  3434   000E2C                     l4409:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3437   000E2C  C077  F001         	movff	efgtoa@h,___fleq@ff1
  3438   000E30  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3439   000E34  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3440   000E38  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3441   000E3C  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  3442   000E40  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3443   000E44  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3444   000E48  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3445   000E4C  EC20  F017         	call	___fleq	;wreg free
  3446   000E50  A0D8               	btfss	status,0,c
  3447   000E52  EF2D  F007         	goto	u4271
  3448   000E56  EF2F  F007         	goto	u4270
  3449   000E5A                     u4271:
  3450   000E5A  EF3F  F007         	goto	l4415
  3451   000E5E                     u4270:
  3452   000E5E  0100               	movlb	0	; () banked
  3453   000E60  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3454   000E62  EF35  F007         	goto	u4281
  3455   000E66  EF37  F007         	goto	u4280
  3456   000E6A                     u4281:
  3457   000E6A  EF3F  F007         	goto	l4415
  3458   000E6E                     u4280:
  3459   000E6E                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3462   000E6E  0E00               	movlw	0
  3463   000E70  6F7B               	movwf	efgtoa@l& (0+255),b
  3464   000E72  0E00               	movlw	0
  3465   000E74  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3466   000E76  0E00               	movlw	0
  3467   000E78  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3468   000E7A  0E00               	movlw	0
  3469   000E7C  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3470   000E7E                     l4415:
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3473   000E7E  C082  F001         	movff	efgtoa@g,___fladd@b
  3474   000E82  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3475   000E86  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3476   000E8A  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3477   000E8E  C07B  F005         	movff	efgtoa@l,___fladd@a
  3478   000E92  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3479   000E96  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3480   000E9A  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3481   000E9E  EC59  F009         	call	___fladd	;wreg free
  3482   000EA2  C001  F077         	movff	?___fladd,efgtoa@h
  3483   000EA6  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  3484   000EAA  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  3485   000EAE  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  3486   000EB2                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3488   000EB2  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3489   000EB6  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3490   000EBA  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3491   000EBE  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3492   000EC2  0E00               	movlw	0
  3493   000EC4  6E05               	movwf	___flmul@a^0,c
  3494   000EC6  0E00               	movlw	0
  3495   000EC8  6E06               	movwf	(___flmul@a+1)^0,c
  3496   000ECA  0E20               	movlw	32
  3497   000ECC  6E07               	movwf	(___flmul@a+2)^0,c
  3498   000ECE  0E41               	movlw	65
  3499   000ED0  6E08               	movwf	(___flmul@a+3)^0,c
  3500   000ED2  C071  F001         	movff	efgtoa@ou,___flmul@b
  3501   000ED6  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3502   000EDA  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3503   000EDE  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3504   000EE2  ECB9  F00B         	call	___flmul	;wreg free
  3505   000EE6  C001  F01E         	movff	?___flmul,___flge@ff2
  3506   000EEA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3507   000EEE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3508   000EF2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3509   000EF6  EC61  F015         	call	___flge	;wreg free
  3510   000EFA  A0D8               	btfss	status,0,c
  3511   000EFC  EF82  F007         	goto	u4291
  3512   000F00  EF84  F007         	goto	u4290
  3513   000F04                     u4291:
  3514   000F04  EFAD  F007         	goto	l4427
  3515   000F08                     u4290:
  3516   000F08                     
  3517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3518   000F08  0100               	movlb	0	; () banked
  3519   000F0A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3520   000F0C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3521   000F0E                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3524   000F0E  C071  F001         	movff	efgtoa@ou,___flmul@b
  3525   000F12  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3526   000F16  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3527   000F1A  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3528   000F1E  0E00               	movlw	0
  3529   000F20  6E05               	movwf	___flmul@a^0,c
  3530   000F22  0E00               	movlw	0
  3531   000F24  6E06               	movwf	(___flmul@a+1)^0,c
  3532   000F26  0E20               	movlw	32
  3533   000F28  6E07               	movwf	(___flmul@a+2)^0,c
  3534   000F2A  0E41               	movlw	65
  3535   000F2C  6E08               	movwf	(___flmul@a+3)^0,c
  3536   000F2E  ECB9  F00B         	call	___flmul	;wreg free
  3537   000F32  C001  F071         	movff	?___flmul,efgtoa@ou
  3538   000F36  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  3539   000F3A  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  3540   000F3E  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  3541   000F42                     
  3542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3543   000F42  0E66               	movlw	102
  3544   000F44  0100               	movlb	0	; () banked
  3545   000F46  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3546   000F48  A4D8               	btfss	status,2,c
  3547   000F4A  EFA9  F007         	goto	u4301
  3548   000F4E  EFAB  F007         	goto	u4300
  3549   000F52                     u4301:
  3550   000F52  EFAD  F007         	goto	l4427
  3551   000F56                     u4300:
  3552   000F56                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3555   000F56  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3556   000F58  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3557   000F5A                     l4427:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3560   000F5A  C071  F088         	movff	efgtoa@ou,efgtoa@u
  3561   000F5E  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3562   000F62  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3563   000F66  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3564   000F6A                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3566   000F6A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3567   000F6E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3568   000F72                     
  3569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3570   000F72  0E00               	movlw	0
  3571   000F74  0100               	movlb	0	; () banked
  3572   000F76  6F68               	movwf	efgtoa@pp& (0+255),b
  3573   000F78                     
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3576   000F78  0E00               	movlw	0
  3577   000F7A  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3578   000F7C  0E00               	movlw	0
  3579   000F7E  6F64               	movwf	efgtoa@t& (0+255),b
  3580   000F80                     
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3583   000F80  0E00               	movlw	0
  3584   000F82  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3585   000F84  0E00               	movlw	0
  3586   000F86  6F7F               	movwf	efgtoa@i& (0+255),b
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3589   000F88  EFAB  F008         	goto	l4477
  3590   000F8C                     l4437:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3594   000F8C  C077  F001         	movff	efgtoa@h,___fldiv@b
  3595   000F90  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3596   000F94  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3597   000F98  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3598   000F9C  C088  F005         	movff	efgtoa@u,___fldiv@a
  3599   000FA0  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3600   000FA4  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3601   000FA8  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3602   000FAC  ECCE  F00D         	call	___fldiv	;wreg free
  3603   000FB0  C001  F01A         	movff	?___fldiv,floorf@x
  3604   000FB4  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3605   000FB8  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3606   000FBC  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3607   000FC0  EC44  F012         	call	_floorf	;wreg free
  3608   000FC4  C01A  F07B         	movff	?_floorf,efgtoa@l
  3609   000FC8  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  3610   000FCC  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  3611   000FD0  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3614   000FD4  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3615   000FD8  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3616   000FDC  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3617   000FE0  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3618   000FE4  ECDE  F014         	call	___fltol	;wreg free
  3619   000FE8  BE02               	btfsc	(?___fltol+1)^0,7,c
  3620   000FEA  EF02  F008         	goto	u4310
  3621   000FEE  5002               	movf	(?___fltol+1)^0,w,c
  3622   000FF0  E107               	bnz	u4311
  3623   000FF2  0E0A               	movlw	10
  3624   000FF4  5C01               	subwf	?___fltol^0,w,c
  3625   000FF6  B0D8               	btfsc	status,0,c
  3626   000FF8  EF00  F008         	goto	u4311
  3627   000FFC  EF02  F008         	goto	u4310
  3628   001000                     u4311:
  3629   001000  EF12  F008         	goto	l4441
  3630   001004                     u4310:
  3631   001004  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3632   001008  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3633   00100C  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3634   001010  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3635   001014  ECDE  F014         	call	___fltol	;wreg free
  3636   001018  C001  F06B         	movff	?___fltol,efgtoa@d
  3637   00101C  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3638   001020  EF17  F008         	goto	l908
  3639   001024                     l4441:
  3640   001024  0E00               	movlw	0
  3641   001026  0100               	movlb	0	; () banked
  3642   001028  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3643   00102A  0E09               	movlw	9
  3644   00102C  6F6B               	movwf	efgtoa@d& (0+255),b
  3645   00102E                     l908:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3648   00102E  0100               	movlb	0	; () banked
  3649   001030  5168               	movf	efgtoa@pp& (0+255),w,b
  3650   001032  A4D8               	btfss	status,2,c
  3651   001034  EF1E  F008         	goto	u4321
  3652   001038  EF20  F008         	goto	u4320
  3653   00103C                     u4321:
  3654   00103C  EF48  F008         	goto	l4461
  3655   001040                     u4320:
  3656   001040                     
  3657                           ; BSR set to: 0
  3658   001040  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3659   001042  EF27  F008         	goto	u4330
  3660   001046  EF25  F008         	goto	u4331
  3661   00104A                     u4331:
  3662   00104A  EF48  F008         	goto	l4461
  3663   00104E                     u4330:
  3664   00104E                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3667   00104E  0E00               	movlw	low _dbuf
  3668   001050  2586               	addwf	efgtoa@n& (0+255),w,b
  3669   001052  6ED9               	movwf	fsr2l,c
  3670   001054  0E01               	movlw	high _dbuf
  3671   001056  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3672   001058  6EDA               	movwf	fsr2h,c
  3673   00105A  0E2E               	movlw	46
  3674   00105C  6EDF               	movwf	indf2,c
  3675   00105E                     
  3676                           ; BSR set to: 0
  3677   00105E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3678   001060  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3679   001062                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3682   001062  0775               	decf	efgtoa@w& (0+255),f,b
  3683   001064  A0D8               	btfss	status,0,c
  3684   001066  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3685   001068                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3688   001068  0E01               	movlw	1
  3689   00106A  6F68               	movwf	efgtoa@pp& (0+255),b
  3690   00106C  EF48  F008         	goto	l4461
  3691   001070                     l4453:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3695   001070  0E00               	movlw	low _dbuf
  3696   001072  2586               	addwf	efgtoa@n& (0+255),w,b
  3697   001074  6ED9               	movwf	fsr2l,c
  3698   001076  0E01               	movlw	high _dbuf
  3699   001078  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3700   00107A  6EDA               	movwf	fsr2h,c
  3701   00107C  0E30               	movlw	48
  3702   00107E  6EDF               	movwf	indf2,c
  3703   001080                     
  3704                           ; BSR set to: 0
  3705   001080  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3706   001082  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3707   001084                     
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3710   001084  0775               	decf	efgtoa@w& (0+255),f,b
  3711   001086  A0D8               	btfss	status,0,c
  3712   001088  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3713   00108A                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3716   00108A  0764               	decf	efgtoa@t& (0+255),f,b
  3717   00108C  A0D8               	btfss	status,0,c
  3718   00108E  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3719   001090                     l4461:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3723   001090  5164               	movf	efgtoa@t& (0+255),w,b
  3724   001092  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3725   001094  A4D8               	btfss	status,2,c
  3726   001096  EF4F  F008         	goto	u4341
  3727   00109A  EF51  F008         	goto	u4340
  3728   00109E                     u4341:
  3729   00109E  EF38  F008         	goto	l4453
  3730   0010A2                     u4340:
  3731   0010A2                     
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3734   0010A2  0E00               	movlw	low _dbuf
  3735   0010A4  2586               	addwf	efgtoa@n& (0+255),w,b
  3736   0010A6  6ED9               	movwf	fsr2l,c
  3737   0010A8  0E01               	movlw	high _dbuf
  3738   0010AA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3739   0010AC  6EDA               	movwf	fsr2h,c
  3740   0010AE  516B               	movf	efgtoa@d& (0+255),w,b
  3741   0010B0  0F30               	addlw	48
  3742   0010B2  6EDF               	movwf	indf2,c
  3743   0010B4                     
  3744                           ; BSR set to: 0
  3745   0010B4  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3746   0010B6  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3747   0010B8                     
  3748                           ; BSR set to: 0
  3749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3750   0010B8  0775               	decf	efgtoa@w& (0+255),f,b
  3751   0010BA  A0D8               	btfss	status,0,c
  3752   0010BC  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3753   0010BE                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3756   0010BE  C077  F01A         	movff	efgtoa@h,___flsub@b
  3757   0010C2  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3758   0010C6  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3759   0010CA  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3760   0010CE  C07B  F005         	movff	efgtoa@l,___flmul@a
  3761   0010D2  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  3762   0010D6  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  3763   0010DA  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  3764   0010DE  C088  F001         	movff	efgtoa@u,___flmul@b
  3765   0010E2  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3766   0010E6  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3767   0010EA  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3768   0010EE  ECB9  F00B         	call	___flmul	;wreg free
  3769   0010F2  C001  F01E         	movff	?___flmul,___flsub@a
  3770   0010F6  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3771   0010FA  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3772   0010FE  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3773   001102  ECA0  F019         	call	___flsub	;wreg free
  3774   001106  C01A  F077         	movff	?___flsub,efgtoa@h
  3775   00110A  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  3776   00110E  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  3777   001112  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  3778   001116                     
  3779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3780   001116  C088  F001         	movff	efgtoa@u,___fldiv@b
  3781   00111A  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3782   00111E  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3783   001122  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3784   001126  0E00               	movlw	0
  3785   001128  6E05               	movwf	___fldiv@a^0,c
  3786   00112A  0E00               	movlw	0
  3787   00112C  6E06               	movwf	(___fldiv@a+1)^0,c
  3788   00112E  0E20               	movlw	32
  3789   001130  6E07               	movwf	(___fldiv@a+2)^0,c
  3790   001132  0E41               	movlw	65
  3791   001134  6E08               	movwf	(___fldiv@a+3)^0,c
  3792   001136  ECCE  F00D         	call	___fldiv	;wreg free
  3793   00113A  C001  F088         	movff	?___fldiv,efgtoa@u
  3794   00113E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3795   001142  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3796   001146  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3797   00114A                     
  3798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3799   00114A  0100               	movlb	0	; () banked
  3800   00114C  0760               	decf	efgtoa@ne& (0+255),f,b
  3801   00114E  A0D8               	btfss	status,0,c
  3802   001150  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3803   001152                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3806   001152  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3807   001154  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3808   001156                     l4477:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3812   001156  516D               	movf	efgtoa@m& (0+255),w,b
  3813   001158  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3814   00115A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3815   00115C  0A80               	xorlw	128
  3816   00115E  6E34               	movwf	??_efgtoa^0,c
  3817   001160  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3818   001162  0A80               	xorlw	128
  3819   001164  5834               	subwfb	??_efgtoa^0,w,c
  3820   001166  B0D8               	btfsc	status,0,c
  3821   001168  EFB8  F008         	goto	u4351
  3822   00116C  EFBA  F008         	goto	u4350
  3823   001170                     u4351:
  3824   001170  EFC8  F008         	goto	l4481
  3825   001174                     u4350:
  3826   001174                     
  3827                           ; BSR set to: 0
  3828   001174  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3829   001176  EFC6  F008         	goto	u4361
  3830   00117A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3831   00117C  E109               	bnz	u4360
  3832   00117E  0E4B               	movlw	75
  3833   001180  5D86               	subwf	efgtoa@n& (0+255),w,b
  3834   001182  A0D8               	btfss	status,0,c
  3835   001184  EFC6  F008         	goto	u4361
  3836   001188  EFC8  F008         	goto	u4360
  3837   00118C                     u4361:
  3838   00118C  EFC6  F007         	goto	l4437
  3839   001190                     u4360:
  3840   001190                     l4481:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3844   001190  0E00               	movlw	0
  3845   001192  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3846   001194  0E4F               	movlw	79
  3847   001196  6F7F               	movwf	efgtoa@i& (0+255),b
  3848   001198                     
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3851   001198  0E00               	movlw	low _dbuf
  3852   00119A  257F               	addwf	efgtoa@i& (0+255),w,b
  3853   00119C  6ED9               	movwf	fsr2l,c
  3854   00119E  0E01               	movlw	high _dbuf
  3855   0011A0  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3856   0011A2  6EDA               	movwf	fsr2h,c
  3857   0011A4  6ADF               	clrf	indf2,c
  3858   0011A6                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3861   0011A6  0E00               	movlw	low _dbuf
  3862   0011A8  6E34               	movwf	??_efgtoa^0,c
  3863   0011AA  0E01               	movlw	high _dbuf
  3864   0011AC  6E35               	movwf	(??_efgtoa+1)^0,c
  3865   0011AE  5186               	movf	efgtoa@n& (0+255),w,b
  3866   0011B0  5E34               	subwf	??_efgtoa^0,f,c
  3867   0011B2  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3868   0011B4  5A35               	subwfb	(??_efgtoa+1)^0,f,c
  3869   0011B6  517F               	movf	efgtoa@i& (0+255),w,b
  3870   0011B8  2434               	addwf	??_efgtoa^0,w,c
  3871   0011BA  6E01               	movwf	memcpy@d1^0,c
  3872   0011BC  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3873   0011BE  2035               	addwfc	(??_efgtoa+1)^0,w,c
  3874   0011C0  6E02               	movwf	(memcpy@d1+1)^0,c
  3875   0011C2  0E00               	movlw	low _dbuf
  3876   0011C4  6E03               	movwf	memcpy@s1^0,c
  3877   0011C6  0E01               	movlw	high _dbuf
  3878   0011C8  6E04               	movwf	(memcpy@s1+1)^0,c
  3879   0011CA  C086  F005         	movff	efgtoa@n,memcpy@n
  3880   0011CE  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3881   0011D2  EC78  F019         	call	_memcpy	;wreg free
  3882   0011D6                     
  3883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3884   0011D6  0100               	movlb	0	; () banked
  3885   0011D8  5186               	movf	efgtoa@n& (0+255),w,b
  3886   0011DA  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3887   0011DC  6F86               	movwf	efgtoa@n& (0+255),b
  3888   0011DE  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3889   0011E0  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3890   0011E2  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3891   0011E4                     
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3894   0011E4  5181               	movf	efgtoa@sign& (0+255),w,b
  3895   0011E6  A4D8               	btfss	status,2,c
  3896   0011E8  EFF8  F008         	goto	u4371
  3897   0011EC  EFFB  F008         	goto	u4370
  3898   0011F0                     u4371:
  3899   0011F0  0E01               	movlw	1
  3900   0011F2  EFFC  F008         	goto	u4380
  3901   0011F6                     u4370:
  3902   0011F6  0E00               	movlw	0
  3903   0011F8                     u4380:
  3904   0011F8  6F7F               	movwf	efgtoa@i& (0+255),b
  3905   0011FA  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3906   0011FC                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  3909   0011FC  A25C               	btfss	_flags^0,1,c
  3910   0011FE  EF03  F009         	goto	u4391
  3911   001202  EF05  F009         	goto	u4390
  3912   001206                     u4391:
  3913   001206  EF33  F009         	goto	l4503
  3914   00120A                     u4390:
  3915   00120A  EF15  F009         	goto	l4499
  3916   00120E                     l4495:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  3920   00120E  0786               	decf	efgtoa@n& (0+255),f,b
  3921   001210  A0D8               	btfss	status,0,c
  3922   001212  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3923   001214  0E00               	movlw	low _dbuf
  3924   001216  2586               	addwf	efgtoa@n& (0+255),w,b
  3925   001218  6ED9               	movwf	fsr2l,c
  3926   00121A  0E01               	movlw	high _dbuf
  3927   00121C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3928   00121E  6EDA               	movwf	fsr2h,c
  3929   001220  0E30               	movlw	48
  3930   001222  6EDF               	movwf	indf2,c
  3931   001224                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  3934   001224  0775               	decf	efgtoa@w& (0+255),f,b
  3935   001226  A0D8               	btfss	status,0,c
  3936   001228  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3937   00122A                     l4499:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  3941   00122A  5175               	movf	efgtoa@w& (0+255),w,b
  3942   00122C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3943   00122E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3944   001230  0A80               	xorlw	128
  3945   001232  6E34               	movwf	??_efgtoa^0,c
  3946   001234  5176               	movf	(efgtoa@w+1)& (0+255),w,b
  3947   001236  0A80               	xorlw	128
  3948   001238  5834               	subwfb	??_efgtoa^0,w,c
  3949   00123A  B0D8               	btfsc	status,0,c
  3950   00123C  EF22  F009         	goto	u4401
  3951   001240  EF24  F009         	goto	u4400
  3952   001244                     u4401:
  3953   001244  EF33  F009         	goto	l4503
  3954   001248                     u4400:
  3955   001248                     
  3956                           ; BSR set to: 0
  3957   001248  5186               	movf	efgtoa@n& (0+255),w,b
  3958   00124A  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3959   00124C  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3960   00124E  0A80               	xorlw	128
  3961   001250  6E34               	movwf	??_efgtoa^0,c
  3962   001252  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3963   001254  0A80               	xorlw	128
  3964   001256  5834               	subwfb	??_efgtoa^0,w,c
  3965   001258  A0D8               	btfss	status,0,c
  3966   00125A  EF31  F009         	goto	u4411
  3967   00125E  EF33  F009         	goto	u4410
  3968   001262                     u4411:
  3969   001262  EF07  F009         	goto	l4495
  3970   001266                     u4410:
  3971   001266                     l4503:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3975   001266  5181               	movf	efgtoa@sign& (0+255),w,b
  3976   001268  B4D8               	btfsc	status,2,c
  3977   00126A  EF39  F009         	goto	u4421
  3978   00126E  EF3B  F009         	goto	u4420
  3979   001272                     u4421:
  3980   001272  EF46  F009         	goto	l4507
  3981   001276                     u4420:
  3982   001276                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3985   001276  0786               	decf	efgtoa@n& (0+255),f,b
  3986   001278  A0D8               	btfss	status,0,c
  3987   00127A  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3988   00127C  0E00               	movlw	low _dbuf
  3989   00127E  2586               	addwf	efgtoa@n& (0+255),w,b
  3990   001280  6ED9               	movwf	fsr2l,c
  3991   001282  0E01               	movlw	high _dbuf
  3992   001284  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3993   001286  6EDA               	movwf	fsr2h,c
  3994   001288  C081  FFDF         	movff	efgtoa@sign,indf2
  3995   00128C                     l4507:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3999   00128C  517F               	movf	efgtoa@i& (0+255),w,b
  4000   00128E  5F75               	subwf	efgtoa@w& (0+255),f,b
  4001   001290  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4002   001292  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4003   001294                     
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4006   001294  C02E  F00F         	movff	efgtoa@fp,pad@fp
  4007   001298  0E00               	movlw	low _dbuf
  4008   00129A  2586               	addwf	efgtoa@n& (0+255),w,b
  4009   00129C  6E10               	movwf	pad@buf^0,c
  4010   00129E  0E01               	movlw	high _dbuf
  4011   0012A0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4012   0012A2  6E11               	movwf	(pad@buf+1)^0,c
  4013   0012A4  C075  F012         	movff	efgtoa@w,pad@p
  4014   0012A8  C076  F013         	movff	efgtoa@w+1,pad@p+1
  4015   0012AC  ECBA  F018         	call	_pad	;wreg free
  4016   0012B0                     l875:
  4017   0012B0  0012               	return		;funcret
  4018   0012B2                     __end_of_efgtoa:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _strcpy *****************
  4022 ;; Defined at:
  4023 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4026 ;;		 -> dbuf(80), 
  4027 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4028 ;;		 -> STR_10(4), STR_7(4), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  d               2    4[COMRAM] PTR unsigned char 
  4031 ;;		 -> dbuf(80), 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  2    0[COMRAM] PTR unsigned char 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         3       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        6 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_efgtoa
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text10
  4055   003406                     __ptext10:
  4056                           	callstack 0
  4057   003406                     _strcpy:
  4058                           	callstack 26
  4059   003406  C001  F005         	movff	strcpy@dest,strcpy@d
  4060   00340A  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4061   00340E                     l4265:
  4062   00340E  2A03               	incf	strcpy@src^0,f,c
  4063   003410  0403               	decf	strcpy@src^0,w,c
  4064   003412  6E04               	movwf	??_strcpy^0,c
  4065   003414  C004  FFF6         	movff	??_strcpy,tblptrl
  4066   003418                     	if	1	;There is more than 1 active tblptr byte
  4067   003418  0E08               	movlw	high __smallconst
  4068   00341A  6EF7               	movwf	tblptrh,c
  4069   00341C                     	endif
  4070   00341C                     	if	0	;tblptru may be non-zero
  4071   00341C                     	endif
  4072   00341C                     	if	0	;tblptru may be non-zero
  4073   00341C                     	endif
  4074   00341C  C005  FFD9         	movff	strcpy@d,fsr2l
  4075   003420  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4076   003424  4A05               	infsnz	strcpy@d^0,f,c
  4077   003426  2A06               	incf	(strcpy@d+1)^0,f,c
  4078   003428  0008               	tblrd		*
  4079   00342A  CFF5 FFDF          	movff	tablat,indf2
  4080   00342E  50DF               	movf	indf2,w,c
  4081   003430  A4D8               	btfss	status,2,c
  4082   003432  EF1D  F01A         	goto	u4061
  4083   003436  EF1F  F01A         	goto	u4060
  4084   00343A                     u4061:
  4085   00343A  EF07  F01A         	goto	l4265
  4086   00343E                     u4060:
  4087   00343E  0012               	return		;funcret
  4088   003440                     __end_of_strcpy:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _pad *****************
  4092 ;; Defined at:
  4093 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4096 ;;		 -> sprintf@f(12), 
  4097 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4098 ;;		 -> dbuf(80), 
  4099 ;;  p               2   17[COMRAM] int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  i               2   20[COMRAM] int 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4111 ;;      Params:         5       0       0       0       0       0       0       0       0
  4112 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4113 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4114 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4115 ;;Total ram usage:        8 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 3
  4118 ;; This function calls:
  4119 ;;		_fputc
  4120 ;;		_fputs
  4121 ;; This function is called by:
  4122 ;;		_efgtoa
  4123 ;;		_utoa
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text11
  4128   003174                     __ptext11:
  4129                           	callstack 0
  4130   003174                     _pad:
  4131                           	callstack 23
  4132   003174                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4134   003174  BE13               	btfsc	(pad@p+1)^0,7,c
  4135   003176  EFC1  F018         	goto	u4040
  4136   00317A  EFBF  F018         	goto	u4041
  4137   00317E                     u4041:
  4138   00317E  EFC5  F018         	goto	l860
  4139   003182                     u4040:
  4140   003182                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4142   003182  0E00               	movlw	0
  4143   003184  6E13               	movwf	(pad@p+1)^0,c
  4144   003186  0E00               	movlw	0
  4145   003188  6E12               	movwf	pad@p^0,c
  4146   00318A                     l860:
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4149   00318A  0E00               	movlw	0
  4150   00318C  6E16               	movwf	(pad@i+1)^0,c
  4151   00318E  0E00               	movlw	0
  4152   003190  6E15               	movwf	pad@i^0,c
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4155   003192  EFD5  F018         	goto	l4259
  4156   003196                     l4255:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4159   003196  0E00               	movlw	0
  4160   003198  6E02               	movwf	(fputc@c+1)^0,c
  4161   00319A  0E20               	movlw	32
  4162   00319C  6E01               	movwf	fputc@c^0,c
  4163   00319E  C00F  F003         	movff	pad@fp,fputc@fp
  4164   0031A2  ECCB  F016         	call	_fputc	;wreg free
  4165   0031A6                     
  4166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4167   0031A6  4A15               	infsnz	pad@i^0,f,c
  4168   0031A8  2A16               	incf	(pad@i+1)^0,f,c
  4169   0031AA                     l4259:
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4172   0031AA  5012               	movf	pad@p^0,w,c
  4173   0031AC  5C15               	subwf	pad@i^0,w,c
  4174   0031AE  5016               	movf	(pad@i+1)^0,w,c
  4175   0031B0  0A80               	xorlw	128
  4176   0031B2  6E14               	movwf	??_pad^0,c
  4177   0031B4  5013               	movf	(pad@p+1)^0,w,c
  4178   0031B6  0A80               	xorlw	128
  4179   0031B8  5814               	subwfb	??_pad^0,w,c
  4180   0031BA  A0D8               	btfss	status,0,c
  4181   0031BC  EFE2  F018         	goto	u4051
  4182   0031C0  EFE4  F018         	goto	u4050
  4183   0031C4                     u4051:
  4184   0031C4  EFCB  F018         	goto	l4255
  4185   0031C8                     u4050:
  4186   0031C8                     
  4187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4188   0031C8  C010  F009         	movff	pad@buf,fputs@s
  4189   0031CC  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4190   0031D0  C00F  F00B         	movff	pad@fp,fputs@fp
  4191   0031D4  ECE3  F019         	call	_fputs	;wreg free
  4192   0031D8  0012               	return		;funcret
  4193   0031DA                     __end_of_pad:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _fputs *****************
  4197 ;; Defined at:
  4198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4201 ;;		 -> dbuf(80), 
  4202 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4203 ;;		 -> sprintf@f(12), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  i               2   12[COMRAM] int 
  4206 ;;  c               1   11[COMRAM] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    8[COMRAM] int 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         3       0       0       0       0       0       0       0       0
  4217 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4219 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        6 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 2
  4223 ;; This function calls:
  4224 ;;		_fputc
  4225 ;; This function is called by:
  4226 ;;		_pad
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text12
  4231   0033C6                     __ptext12:
  4232                           	callstack 0
  4233   0033C6                     _fputs:
  4234                           	callstack 23
  4235   0033C6  0E00               	movlw	0
  4236   0033C8  6E0E               	movwf	(fputs@i+1)^0,c
  4237   0033CA  0E00               	movlw	0
  4238   0033CC  6E0D               	movwf	fputs@i^0,c
  4239   0033CE  EFF2  F019         	goto	l4249
  4240   0033D2                     l4245:
  4241   0033D2  C00C  F001         	movff	fputs@c,fputc@c
  4242   0033D6  6A02               	clrf	(fputc@c+1)^0,c
  4243   0033D8  C00B  F003         	movff	fputs@fp,fputc@fp
  4244   0033DC  ECCB  F016         	call	_fputc	;wreg free
  4245   0033E0  4A0D               	infsnz	fputs@i^0,f,c
  4246   0033E2  2A0E               	incf	(fputs@i+1)^0,f,c
  4247   0033E4                     l4249:
  4248   0033E4  500D               	movf	fputs@i^0,w,c
  4249   0033E6  2409               	addwf	fputs@s^0,w,c
  4250   0033E8  6ED9               	movwf	fsr2l,c
  4251   0033EA  500E               	movf	(fputs@i+1)^0,w,c
  4252   0033EC  200A               	addwfc	(fputs@s+1)^0,w,c
  4253   0033EE  6EDA               	movwf	fsr2h,c
  4254   0033F0  50DF               	movf	indf2,w,c
  4255   0033F2  6E0C               	movwf	fputs@c^0,c
  4256   0033F4  500C               	movf	fputs@c^0,w,c
  4257   0033F6  A4D8               	btfss	status,2,c
  4258   0033F8  EF00  F01A         	goto	u4031
  4259   0033FC  EF02  F01A         	goto	u4030
  4260   003400                     u4031:
  4261   003400  EFE9  F019         	goto	l4245
  4262   003404                     u4030:
  4263   003404  0012               	return		;funcret
  4264   003406                     __end_of_fputs:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _fputc *****************
  4268 ;; Defined at:
  4269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  c               2    0[COMRAM] int 
  4272 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4273 ;;		 -> sprintf@f(12), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2    0[COMRAM] int 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         3       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4288 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:        8 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 1
  4292 ;; This function calls:
  4293 ;;		_putch
  4294 ;; This function is called by:
  4295 ;;		_pad
  4296 ;;		_vfpfcnvrt
  4297 ;;		_fputs
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text13
  4302   002D96                     __ptext13:
  4303                           	callstack 0
  4304   002D96                     _fputc:
  4305                           	callstack 23
  4306   002D96  5003               	movf	fputc@fp^0,w,c
  4307   002D98  B4D8               	btfsc	status,2,c
  4308   002D9A  EFD1  F016         	goto	u2021
  4309   002D9E  EFD3  F016         	goto	u2020
  4310   002DA2                     u2021:
  4311   002DA2  EFDB  F016         	goto	l2651
  4312   002DA6                     u2020:
  4313   002DA6  5003               	movf	fputc@fp^0,w,c
  4314   002DA8  A4D8               	btfss	status,2,c
  4315   002DAA  EFD9  F016         	goto	u2031
  4316   002DAE  EFDB  F016         	goto	u2030
  4317   002DB2                     u2031:
  4318   002DB2  EFE0  F016         	goto	l2653
  4319   002DB6                     u2030:
  4320   002DB6                     l2651:
  4321   002DB6  5001               	movf	fputc@c^0,w,c
  4322   002DB8  ECC9  F01A         	call	_putch
  4323   002DBC  EF1F  F017         	goto	l1034
  4324   002DC0                     l2653:
  4325   002DC0  5003               	movf	fputc@fp^0,w,c
  4326   002DC2  6ED9               	movwf	fsr2l,c
  4327   002DC4  6ADA               	clrf	fsr2h,c
  4328   002DC6  0E0A               	movlw	10
  4329   002DC8  26D9               	addwf	fsr2l,f,c
  4330   002DCA  50DE               	movf	postinc2,w,c
  4331   002DCC  10DE               	iorwf	postinc2,w,c
  4332   002DCE  B4D8               	btfsc	status,2,c
  4333   002DD0  EFEC  F016         	goto	u2041
  4334   002DD4  EFEE  F016         	goto	u2040
  4335   002DD8                     u2041:
  4336   002DD8  EF07  F017         	goto	l2657
  4337   002DDC                     u2040:
  4338   002DDC  5003               	movf	fputc@fp^0,w,c
  4339   002DDE  6ED9               	movwf	fsr2l,c
  4340   002DE0  6ADA               	clrf	fsr2h,c
  4341   002DE2  0E0A               	movlw	10
  4342   002DE4  26D9               	addwf	fsr2l,f,c
  4343   002DE6  5003               	movf	fputc@fp^0,w,c
  4344   002DE8  6EE1               	movwf	fsr1l,c
  4345   002DEA  6AE2               	clrf	fsr1h,c
  4346   002DEC  0E03               	movlw	3
  4347   002DEE  26E1               	addwf	fsr1l,f,c
  4348   002DF0  50DE               	movf	postinc2,w,c
  4349   002DF2  5CE6               	subwf	postinc1,w,c
  4350   002DF4  50E6               	movf	postinc1,w,c
  4351   002DF6  0A80               	xorlw	128
  4352   002DF8  6E08               	movwf	(??_fputc+4)^0,c
  4353   002DFA  50DE               	movf	postinc2,w,c
  4354   002DFC  0A80               	xorlw	128
  4355   002DFE  5808               	subwfb	(??_fputc+4)^0,w,c
  4356   002E00  B0D8               	btfsc	status,0,c
  4357   002E02  EF05  F017         	goto	u2051
  4358   002E06  EF07  F017         	goto	u2050
  4359   002E0A                     u2051:
  4360   002E0A  EF1F  F017         	goto	l1034
  4361   002E0E                     u2050:
  4362   002E0E                     l2657:
  4363   002E0E  5003               	movf	fputc@fp^0,w,c
  4364   002E10  6ED9               	movwf	fsr2l,c
  4365   002E12  6ADA               	clrf	fsr2h,c
  4366   002E14  0E03               	movlw	3
  4367   002E16  26D9               	addwf	fsr2l,f,c
  4368   002E18  50DF               	movf	indf2,w,c
  4369   002E1A  6E04               	movwf	??_fputc^0,c
  4370   002E1C  5003               	movf	fputc@fp^0,w,c
  4371   002E1E  6ED9               	movwf	fsr2l,c
  4372   002E20  6ADA               	clrf	fsr2h,c
  4373   002E22  50DF               	movf	indf2,w,c
  4374   002E24  2404               	addwf	??_fputc^0,w,c
  4375   002E26  6ED9               	movwf	fsr2l,c
  4376   002E28  6ADA               	clrf	fsr2h,c
  4377   002E2A  C001  FFDF         	movff	fputc@c,indf2
  4378   002E2E  5003               	movf	fputc@fp^0,w,c
  4379   002E30  6ED9               	movwf	fsr2l,c
  4380   002E32  6ADA               	clrf	fsr2h,c
  4381   002E34  0E03               	movlw	3
  4382   002E36  26D9               	addwf	fsr2l,f,c
  4383   002E38  2ADE               	incf	postinc2,f,c
  4384   002E3A  0E00               	movlw	0
  4385   002E3C  22DD               	addwfc	postdec2,f,c
  4386   002E3E                     l1034:
  4387   002E3E  0012               	return		;funcret
  4388   002E40                     __end_of_fputc:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _putch *****************
  4392 ;; Defined at:
  4393 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  c               1    wreg     unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  c               1    0[COMRAM] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_fputc
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text14
  4421   003592                     __ptext14:
  4422                           	callstack 0
  4423   003592                     _putch:
  4424                           	callstack 23
  4425   003592  0012               	return		;funcret
  4426   003594                     __end_of_putch:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _memcpy *****************
  4430 ;; Defined at:
  4431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  d1              2    0[COMRAM] PTR void 
  4434 ;;		 -> dbuf(80), 
  4435 ;;  s1              2    2[COMRAM] PTR const void 
  4436 ;;		 -> dbuf(80), 
  4437 ;;  n               2    4[COMRAM] unsigned int 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4440 ;;		 -> dbuf(80), 
  4441 ;;  d               2    7[COMRAM] PTR unsigned char 
  4442 ;;		 -> dbuf(80), 
  4443 ;;  tmp             1    6[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2    0[COMRAM] PTR void 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4453 ;;      Params:         6       0       0       0       0       0       0       0       0
  4454 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4456 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4457 ;;Total ram usage:       11 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_efgtoa
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text15
  4467   0032F0                     __ptext15:
  4468                           	callstack 0
  4469   0032F0                     _memcpy:
  4470                           	callstack 26
  4471   0032F0  C003  F00A         	movff	memcpy@s1,memcpy@s
  4472   0032F4  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4473   0032F8  C001  F008         	movff	memcpy@d1,memcpy@d
  4474   0032FC  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4475   003300  EF92  F019         	goto	l4277
  4476   003304                     l4269:
  4477   003304  C00A  FFD9         	movff	memcpy@s,fsr2l
  4478   003308  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4479   00330C  50DF               	movf	indf2,w,c
  4480   00330E  6E07               	movwf	memcpy@tmp^0,c
  4481   003310  4A0A               	infsnz	memcpy@s^0,f,c
  4482   003312  2A0B               	incf	(memcpy@s+1)^0,f,c
  4483   003314  C008  FFD9         	movff	memcpy@d,fsr2l
  4484   003318  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4485   00331C  C007  FFDF         	movff	memcpy@tmp,indf2
  4486   003320  4A08               	infsnz	memcpy@d^0,f,c
  4487   003322  2A09               	incf	(memcpy@d+1)^0,f,c
  4488   003324                     l4277:
  4489   003324  0605               	decf	memcpy@n^0,f,c
  4490   003326  A0D8               	btfss	status,0,c
  4491   003328  0606               	decf	(memcpy@n+1)^0,f,c
  4492   00332A  2805               	incf	memcpy@n^0,w,c
  4493   00332C  E106               	bnz	u4071
  4494   00332E  2806               	incf	(memcpy@n+1)^0,w,c
  4495   003330  A4D8               	btfss	status,2,c
  4496   003332  EF9D  F019         	goto	u4071
  4497   003336  EF9F  F019         	goto	u4070
  4498   00333A                     u4071:
  4499   00333A  EF82  F019         	goto	l4269
  4500   00333E                     u4070:
  4501   00333E  0012               	return		;funcret
  4502   003340                     __end_of_memcpy:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _labs *****************
  4506 ;; Defined at:
  4507 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  a               4    0[COMRAM] long 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4    0[COMRAM] long 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         4       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        8 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_efgtoa
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text16
  4535   00329A                     __ptext16:
  4536                           	callstack 0
  4537   00329A                     _labs:
  4538                           	callstack 26
  4539   00329A  BE04               	btfsc	(labs@a+3)^0,7,c
  4540   00329C  EF52  F019         	goto	u3201
  4541   0032A0  EF54  F019         	goto	u3200
  4542   0032A4                     u3201:
  4543   0032A4  EF5E  F019         	goto	l3321
  4544   0032A8                     u3200:
  4545   0032A8  C001  F001         	movff	labs@a,?_labs
  4546   0032AC  C002  F002         	movff	labs@a+1,?_labs+1
  4547   0032B0  C003  F003         	movff	labs@a+2,?_labs+2
  4548   0032B4  C004  F004         	movff	labs@a+3,?_labs+3
  4549   0032B8  EF77  F019         	goto	l1016
  4550   0032BC                     l3321:
  4551   0032BC  C001  F005         	movff	labs@a,??_labs
  4552   0032C0  C002  F006         	movff	labs@a+1,??_labs+1
  4553   0032C4  C003  F007         	movff	labs@a+2,??_labs+2
  4554   0032C8  C004  F008         	movff	labs@a+3,??_labs+3
  4555   0032CC  1E05               	comf	??_labs^0,f,c
  4556   0032CE  1E06               	comf	(??_labs+1)^0,f,c
  4557   0032D0  1E07               	comf	(??_labs+2)^0,f,c
  4558   0032D2  1E08               	comf	(??_labs+3)^0,f,c
  4559   0032D4  2A05               	incf	??_labs^0,f,c
  4560   0032D6  0E00               	movlw	0
  4561   0032D8  2206               	addwfc	(??_labs+1)^0,f,c
  4562   0032DA  2207               	addwfc	(??_labs+2)^0,f,c
  4563   0032DC  2208               	addwfc	(??_labs+3)^0,f,c
  4564   0032DE  C005  F001         	movff	??_labs,?_labs
  4565   0032E2  C006  F002         	movff	??_labs+1,?_labs+1
  4566   0032E6  C007  F003         	movff	??_labs+2,?_labs+2
  4567   0032EA  C008  F004         	movff	??_labs+3,?_labs+3
  4568   0032EE                     l1016:
  4569   0032EE  0012               	return		;funcret
  4570   0032F0                     __end_of_labs:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _floorf *****************
  4574 ;; Defined at:
  4575 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  x               4   25[COMRAM] float 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  u               4   41[COMRAM] struct .
  4580 ;;  m               4   35[COMRAM] unsigned long 
  4581 ;;  e               2   39[COMRAM] int 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  4   25[COMRAM] float 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4591 ;;      Params:         4       0       0       0       0       0       0       0       0
  4592 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4594 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:       20 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_efgtoa
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text17
  4605   002488                     __ptext17:
  4606                           	callstack 0
  4607   002488                     _floorf:
  4608                           	callstack 26
  4609   002488  C095  F02A         	movff	floorf@F521,floorf@u
  4610   00248C  C096  F02B         	movff	floorf@F521+1,floorf@u+1
  4611   002490  C097  F02C         	movff	floorf@F521+2,floorf@u+2
  4612   002494  C098  F02D         	movff	floorf@F521+3,floorf@u+3
  4613   002498  C01A  F02A         	movff	floorf@x,floorf@u
  4614   00249C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4615   0024A0  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4616   0024A4  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4617   0024A8  0E81               	movlw	129
  4618   0024AA  6E1E               	movwf	??_floorf^0,c
  4619   0024AC  0EFF               	movlw	255
  4620   0024AE  6E1F               	movwf	(??_floorf+1)^0,c
  4621   0024B0  C02A  F020         	movff	floorf@u,??_floorf+2
  4622   0024B4  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4623   0024B8  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4624   0024BC  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4625   0024C0  0E18               	movlw	24
  4626   0024C2  EF68  F012         	goto	u3210
  4627   0024C6                     u3215:
  4628   0024C6  90D8               	bcf	status,0,c
  4629   0024C8  3223               	rrcf	(??_floorf+5)^0,f,c
  4630   0024CA  3222               	rrcf	(??_floorf+4)^0,f,c
  4631   0024CC  3221               	rrcf	(??_floorf+3)^0,f,c
  4632   0024CE  3220               	rrcf	(??_floorf+2)^0,f,c
  4633   0024D0                     u3210:
  4634   0024D0  2EE8               	decfsz	wreg,f,c
  4635   0024D2  EF63  F012         	goto	u3215
  4636   0024D6  5020               	movf	(??_floorf+2)^0,w,c
  4637   0024D8  241E               	addwf	??_floorf^0,w,c
  4638   0024DA  6E28               	movwf	floorf@e^0,c
  4639   0024DC  0E00               	movlw	0
  4640   0024DE  201F               	addwfc	(??_floorf+1)^0,w,c
  4641   0024E0  6E29               	movwf	(floorf@e+1)^0,c
  4642   0024E2  BE29               	btfsc	(floorf@e+1)^0,7,c
  4643   0024E4  EF7D  F012         	goto	u3221
  4644   0024E8  5029               	movf	(floorf@e+1)^0,w,c
  4645   0024EA  E109               	bnz	u3220
  4646   0024EC  0E17               	movlw	23
  4647   0024EE  5C28               	subwf	floorf@e^0,w,c
  4648   0024F0  A0D8               	btfss	status,0,c
  4649   0024F2  EF7D  F012         	goto	u3221
  4650   0024F6  EF7F  F012         	goto	u3220
  4651   0024FA                     u3221:
  4652   0024FA  EF89  F012         	goto	l3331
  4653   0024FE                     u3220:
  4654   0024FE                     l3329:
  4655   0024FE  C01A  F01A         	movff	floorf@x,?_floorf
  4656   002502  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4657   002506  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4658   00250A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4659   00250E  EF4C  F013         	goto	l1002
  4660   002512                     l3331:
  4661   002512  BE29               	btfsc	(floorf@e+1)^0,7,c
  4662   002514  EF8E  F012         	goto	u3231
  4663   002518  EF90  F012         	goto	u3230
  4664   00251C                     u3231:
  4665   00251C  EF00  F013         	goto	l3341
  4666   002520                     u3230:
  4667   002520  C028  F01E         	movff	floorf@e,??_floorf
  4668   002524  0EFF               	movlw	255
  4669   002526  6E1F               	movwf	(??_floorf+1)^0,c
  4670   002528  0EFF               	movlw	255
  4671   00252A  6E20               	movwf	(??_floorf+2)^0,c
  4672   00252C  0E7F               	movlw	127
  4673   00252E  6E21               	movwf	(??_floorf+3)^0,c
  4674   002530  0E00               	movlw	0
  4675   002532  6E22               	movwf	(??_floorf+4)^0,c
  4676   002534                     u3245:
  4677   002534  661E               	tstfsz	??_floorf^0,c
  4678   002536  EF9F  F012         	goto	u3246
  4679   00253A  EFA7  F012         	goto	u3247
  4680   00253E                     u3246:
  4681   00253E  3422               	rlcf	(??_floorf+4)^0,w,c
  4682   002540  3222               	rrcf	(??_floorf+4)^0,f,c
  4683   002542  3221               	rrcf	(??_floorf+3)^0,f,c
  4684   002544  3220               	rrcf	(??_floorf+2)^0,f,c
  4685   002546  321F               	rrcf	(??_floorf+1)^0,f,c
  4686   002548  2E1E               	decfsz	??_floorf^0,f,c
  4687   00254A  EF9A  F012         	goto	u3245
  4688   00254E                     u3247:
  4689   00254E  C01F  F024         	movff	??_floorf+1,floorf@m
  4690   002552  C020  F025         	movff	??_floorf+2,floorf@m+1
  4691   002556  C021  F026         	movff	??_floorf+3,floorf@m+2
  4692   00255A  C022  F027         	movff	??_floorf+4,floorf@m+3
  4693   00255E  5024               	movf	floorf@m^0,w,c
  4694   002560  142A               	andwf	floorf@u^0,w,c
  4695   002562  6E1E               	movwf	??_floorf^0,c
  4696   002564  5025               	movf	(floorf@m+1)^0,w,c
  4697   002566  142B               	andwf	(floorf@u+1)^0,w,c
  4698   002568  6E1F               	movwf	(??_floorf+1)^0,c
  4699   00256A  5026               	movf	(floorf@m+2)^0,w,c
  4700   00256C  142C               	andwf	(floorf@u+2)^0,w,c
  4701   00256E  6E20               	movwf	(??_floorf+2)^0,c
  4702   002570  5027               	movf	(floorf@m+3)^0,w,c
  4703   002572  142D               	andwf	(floorf@u+3)^0,w,c
  4704   002574  6E21               	movwf	(??_floorf+3)^0,c
  4705   002576  501E               	movf	??_floorf^0,w,c
  4706   002578  101F               	iorwf	(??_floorf+1)^0,w,c
  4707   00257A  1020               	iorwf	(??_floorf+2)^0,w,c
  4708   00257C  1021               	iorwf	(??_floorf+3)^0,w,c
  4709   00257E  A4D8               	btfss	status,2,c
  4710   002580  EFC4  F012         	goto	u3251
  4711   002584  EFC6  F012         	goto	u3250
  4712   002588                     u3251:
  4713   002588  EFC8  F012         	goto	l3337
  4714   00258C                     u3250:
  4715   00258C  EF7F  F012         	goto	l3329
  4716   002590                     l3337:
  4717   002590  C02A  F01E         	movff	floorf@u,??_floorf
  4718   002594  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4719   002598  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4720   00259C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4721   0025A0  0E20               	movlw	32
  4722   0025A2  EFD8  F012         	goto	u3260
  4723   0025A6                     u3265:
  4724   0025A6  90D8               	bcf	status,0,c
  4725   0025A8  3221               	rrcf	(??_floorf+3)^0,f,c
  4726   0025AA  3220               	rrcf	(??_floorf+2)^0,f,c
  4727   0025AC  321F               	rrcf	(??_floorf+1)^0,f,c
  4728   0025AE  321E               	rrcf	??_floorf^0,f,c
  4729   0025B0                     u3260:
  4730   0025B0  2EE8               	decfsz	wreg,f,c
  4731   0025B2  EFD3  F012         	goto	u3265
  4732   0025B6  501E               	movf	??_floorf^0,w,c
  4733   0025B8  101F               	iorwf	(??_floorf+1)^0,w,c
  4734   0025BA  1020               	iorwf	(??_floorf+2)^0,w,c
  4735   0025BC  1021               	iorwf	(??_floorf+3)^0,w,c
  4736   0025BE  B4D8               	btfsc	status,2,c
  4737   0025C0  EFE4  F012         	goto	u3271
  4738   0025C4  EFE6  F012         	goto	u3270
  4739   0025C8                     u3271:
  4740   0025C8  EFEE  F012         	goto	l1005
  4741   0025CC                     u3270:
  4742   0025CC  5024               	movf	floorf@m^0,w,c
  4743   0025CE  262A               	addwf	floorf@u^0,f,c
  4744   0025D0  5025               	movf	(floorf@m+1)^0,w,c
  4745   0025D2  222B               	addwfc	(floorf@u+1)^0,f,c
  4746   0025D4  5026               	movf	(floorf@m+2)^0,w,c
  4747   0025D6  222C               	addwfc	(floorf@u+2)^0,f,c
  4748   0025D8  5027               	movf	(floorf@m+3)^0,w,c
  4749   0025DA  222D               	addwfc	(floorf@u+3)^0,f,c
  4750   0025DC                     l1005:
  4751   0025DC  1C24               	comf	floorf@m^0,w,c
  4752   0025DE  6E1E               	movwf	??_floorf^0,c
  4753   0025E0  1C25               	comf	(floorf@m+1)^0,w,c
  4754   0025E2  6E1F               	movwf	(??_floorf+1)^0,c
  4755   0025E4  1C26               	comf	(floorf@m+2)^0,w,c
  4756   0025E6  6E20               	movwf	(??_floorf+2)^0,c
  4757   0025E8  1C27               	comf	(floorf@m+3)^0,w,c
  4758   0025EA  6E21               	movwf	(??_floorf+3)^0,c
  4759   0025EC  501E               	movf	??_floorf^0,w,c
  4760   0025EE  162A               	andwf	floorf@u^0,f,c
  4761   0025F0  501F               	movf	(??_floorf+1)^0,w,c
  4762   0025F2  162B               	andwf	(floorf@u+1)^0,f,c
  4763   0025F4  5020               	movf	(??_floorf+2)^0,w,c
  4764   0025F6  162C               	andwf	(floorf@u+2)^0,f,c
  4765   0025F8  5021               	movf	(??_floorf+3)^0,w,c
  4766   0025FA  162D               	andwf	(floorf@u+3)^0,f,c
  4767   0025FC  EF44  F013         	goto	l3349
  4768   002600                     l3341:
  4769   002600  C02A  F01E         	movff	floorf@u,??_floorf
  4770   002604  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4771   002608  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4772   00260C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4773   002610  0E20               	movlw	32
  4774   002612  EF10  F013         	goto	u3280
  4775   002616                     u3285:
  4776   002616  90D8               	bcf	status,0,c
  4777   002618  3221               	rrcf	(??_floorf+3)^0,f,c
  4778   00261A  3220               	rrcf	(??_floorf+2)^0,f,c
  4779   00261C  321F               	rrcf	(??_floorf+1)^0,f,c
  4780   00261E  321E               	rrcf	??_floorf^0,f,c
  4781   002620                     u3280:
  4782   002620  2EE8               	decfsz	wreg,f,c
  4783   002622  EF0B  F013         	goto	u3285
  4784   002626  501E               	movf	??_floorf^0,w,c
  4785   002628  101F               	iorwf	(??_floorf+1)^0,w,c
  4786   00262A  1020               	iorwf	(??_floorf+2)^0,w,c
  4787   00262C  1021               	iorwf	(??_floorf+3)^0,w,c
  4788   00262E  A4D8               	btfss	status,2,c
  4789   002630  EF1C  F013         	goto	u3291
  4790   002634  EF1E  F013         	goto	u3290
  4791   002638                     u3291:
  4792   002638  EF28  F013         	goto	l3345
  4793   00263C                     u3290:
  4794   00263C  0E00               	movlw	0
  4795   00263E  6E2A               	movwf	floorf@u^0,c
  4796   002640  0E00               	movlw	0
  4797   002642  6E2B               	movwf	(floorf@u+1)^0,c
  4798   002644  0E00               	movlw	0
  4799   002646  6E2C               	movwf	(floorf@u+2)^0,c
  4800   002648  0E00               	movlw	0
  4801   00264A  6E2D               	movwf	(floorf@u+3)^0,c
  4802   00264C  EF44  F013         	goto	l3349
  4803   002650                     l3345:
  4804   002650  90D8               	bcf	status,0,c
  4805   002652  342A               	rlcf	floorf@u^0,w,c
  4806   002654  6E1E               	movwf	??_floorf^0,c
  4807   002656  342B               	rlcf	(floorf@u+1)^0,w,c
  4808   002658  6E1F               	movwf	(??_floorf+1)^0,c
  4809   00265A  342C               	rlcf	(floorf@u+2)^0,w,c
  4810   00265C  6E20               	movwf	(??_floorf+2)^0,c
  4811   00265E  342D               	rlcf	(floorf@u+3)^0,w,c
  4812   002660  6E21               	movwf	(??_floorf+3)^0,c
  4813   002662  501E               	movf	??_floorf^0,w,c
  4814   002664  101F               	iorwf	(??_floorf+1)^0,w,c
  4815   002666  1020               	iorwf	(??_floorf+2)^0,w,c
  4816   002668  1021               	iorwf	(??_floorf+3)^0,w,c
  4817   00266A  B4D8               	btfsc	status,2,c
  4818   00266C  EF3A  F013         	goto	u3301
  4819   002670  EF3C  F013         	goto	u3300
  4820   002674                     u3301:
  4821   002674  EF44  F013         	goto	l3349
  4822   002678                     u3300:
  4823   002678  0E00               	movlw	0
  4824   00267A  6E2A               	movwf	floorf@u^0,c
  4825   00267C  0E00               	movlw	0
  4826   00267E  6E2B               	movwf	(floorf@u+1)^0,c
  4827   002680  0E80               	movlw	128
  4828   002682  6E2C               	movwf	(floorf@u+2)^0,c
  4829   002684  0EBF               	movlw	191
  4830   002686  6E2D               	movwf	(floorf@u+3)^0,c
  4831   002688                     l3349:
  4832   002688  C02A  F01A         	movff	floorf@u,?_floorf
  4833   00268C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4834   002690  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4835   002694  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4836   002698                     l1002:
  4837   002698  0012               	return		;funcret
  4838   00269A                     __end_of_floorf:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function ___fpclassifyf *****************
  4842 ;; Defined at:
  4843 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  x               4    0[COMRAM] float 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  u               4   10[COMRAM] struct .
  4848 ;;  e               2    8[COMRAM] int 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  2    0[COMRAM] int 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4858 ;;      Params:         4       0       0       0       0       0       0       0       0
  4859 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4860 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4861 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4862 ;;Total ram usage:       14 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_efgtoa
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text18
  4872   002BC6                     __ptext18:
  4873                           	callstack 0
  4874   002BC6                     ___fpclassifyf:
  4875                           	callstack 26
  4876   002BC6  C054  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4877   002BCA  C055  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4878   002BCE  C056  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4879   002BD2  C057  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4880   002BD6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4881   002BDA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4882   002BDE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4883   002BE2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4884   002BE6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4885   002BEA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4886   002BEE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4887   002BF2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4888   002BF6  0E18               	movlw	24
  4889   002BF8  EF03  F016         	goto	u3120
  4890   002BFC                     u3125:
  4891   002BFC  90D8               	bcf	status,0,c
  4892   002BFE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4893   002C00  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4894   002C02  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4895   002C04  3205               	rrcf	??___fpclassifyf^0,f,c
  4896   002C06                     u3120:
  4897   002C06  2EE8               	decfsz	wreg,f,c
  4898   002C08  EFFE  F015         	goto	u3125
  4899   002C0C  5005               	movf	??___fpclassifyf^0,w,c
  4900   002C0E  6E09               	movwf	___fpclassifyf@e^0,c
  4901   002C10  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4902   002C12  5009               	movf	___fpclassifyf@e^0,w,c
  4903   002C14  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4904   002C16  A4D8               	btfss	status,2,c
  4905   002C18  EF10  F016         	goto	u3131
  4906   002C1C  EF12  F016         	goto	u3130
  4907   002C20                     u3131:
  4908   002C20  EF32  F016         	goto	l3303
  4909   002C24                     u3130:
  4910   002C24  90D8               	bcf	status,0,c
  4911   002C26  340B               	rlcf	___fpclassifyf@u^0,w,c
  4912   002C28  6E05               	movwf	??___fpclassifyf^0,c
  4913   002C2A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4914   002C2C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4915   002C2E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4916   002C30  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4917   002C32  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4918   002C34  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4919   002C36  5005               	movf	??___fpclassifyf^0,w,c
  4920   002C38  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4921   002C3A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4922   002C3C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4923   002C3E  A4D8               	btfss	status,2,c
  4924   002C40  EF24  F016         	goto	u3141
  4925   002C44  EF26  F016         	goto	u3140
  4926   002C48                     u3141:
  4927   002C48  EF2C  F016         	goto	l3299
  4928   002C4C                     u3140:
  4929   002C4C  0E00               	movlw	0
  4930   002C4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4931   002C50  0E02               	movlw	2
  4932   002C52  6E01               	movwf	?___fpclassifyf^0,c
  4933   002C54  EF61  F016         	goto	l995
  4934   002C58                     l3299:
  4935   002C58  0E00               	movlw	0
  4936   002C5A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4937   002C5C  0E03               	movlw	3
  4938   002C5E  6E01               	movwf	?___fpclassifyf^0,c
  4939   002C60  EF61  F016         	goto	l995
  4940   002C64                     l3303:
  4941   002C64  2809               	incf	___fpclassifyf@e^0,w,c
  4942   002C66  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4943   002C68  A4D8               	btfss	status,2,c
  4944   002C6A  EF39  F016         	goto	u3151
  4945   002C6E  EF3B  F016         	goto	u3150
  4946   002C72                     u3151:
  4947   002C72  EF5D  F016         	goto	l3309
  4948   002C76                     u3150:
  4949   002C76  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4950   002C7A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4951   002C7E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4952   002C82  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4953   002C86  0E09               	movlw	9
  4954   002C88                     u3165:
  4955   002C88  90D8               	bcf	status,0,c
  4956   002C8A  3605               	rlcf	??___fpclassifyf^0,f,c
  4957   002C8C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4958   002C8E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4959   002C90  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4960   002C92  2EE8               	decfsz	wreg,f,c
  4961   002C94  EF44  F016         	goto	u3165
  4962   002C98  5005               	movf	??___fpclassifyf^0,w,c
  4963   002C9A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4964   002C9C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4965   002C9E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4966   002CA0  B4D8               	btfsc	status,2,c
  4967   002CA2  EF55  F016         	goto	u3171
  4968   002CA6  EF58  F016         	goto	u3170
  4969   002CAA                     u3171:
  4970   002CAA  0E01               	movlw	1
  4971   002CAC  EF59  F016         	goto	u3180
  4972   002CB0                     u3170:
  4973   002CB0  0E00               	movlw	0
  4974   002CB2                     u3180:
  4975   002CB2  6E01               	movwf	?___fpclassifyf^0,c
  4976   002CB4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4977   002CB6  EF61  F016         	goto	l995
  4978   002CBA                     l3309:
  4979   002CBA  0E00               	movlw	0
  4980   002CBC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4981   002CBE  0E04               	movlw	4
  4982   002CC0  6E01               	movwf	?___fpclassifyf^0,c
  4983   002CC2                     l995:
  4984   002CC2  0012               	return		;funcret
  4985   002CC4                     __end_of___fpclassifyf:
  4986                           	callstack 0
  4987                           
  4988 ;; *************** function ___fltol *****************
  4989 ;; Defined at:
  4990 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  f1              4    0[COMRAM] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  exp1            1    9[COMRAM] unsigned char 
  4995 ;;  sign1           1    8[COMRAM] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  4    0[COMRAM] long 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5005 ;;      Params:         4       0       0       0       0       0       0       0       0
  5006 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5007 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5008 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5009 ;;Total ram usage:       10 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_efgtoa
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text19
  5019   0029BC                     __ptext19:
  5020                           	callstack 0
  5021   0029BC                     ___fltol:
  5022                           	callstack 26
  5023   0029BC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5024   0029BE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5025   0029C0  6E0A               	movwf	___fltol@exp1^0,c
  5026   0029C2  500A               	movf	___fltol@exp1^0,w,c
  5027   0029C4  A4D8               	btfss	status,2,c
  5028   0029C6  EFE7  F014         	goto	u2971
  5029   0029CA  EFE9  F014         	goto	u2970
  5030   0029CE                     u2971:
  5031   0029CE  EFF3  F014         	goto	l3203
  5032   0029D2                     u2970:
  5033   0029D2                     l3199:
  5034   0029D2  0E00               	movlw	0
  5035   0029D4  6E01               	movwf	?___fltol^0,c
  5036   0029D6  0E00               	movlw	0
  5037   0029D8  6E02               	movwf	(?___fltol+1)^0,c
  5038   0029DA  0E00               	movlw	0
  5039   0029DC  6E03               	movwf	(?___fltol+2)^0,c
  5040   0029DE  0E00               	movlw	0
  5041   0029E0  6E04               	movwf	(?___fltol+3)^0,c
  5042   0029E2  EF60  F015         	goto	l452
  5043   0029E6                     l3203:
  5044   0029E6  C001  F005         	movff	___fltol@f1,??___fltol
  5045   0029EA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5046   0029EE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5047   0029F2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5048   0029F6  0E20               	movlw	32
  5049   0029F8  EF03  F015         	goto	u2980
  5050   0029FC                     u2985:
  5051   0029FC  90D8               	bcf	status,0,c
  5052   0029FE  3208               	rrcf	(??___fltol+3)^0,f,c
  5053   002A00  3207               	rrcf	(??___fltol+2)^0,f,c
  5054   002A02  3206               	rrcf	(??___fltol+1)^0,f,c
  5055   002A04  3205               	rrcf	??___fltol^0,f,c
  5056   002A06                     u2980:
  5057   002A06  2EE8               	decfsz	wreg,f,c
  5058   002A08  EFFE  F014         	goto	u2985
  5059   002A0C  5005               	movf	??___fltol^0,w,c
  5060   002A0E  6E09               	movwf	___fltol@sign1^0,c
  5061   002A10  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5062   002A12  0EFF               	movlw	255
  5063   002A14  1601               	andwf	___fltol@f1^0,f,c
  5064   002A16  0EFF               	movlw	255
  5065   002A18  1602               	andwf	(___fltol@f1+1)^0,f,c
  5066   002A1A  0EFF               	movlw	255
  5067   002A1C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5068   002A1E  0E00               	movlw	0
  5069   002A20  1604               	andwf	(___fltol@f1+3)^0,f,c
  5070   002A22  0E96               	movlw	150
  5071   002A24  5E0A               	subwf	___fltol@exp1^0,f,c
  5072   002A26  BE0A               	btfsc	___fltol@exp1^0,7,c
  5073   002A28  EF1A  F015         	goto	u2990
  5074   002A2C  EF18  F015         	goto	u2991
  5075   002A30                     u2991:
  5076   002A30  EF30  F015         	goto	l3223
  5077   002A34                     u2990:
  5078   002A34  500A               	movf	___fltol@exp1^0,w,c
  5079   002A36  0A80               	xorlw	128
  5080   002A38  0F97               	addlw	151
  5081   002A3A  B0D8               	btfsc	status,0,c
  5082   002A3C  EF22  F015         	goto	u3001
  5083   002A40  EF24  F015         	goto	u3000
  5084   002A44                     u3001:
  5085   002A44  EF26  F015         	goto	l3219
  5086   002A48                     u3000:
  5087   002A48  EFE9  F014         	goto	l3199
  5088   002A4C                     l3219:
  5089   002A4C  90D8               	bcf	status,0,c
  5090   002A4E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5091   002A50  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5092   002A52  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5093   002A54  3201               	rrcf	___fltol@f1^0,f,c
  5094   002A56  3E0A               	incfsz	___fltol@exp1^0,f,c
  5095   002A58  EF26  F015         	goto	l3219
  5096   002A5C  EF48  F015         	goto	l3233
  5097   002A60                     l3223:
  5098   002A60  0E1F               	movlw	31
  5099   002A62  640A               	cpfsgt	___fltol@exp1^0,c
  5100   002A64  EF36  F015         	goto	u3011
  5101   002A68  EF38  F015         	goto	u3010
  5102   002A6C                     u3011:
  5103   002A6C  EF40  F015         	goto	l3231
  5104   002A70                     u3010:
  5105   002A70  EFE9  F014         	goto	l3199
  5106   002A74                     l3229:
  5107   002A74  90D8               	bcf	status,0,c
  5108   002A76  3601               	rlcf	___fltol@f1^0,f,c
  5109   002A78  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5110   002A7A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5111   002A7C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5112   002A7E  060A               	decf	___fltol@exp1^0,f,c
  5113   002A80                     l3231:
  5114   002A80  500A               	movf	___fltol@exp1^0,w,c
  5115   002A82  A4D8               	btfss	status,2,c
  5116   002A84  EF46  F015         	goto	u3021
  5117   002A88  EF48  F015         	goto	u3020
  5118   002A8C                     u3021:
  5119   002A8C  EF3A  F015         	goto	l3229
  5120   002A90                     u3020:
  5121   002A90                     l3233:
  5122   002A90  5009               	movf	___fltol@sign1^0,w,c
  5123   002A92  B4D8               	btfsc	status,2,c
  5124   002A94  EF4E  F015         	goto	u3031
  5125   002A98  EF50  F015         	goto	u3030
  5126   002A9C                     u3031:
  5127   002A9C  EF58  F015         	goto	l3237
  5128   002AA0                     u3030:
  5129   002AA0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5130   002AA2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5131   002AA4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5132   002AA6  6C01               	negf	___fltol@f1^0,c
  5133   002AA8  0E00               	movlw	0
  5134   002AAA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5135   002AAC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5136   002AAE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5137   002AB0                     l3237:
  5138   002AB0  C001  F001         	movff	___fltol@f1,?___fltol
  5139   002AB4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5140   002AB8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5141   002ABC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5142   002AC0                     l452:
  5143   002AC0  0012               	return		;funcret
  5144   002AC2                     __end_of___fltol:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function ___flsub *****************
  5148 ;; Defined at:
  5149 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  b               4   25[COMRAM] long 
  5152 ;;  a               4   29[COMRAM] long 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  4   25[COMRAM] long 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:         8       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 1
  5171 ;; This function calls:
  5172 ;;		___fladd
  5173 ;; This function is called by:
  5174 ;;		_efgtoa
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text20
  5179   003340                     __ptext20:
  5180                           	callstack 0
  5181   003340                     ___flsub:
  5182                           	callstack 25
  5183   003340  0E00               	movlw	0
  5184   003342  1A1E               	xorwf	___flsub@a^0,f,c
  5185   003344  0E00               	movlw	0
  5186   003346  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5187   003348  0E00               	movlw	0
  5188   00334A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5189   00334C  0E80               	movlw	128
  5190   00334E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5191   003350  C01A  F001         	movff	___flsub@b,___fladd@b
  5192   003354  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5193   003358  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5194   00335C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5195   003360  C01E  F005         	movff	___flsub@a,___fladd@a
  5196   003364  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5197   003368  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5198   00336C  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5199   003370  EC59  F009         	call	___fladd	;wreg free
  5200   003374  C001  F01A         	movff	?___fladd,?___flsub
  5201   003378  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5202   00337C  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5203   003380  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5204   003384  0012               	return		;funcret
  5205   003386                     __end_of___flsub:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function ___fladd *****************
  5209 ;; Defined at:
  5210 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  b               4    0[COMRAM] long 
  5213 ;;  a               4    4[COMRAM] long 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  grs             1   15[COMRAM] unsigned char 
  5216 ;;  bexp            1   14[COMRAM] unsigned char 
  5217 ;;  aexp            1   13[COMRAM] unsigned char 
  5218 ;;  signs           1   12[COMRAM] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  4    0[COMRAM] unsigned char 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5228 ;;      Params:         8       0       0       0       0       0       0       0       0
  5229 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5230 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5231 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5232 ;;Total ram usage:       16 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		___flsub
  5238 ;;		_efgtoa
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text21
  5243   0012B2                     __ptext21:
  5244                           	callstack 0
  5245   0012B2                     ___fladd:
  5246                           	callstack 25
  5247   0012B2  5004               	movf	(___fladd@b+3)^0,w,c
  5248   0012B4  0B80               	andlw	128
  5249   0012B6  6E0D               	movwf	___fladd@signs^0,c
  5250   0012B8  5004               	movf	(___fladd@b+3)^0,w,c
  5251   0012BA  2404               	addwf	(___fladd@b+3)^0,w,c
  5252   0012BC  6E0F               	movwf	___fladd@bexp^0,c
  5253   0012BE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5254   0012C0  EF64  F009         	goto	u2061
  5255   0012C4  EF66  F009         	goto	u2060
  5256   0012C8                     u2061:
  5257   0012C8  EF67  F009         	goto	l2667
  5258   0012CC                     u2060:
  5259   0012CC  800F               	bsf	___fladd@bexp^0,0,c
  5260   0012CE                     l2667:
  5261   0012CE  500F               	movf	___fladd@bexp^0,w,c
  5262   0012D0  B4D8               	btfsc	status,2,c
  5263   0012D2  EF6D  F009         	goto	u2071
  5264   0012D6  EF6F  F009         	goto	u2070
  5265   0012DA                     u2071:
  5266   0012DA  EF84  F009         	goto	l2677
  5267   0012DE                     u2070:
  5268   0012DE  280F               	incf	___fladd@bexp^0,w,c
  5269   0012E0  A4D8               	btfss	status,2,c
  5270   0012E2  EF75  F009         	goto	u2081
  5271   0012E6  EF77  F009         	goto	u2080
  5272   0012EA                     u2081:
  5273   0012EA  EF7F  F009         	goto	l2673
  5274   0012EE                     u2080:
  5275   0012EE  0E00               	movlw	0
  5276   0012F0  6E01               	movwf	___fladd@b^0,c
  5277   0012F2  0E00               	movlw	0
  5278   0012F4  6E02               	movwf	(___fladd@b+1)^0,c
  5279   0012F6  0E00               	movlw	0
  5280   0012F8  6E03               	movwf	(___fladd@b+2)^0,c
  5281   0012FA  0E00               	movlw	0
  5282   0012FC  6E04               	movwf	(___fladd@b+3)^0,c
  5283   0012FE                     l2673:
  5284   0012FE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5285   001300  0E00               	movlw	0
  5286   001302  6E04               	movwf	(___fladd@b+3)^0,c
  5287   001304  EF8C  F009         	goto	l2679
  5288   001308                     l2677:
  5289   001308  0E00               	movlw	0
  5290   00130A  6E01               	movwf	___fladd@b^0,c
  5291   00130C  0E00               	movlw	0
  5292   00130E  6E02               	movwf	(___fladd@b+1)^0,c
  5293   001310  0E00               	movlw	0
  5294   001312  6E03               	movwf	(___fladd@b+2)^0,c
  5295   001314  0E00               	movlw	0
  5296   001316  6E04               	movwf	(___fladd@b+3)^0,c
  5297   001318                     l2679:
  5298   001318  5008               	movf	(___fladd@a+3)^0,w,c
  5299   00131A  0B80               	andlw	128
  5300   00131C  6E0E               	movwf	___fladd@aexp^0,c
  5301   00131E  500D               	movf	___fladd@signs^0,w,c
  5302   001320  180E               	xorwf	___fladd@aexp^0,w,c
  5303   001322  B4D8               	btfsc	status,2,c
  5304   001324  EF96  F009         	goto	u2091
  5305   001328  EF98  F009         	goto	u2090
  5306   00132C                     u2091:
  5307   00132C  EF99  F009         	goto	l2685
  5308   001330                     u2090:
  5309   001330  8C0D               	bsf	___fladd@signs^0,6,c
  5310   001332                     l2685:
  5311   001332  5008               	movf	(___fladd@a+3)^0,w,c
  5312   001334  2408               	addwf	(___fladd@a+3)^0,w,c
  5313   001336  6E0E               	movwf	___fladd@aexp^0,c
  5314   001338  AE07               	btfss	(___fladd@a+2)^0,7,c
  5315   00133A  EFA1  F009         	goto	u2101
  5316   00133E  EFA3  F009         	goto	u2100
  5317   001342                     u2101:
  5318   001342  EFA4  F009         	goto	l2691
  5319   001346                     u2100:
  5320   001346  800E               	bsf	___fladd@aexp^0,0,c
  5321   001348                     l2691:
  5322   001348  500E               	movf	___fladd@aexp^0,w,c
  5323   00134A  B4D8               	btfsc	status,2,c
  5324   00134C  EFAA  F009         	goto	u2111
  5325   001350  EFAC  F009         	goto	u2110
  5326   001354                     u2111:
  5327   001354  EFC1  F009         	goto	l2701
  5328   001358                     u2110:
  5329   001358  280E               	incf	___fladd@aexp^0,w,c
  5330   00135A  A4D8               	btfss	status,2,c
  5331   00135C  EFB2  F009         	goto	u2121
  5332   001360  EFB4  F009         	goto	u2120
  5333   001364                     u2121:
  5334   001364  EFBC  F009         	goto	l2697
  5335   001368                     u2120:
  5336   001368  0E00               	movlw	0
  5337   00136A  6E05               	movwf	___fladd@a^0,c
  5338   00136C  0E00               	movlw	0
  5339   00136E  6E06               	movwf	(___fladd@a+1)^0,c
  5340   001370  0E00               	movlw	0
  5341   001372  6E07               	movwf	(___fladd@a+2)^0,c
  5342   001374  0E00               	movlw	0
  5343   001376  6E08               	movwf	(___fladd@a+3)^0,c
  5344   001378                     l2697:
  5345   001378  8E07               	bsf	(___fladd@a+2)^0,7,c
  5346   00137A  0E00               	movlw	0
  5347   00137C  6E08               	movwf	(___fladd@a+3)^0,c
  5348   00137E  EFC9  F009         	goto	l2703
  5349   001382                     l2701:
  5350   001382  0E00               	movlw	0
  5351   001384  6E05               	movwf	___fladd@a^0,c
  5352   001386  0E00               	movlw	0
  5353   001388  6E06               	movwf	(___fladd@a+1)^0,c
  5354   00138A  0E00               	movlw	0
  5355   00138C  6E07               	movwf	(___fladd@a+2)^0,c
  5356   00138E  0E00               	movlw	0
  5357   001390  6E08               	movwf	(___fladd@a+3)^0,c
  5358   001392                     l2703:
  5359   001392  500F               	movf	___fladd@bexp^0,w,c
  5360   001394  5C0E               	subwf	___fladd@aexp^0,w,c
  5361   001396  B0D8               	btfsc	status,0,c
  5362   001398  EFD0  F009         	goto	u2131
  5363   00139C  EFD2  F009         	goto	u2130
  5364   0013A0                     u2131:
  5365   0013A0  EFF9  F009         	goto	l2739
  5366   0013A4                     u2130:
  5367   0013A4  AC0D               	btfss	___fladd@signs^0,6,c
  5368   0013A6  EFD7  F009         	goto	u2141
  5369   0013AA  EFD9  F009         	goto	u2140
  5370   0013AE                     u2141:
  5371   0013AE  EFDB  F009         	goto	l2709
  5372   0013B2                     u2140:
  5373   0013B2  0E80               	movlw	128
  5374   0013B4  1A0D               	xorwf	___fladd@signs^0,f,c
  5375   0013B6                     l2709:
  5376   0013B6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5377   0013BA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5378   0013BE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5379   0013C2  C001  F010         	movff	___fladd@b,___fladd@grs
  5380   0013C6  C005  F001         	movff	___fladd@a,___fladd@b
  5381   0013CA  C010  F005         	movff	___fladd@grs,___fladd@a
  5382   0013CE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5383   0013D2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5384   0013D6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5385   0013DA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5386   0013DE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5387   0013E2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5388   0013E6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5389   0013EA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5390   0013EE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5391   0013F2                     l2739:
  5392   0013F2  0E00               	movlw	0
  5393   0013F4  6E10               	movwf	___fladd@grs^0,c
  5394   0013F6  500F               	movf	___fladd@bexp^0,w,c
  5395   0013F8  C00E  F009         	movff	___fladd@aexp,??___fladd
  5396   0013FC  6A0A               	clrf	(??___fladd+1)^0,c
  5397   0013FE  5E09               	subwf	??___fladd^0,f,c
  5398   001400  0E00               	movlw	0
  5399   001402  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5400   001404  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5401   001406  EF0E  F00A         	goto	u2151
  5402   00140A  500A               	movf	(??___fladd+1)^0,w,c
  5403   00140C  E109               	bnz	u2150
  5404   00140E  0E1A               	movlw	26
  5405   001410  5C09               	subwf	??___fladd^0,w,c
  5406   001412  A0D8               	btfss	status,0,c
  5407   001414  EF0E  F00A         	goto	u2151
  5408   001418  EF10  F00A         	goto	u2150
  5409   00141C                     u2151:
  5410   00141C  EF47  F00A         	goto	l684
  5411   001420                     u2150:
  5412   001420  5001               	movf	___fladd@b^0,w,c
  5413   001422  1002               	iorwf	(___fladd@b+1)^0,w,c
  5414   001424  1003               	iorwf	(___fladd@b+2)^0,w,c
  5415   001426  1004               	iorwf	(___fladd@b+3)^0,w,c
  5416   001428  A4D8               	btfss	status,2,c
  5417   00142A  EF19  F00A         	goto	u2161
  5418   00142E  EF1C  F00A         	goto	u2160
  5419   001432                     u2161:
  5420   001432  0E01               	movlw	1
  5421   001434  EF1D  F00A         	goto	u2170
  5422   001438                     u2160:
  5423   001438  0E00               	movlw	0
  5424   00143A                     u2170:
  5425   00143A  6E10               	movwf	___fladd@grs^0,c
  5426   00143C  0E00               	movlw	0
  5427   00143E  6E01               	movwf	___fladd@b^0,c
  5428   001440  0E00               	movlw	0
  5429   001442  6E02               	movwf	(___fladd@b+1)^0,c
  5430   001444  0E00               	movlw	0
  5431   001446  6E03               	movwf	(___fladd@b+2)^0,c
  5432   001448  0E00               	movlw	0
  5433   00144A  6E04               	movwf	(___fladd@b+3)^0,c
  5434   00144C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5435   001450  EF50  F00A         	goto	l683
  5436   001454                     l685:
  5437   001454  A010               	btfss	___fladd@grs^0,0,c
  5438   001456  EF2F  F00A         	goto	u2181
  5439   00145A  EF31  F00A         	goto	u2180
  5440   00145E                     u2181:
  5441   00145E  EF37  F00A         	goto	l2751
  5442   001462                     u2180:
  5443   001462  90D8               	bcf	status,0,c
  5444   001464  3010               	rrcf	___fladd@grs^0,w,c
  5445   001466  0901               	iorlw	1
  5446   001468  6E10               	movwf	___fladd@grs^0,c
  5447   00146A  EF39  F00A         	goto	l2753
  5448   00146E                     l2751:
  5449   00146E  90D8               	bcf	status,0,c
  5450   001470  3210               	rrcf	___fladd@grs^0,f,c
  5451   001472                     l2753:
  5452   001472  A001               	btfss	___fladd@b^0,0,c
  5453   001474  EF3E  F00A         	goto	u2191
  5454   001478  EF40  F00A         	goto	u2190
  5455   00147C                     u2191:
  5456   00147C  EF41  F00A         	goto	l2757
  5457   001480                     u2190:
  5458   001480  8E10               	bsf	___fladd@grs^0,7,c
  5459   001482                     l2757:
  5460   001482  3404               	rlcf	(___fladd@b+3)^0,w,c
  5461   001484  3204               	rrcf	(___fladd@b+3)^0,f,c
  5462   001486  3203               	rrcf	(___fladd@b+2)^0,f,c
  5463   001488  3202               	rrcf	(___fladd@b+1)^0,f,c
  5464   00148A  3201               	rrcf	___fladd@b^0,f,c
  5465   00148C  2A0F               	incf	___fladd@bexp^0,f,c
  5466   00148E                     l684:
  5467   00148E  500E               	movf	___fladd@aexp^0,w,c
  5468   001490  5C0F               	subwf	___fladd@bexp^0,w,c
  5469   001492  A0D8               	btfss	status,0,c
  5470   001494  EF4E  F00A         	goto	u2201
  5471   001498  EF50  F00A         	goto	u2200
  5472   00149C                     u2201:
  5473   00149C  EF2A  F00A         	goto	l685
  5474   0014A0                     u2200:
  5475   0014A0                     l683:
  5476   0014A0  BC0D               	btfsc	___fladd@signs^0,6,c
  5477   0014A2  EF55  F00A         	goto	u2211
  5478   0014A6  EF57  F00A         	goto	u2210
  5479   0014AA                     u2211:
  5480   0014AA  EF97  F00A         	goto	l2785
  5481   0014AE                     u2210:
  5482   0014AE  500F               	movf	___fladd@bexp^0,w,c
  5483   0014B0  A4D8               	btfss	status,2,c
  5484   0014B2  EF5D  F00A         	goto	u2221
  5485   0014B6  EF5F  F00A         	goto	u2220
  5486   0014BA                     u2221:
  5487   0014BA  EF69  F00A         	goto	l2767
  5488   0014BE                     u2220:
  5489   0014BE  0E00               	movlw	0
  5490   0014C0  6E01               	movwf	?___fladd^0,c
  5491   0014C2  0E00               	movlw	0
  5492   0014C4  6E02               	movwf	(?___fladd+1)^0,c
  5493   0014C6  0E00               	movlw	0
  5494   0014C8  6E03               	movwf	(?___fladd+2)^0,c
  5495   0014CA  0E00               	movlw	0
  5496   0014CC  6E04               	movwf	(?___fladd+3)^0,c
  5497   0014CE  EFB8  F00B         	goto	l692
  5498   0014D2                     l2767:
  5499   0014D2  5005               	movf	___fladd@a^0,w,c
  5500   0014D4  2601               	addwf	___fladd@b^0,f,c
  5501   0014D6  5006               	movf	(___fladd@a+1)^0,w,c
  5502   0014D8  2202               	addwfc	(___fladd@b+1)^0,f,c
  5503   0014DA  5007               	movf	(___fladd@a+2)^0,w,c
  5504   0014DC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5505   0014DE  5008               	movf	(___fladd@a+3)^0,w,c
  5506   0014E0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5507   0014E2  A004               	btfss	(___fladd@b+3)^0,0,c
  5508   0014E4  EF76  F00A         	goto	u2231
  5509   0014E8  EF78  F00A         	goto	u2230
  5510   0014EC                     u2231:
  5511   0014EC  EF24  F00B         	goto	l2821
  5512   0014F0                     u2230:
  5513   0014F0  A010               	btfss	___fladd@grs^0,0,c
  5514   0014F2  EF7D  F00A         	goto	u2241
  5515   0014F6  EF7F  F00A         	goto	u2240
  5516   0014FA                     u2241:
  5517   0014FA  EF85  F00A         	goto	l2775
  5518   0014FE                     u2240:
  5519   0014FE  90D8               	bcf	status,0,c
  5520   001500  3010               	rrcf	___fladd@grs^0,w,c
  5521   001502  0901               	iorlw	1
  5522   001504  6E10               	movwf	___fladd@grs^0,c
  5523   001506  EF87  F00A         	goto	l2777
  5524   00150A                     l2775:
  5525   00150A  90D8               	bcf	status,0,c
  5526   00150C  3210               	rrcf	___fladd@grs^0,f,c
  5527   00150E                     l2777:
  5528   00150E  A001               	btfss	___fladd@b^0,0,c
  5529   001510  EF8C  F00A         	goto	u2251
  5530   001514  EF8E  F00A         	goto	u2250
  5531   001518                     u2251:
  5532   001518  EF8F  F00A         	goto	l2781
  5533   00151C                     u2250:
  5534   00151C  8E10               	bsf	___fladd@grs^0,7,c
  5535   00151E                     l2781:
  5536   00151E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5537   001520  3204               	rrcf	(___fladd@b+3)^0,f,c
  5538   001522  3203               	rrcf	(___fladd@b+2)^0,f,c
  5539   001524  3202               	rrcf	(___fladd@b+1)^0,f,c
  5540   001526  3201               	rrcf	___fladd@b^0,f,c
  5541   001528  2A0F               	incf	___fladd@bexp^0,f,c
  5542   00152A  EF24  F00B         	goto	l2821
  5543   00152E                     l2785:
  5544   00152E  5005               	movf	___fladd@a^0,w,c
  5545   001530  5C01               	subwf	___fladd@b^0,w,c
  5546   001532  5006               	movf	(___fladd@a+1)^0,w,c
  5547   001534  5802               	subwfb	(___fladd@b+1)^0,w,c
  5548   001536  5007               	movf	(___fladd@a+2)^0,w,c
  5549   001538  5803               	subwfb	(___fladd@b+2)^0,w,c
  5550   00153A  5004               	movf	(___fladd@b+3)^0,w,c
  5551   00153C  0A80               	xorlw	128
  5552   00153E  6E09               	movwf	??___fladd^0,c
  5553   001540  5008               	movf	(___fladd@a+3)^0,w,c
  5554   001542  0A80               	xorlw	128
  5555   001544  5809               	subwfb	??___fladd^0,w,c
  5556   001546  B0D8               	btfsc	status,0,c
  5557   001548  EFA8  F00A         	goto	u2261
  5558   00154C  EFAA  F00A         	goto	u2260
  5559   001550                     u2261:
  5560   001550  EFD5  F00A         	goto	l2795
  5561   001554                     u2260:
  5562   001554  5001               	movf	___fladd@b^0,w,c
  5563   001556  5C05               	subwf	___fladd@a^0,w,c
  5564   001558  6E09               	movwf	??___fladd^0,c
  5565   00155A  5002               	movf	(___fladd@b+1)^0,w,c
  5566   00155C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5567   00155E  6E0A               	movwf	(??___fladd+1)^0,c
  5568   001560  5003               	movf	(___fladd@b+2)^0,w,c
  5569   001562  5807               	subwfb	(___fladd@a+2)^0,w,c
  5570   001564  6E0B               	movwf	(??___fladd+2)^0,c
  5571   001566  5004               	movf	(___fladd@b+3)^0,w,c
  5572   001568  5808               	subwfb	(___fladd@a+3)^0,w,c
  5573   00156A  6E0C               	movwf	(??___fladd+3)^0,c
  5574   00156C  0EFF               	movlw	255
  5575   00156E  2409               	addwf	??___fladd^0,w,c
  5576   001570  6E01               	movwf	___fladd@b^0,c
  5577   001572  0EFF               	movlw	255
  5578   001574  200A               	addwfc	(??___fladd+1)^0,w,c
  5579   001576  6E02               	movwf	(___fladd@b+1)^0,c
  5580   001578  0EFF               	movlw	255
  5581   00157A  200B               	addwfc	(??___fladd+2)^0,w,c
  5582   00157C  6E03               	movwf	(___fladd@b+2)^0,c
  5583   00157E  0EFF               	movlw	255
  5584   001580  200C               	addwfc	(??___fladd+3)^0,w,c
  5585   001582  6E04               	movwf	(___fladd@b+3)^0,c
  5586   001584  0E80               	movlw	128
  5587   001586  1A0D               	xorwf	___fladd@signs^0,f,c
  5588   001588  6C10               	negf	___fladd@grs^0,c
  5589   00158A  5010               	movf	___fladd@grs^0,w,c
  5590   00158C  A4D8               	btfss	status,2,c
  5591   00158E  EFCB  F00A         	goto	u2271
  5592   001592  EFCD  F00A         	goto	u2270
  5593   001596                     u2271:
  5594   001596  EFDD  F00A         	goto	l700
  5595   00159A                     u2270:
  5596   00159A  0E01               	movlw	1
  5597   00159C  2601               	addwf	___fladd@b^0,f,c
  5598   00159E  0E00               	movlw	0
  5599   0015A0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5600   0015A2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5601   0015A4  2204               	addwfc	(___fladd@b+3)^0,f,c
  5602   0015A6  EFDD  F00A         	goto	l700
  5603   0015AA                     l2795:
  5604   0015AA  5005               	movf	___fladd@a^0,w,c
  5605   0015AC  5E01               	subwf	___fladd@b^0,f,c
  5606   0015AE  5006               	movf	(___fladd@a+1)^0,w,c
  5607   0015B0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5608   0015B2  5007               	movf	(___fladd@a+2)^0,w,c
  5609   0015B4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5610   0015B6  5008               	movf	(___fladd@a+3)^0,w,c
  5611   0015B8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5612   0015BA                     l700:
  5613   0015BA  5001               	movf	___fladd@b^0,w,c
  5614   0015BC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5615   0015BE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5616   0015C0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5617   0015C2  A4D8               	btfss	status,2,c
  5618   0015C4  EFE6  F00A         	goto	u2281
  5619   0015C8  EFE8  F00A         	goto	u2280
  5620   0015CC                     u2281:
  5621   0015CC  EF1D  F00B         	goto	l2819
  5622   0015D0                     u2280:
  5623   0015D0  5010               	movf	___fladd@grs^0,w,c
  5624   0015D2  A4D8               	btfss	status,2,c
  5625   0015D4  EFEE  F00A         	goto	u2291
  5626   0015D8  EFF0  F00A         	goto	u2290
  5627   0015DC                     u2291:
  5628   0015DC  EF1D  F00B         	goto	l2819
  5629   0015E0                     u2290:
  5630   0015E0  0E00               	movlw	0
  5631   0015E2  6E01               	movwf	?___fladd^0,c
  5632   0015E4  0E00               	movlw	0
  5633   0015E6  6E02               	movwf	(?___fladd+1)^0,c
  5634   0015E8  0E00               	movlw	0
  5635   0015EA  6E03               	movwf	(?___fladd+2)^0,c
  5636   0015EC  0E00               	movlw	0
  5637   0015EE  6E04               	movwf	(?___fladd+3)^0,c
  5638   0015F0  EFB8  F00B         	goto	l692
  5639   0015F4                     l2803:
  5640   0015F4  90D8               	bcf	status,0,c
  5641   0015F6  3601               	rlcf	___fladd@b^0,f,c
  5642   0015F8  3602               	rlcf	(___fladd@b+1)^0,f,c
  5643   0015FA  3603               	rlcf	(___fladd@b+2)^0,f,c
  5644   0015FC  3604               	rlcf	(___fladd@b+3)^0,f,c
  5645   0015FE  AE10               	btfss	___fladd@grs^0,7,c
  5646   001600  EF04  F00B         	goto	u2301
  5647   001604  EF06  F00B         	goto	u2300
  5648   001608                     u2301:
  5649   001608  EF07  F00B         	goto	l2809
  5650   00160C                     u2300:
  5651   00160C  8001               	bsf	___fladd@b^0,0,c
  5652   00160E                     l2809:
  5653   00160E  A010               	btfss	___fladd@grs^0,0,c
  5654   001610  EF0C  F00B         	goto	u2311
  5655   001614  EF0E  F00B         	goto	u2310
  5656   001618                     u2311:
  5657   001618  EF12  F00B         	goto	l2813
  5658   00161C                     u2310:
  5659   00161C  80D8               	bsf	status,0,c
  5660   00161E  3610               	rlcf	___fladd@grs^0,f,c
  5661   001620  EF14  F00B         	goto	l2815
  5662   001624                     l2813:
  5663   001624  90D8               	bcf	status,0,c
  5664   001626  3610               	rlcf	___fladd@grs^0,f,c
  5665   001628                     l2815:
  5666   001628  500F               	movf	___fladd@bexp^0,w,c
  5667   00162A  B4D8               	btfsc	status,2,c
  5668   00162C  EF1A  F00B         	goto	u2321
  5669   001630  EF1C  F00B         	goto	u2320
  5670   001634                     u2321:
  5671   001634  EF1D  F00B         	goto	l2819
  5672   001638                     u2320:
  5673   001638  060F               	decf	___fladd@bexp^0,f,c
  5674   00163A                     l2819:
  5675   00163A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5676   00163C  EF22  F00B         	goto	u2331
  5677   001640  EF24  F00B         	goto	u2330
  5678   001644                     u2331:
  5679   001644  EFFA  F00A         	goto	l2803
  5680   001648                     u2330:
  5681   001648                     l2821:
  5682   001648  0E00               	movlw	0
  5683   00164A  6E0E               	movwf	___fladd@aexp^0,c
  5684   00164C  AE10               	btfss	___fladd@grs^0,7,c
  5685   00164E  EF2B  F00B         	goto	u2341
  5686   001652  EF2D  F00B         	goto	u2340
  5687   001656                     u2341:
  5688   001656  EF45  F00B         	goto	l709
  5689   00165A                     u2340:
  5690   00165A  C010  F009         	movff	___fladd@grs,??___fladd
  5691   00165E  0E7F               	movlw	127
  5692   001660  1609               	andwf	??___fladd^0,f,c
  5693   001662  B4D8               	btfsc	status,2,c
  5694   001664  EF36  F00B         	goto	u2351
  5695   001668  EF38  F00B         	goto	u2350
  5696   00166C                     u2351:
  5697   00166C  EF3C  F00B         	goto	l710
  5698   001670                     u2350:
  5699   001670                     l2827:
  5700   001670  0E01               	movlw	1
  5701   001672  6E0E               	movwf	___fladd@aexp^0,c
  5702   001674  EF45  F00B         	goto	l709
  5703   001678                     l710:
  5704   001678  A001               	btfss	___fladd@b^0,0,c
  5705   00167A  EF41  F00B         	goto	u2361
  5706   00167E  EF43  F00B         	goto	u2360
  5707   001682                     u2361:
  5708   001682  EF45  F00B         	goto	l709
  5709   001686                     u2360:
  5710   001686  EF38  F00B         	goto	l2827
  5711   00168A                     l709:
  5712   00168A  500E               	movf	___fladd@aexp^0,w,c
  5713   00168C  B4D8               	btfsc	status,2,c
  5714   00168E  EF4B  F00B         	goto	u2371
  5715   001692  EF4D  F00B         	goto	u2370
  5716   001696                     u2371:
  5717   001696  EF78  F00B         	goto	l2839
  5718   00169A                     u2370:
  5719   00169A  0E01               	movlw	1
  5720   00169C  2601               	addwf	___fladd@b^0,f,c
  5721   00169E  0E00               	movlw	0
  5722   0016A0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5723   0016A2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5724   0016A4  2204               	addwfc	(___fladd@b+3)^0,f,c
  5725   0016A6  A004               	btfss	(___fladd@b+3)^0,0,c
  5726   0016A8  EF58  F00B         	goto	u2381
  5727   0016AC  EF5A  F00B         	goto	u2380
  5728   0016B0                     u2381:
  5729   0016B0  EF78  F00B         	goto	l2839
  5730   0016B4                     u2380:
  5731   0016B4  C001  F009         	movff	___fladd@b,??___fladd
  5732   0016B8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5733   0016BC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5734   0016C0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5735   0016C4  340C               	rlcf	(??___fladd+3)^0,w,c
  5736   0016C6  320C               	rrcf	(??___fladd+3)^0,f,c
  5737   0016C8  320B               	rrcf	(??___fladd+2)^0,f,c
  5738   0016CA  320A               	rrcf	(??___fladd+1)^0,f,c
  5739   0016CC  3209               	rrcf	??___fladd^0,f,c
  5740   0016CE  C009  F001         	movff	??___fladd,___fladd@b
  5741   0016D2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5742   0016D6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5743   0016DA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5744   0016DE  280F               	incf	___fladd@bexp^0,w,c
  5745   0016E0  B4D8               	btfsc	status,2,c
  5746   0016E2  EF75  F00B         	goto	u2391
  5747   0016E6  EF77  F00B         	goto	u2390
  5748   0016EA                     u2391:
  5749   0016EA  EF78  F00B         	goto	l2839
  5750   0016EE                     u2390:
  5751   0016EE  2A0F               	incf	___fladd@bexp^0,f,c
  5752   0016F0                     l2839:
  5753   0016F0  280F               	incf	___fladd@bexp^0,w,c
  5754   0016F2  B4D8               	btfsc	status,2,c
  5755   0016F4  EF7E  F00B         	goto	u2401
  5756   0016F8  EF80  F00B         	goto	u2400
  5757   0016FC                     u2401:
  5758   0016FC  EF88  F00B         	goto	l2843
  5759   001700                     u2400:
  5760   001700  500F               	movf	___fladd@bexp^0,w,c
  5761   001702  A4D8               	btfss	status,2,c
  5762   001704  EF86  F00B         	goto	u2411
  5763   001708  EF88  F00B         	goto	u2410
  5764   00170C                     u2411:
  5765   00170C  EF9A  F00B         	goto	l2847
  5766   001710                     u2410:
  5767   001710                     l2843:
  5768   001710  0E00               	movlw	0
  5769   001712  6E01               	movwf	___fladd@b^0,c
  5770   001714  0E00               	movlw	0
  5771   001716  6E02               	movwf	(___fladd@b+1)^0,c
  5772   001718  0E00               	movlw	0
  5773   00171A  6E03               	movwf	(___fladd@b+2)^0,c
  5774   00171C  0E00               	movlw	0
  5775   00171E  6E04               	movwf	(___fladd@b+3)^0,c
  5776   001720  500F               	movf	___fladd@bexp^0,w,c
  5777   001722  A4D8               	btfss	status,2,c
  5778   001724  EF96  F00B         	goto	u2421
  5779   001728  EF98  F00B         	goto	u2420
  5780   00172C                     u2421:
  5781   00172C  EF9A  F00B         	goto	l2847
  5782   001730                     u2420:
  5783   001730  0E00               	movlw	0
  5784   001732  6E0D               	movwf	___fladd@signs^0,c
  5785   001734                     l2847:
  5786   001734  A00F               	btfss	___fladd@bexp^0,0,c
  5787   001736  EF9F  F00B         	goto	u2431
  5788   00173A  EFA1  F00B         	goto	u2430
  5789   00173E                     u2431:
  5790   00173E  EFA4  F00B         	goto	l2851
  5791   001742                     u2430:
  5792   001742  8E03               	bsf	(___fladd@b+2)^0,7,c
  5793   001744  EFA5  F00B         	goto	l2853
  5794   001748                     l2851:
  5795   001748  9E03               	bcf	(___fladd@b+2)^0,7,c
  5796   00174A                     l2853:
  5797   00174A  90D8               	bcf	status,0,c
  5798   00174C  300F               	rrcf	___fladd@bexp^0,w,c
  5799   00174E  6E04               	movwf	(___fladd@b+3)^0,c
  5800   001750  AE0D               	btfss	___fladd@signs^0,7,c
  5801   001752  EFAD  F00B         	goto	u2441
  5802   001756  EFAF  F00B         	goto	u2440
  5803   00175A                     u2441:
  5804   00175A  EFB0  F00B         	goto	l2859
  5805   00175E                     u2440:
  5806   00175E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5807   001760                     l2859:
  5808   001760  C001  F001         	movff	___fladd@b,?___fladd
  5809   001764  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5810   001768  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5811   00176C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5812   001770                     l692:
  5813   001770  0012               	return		;funcret
  5814   001772                     __end_of___fladd:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function ___flneg *****************
  5818 ;; Defined at:
  5819 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  f1              4    0[COMRAM] unsigned char 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4    0[COMRAM] unsigned char 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5833 ;;      Params:         4       0       0       0       0       0       0       0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5836 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5837 ;;Total ram usage:        4 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_efgtoa
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text22
  5847   003478                     __ptext22:
  5848                           	callstack 0
  5849   003478                     ___flneg:
  5850                           	callstack 26
  5851   003478  5001               	movf	___flneg@f1^0,w,c
  5852   00347A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5853   00347C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5854   00347E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5855   003480  B4D8               	btfsc	status,2,c
  5856   003482  EF45  F01A         	goto	u2961
  5857   003486  EF47  F01A         	goto	u2960
  5858   00348A                     u2961:
  5859   00348A  EF4F  F01A         	goto	l3193
  5860   00348E                     u2960:
  5861   00348E  0E00               	movlw	0
  5862   003490  1A01               	xorwf	___flneg@f1^0,f,c
  5863   003492  0E00               	movlw	0
  5864   003494  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5865   003496  0E00               	movlw	0
  5866   003498  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5867   00349A  0E80               	movlw	128
  5868   00349C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5869   00349E                     l3193:
  5870   00349E  C001  F001         	movff	___flneg@f1,?___flneg
  5871   0034A2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5872   0034A6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5873   0034AA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5874   0034AE  0012               	return		;funcret
  5875   0034B0                     __end_of___flneg:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function ___flmul *****************
  5879 ;; Defined at:
  5880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  b               4    0[COMRAM] unsigned char 
  5883 ;;  a               4    4[COMRAM] unsigned char 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  prod            4   19[COMRAM] struct .
  5886 ;;  grs             4   13[COMRAM] unsigned long 
  5887 ;;  temp            2   23[COMRAM] struct .
  5888 ;;  bexp            1   18[COMRAM] unsigned char 
  5889 ;;  aexp            1   17[COMRAM] unsigned char 
  5890 ;;  sign            1   12[COMRAM] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  4    0[COMRAM] unsigned char 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0, prodl, prodh
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:         8       0       0       0       0       0       0       0       0
  5901 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5902 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5903 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:       25 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_efgtoa
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text23
  5914   001772                     __ptext23:
  5915                           	callstack 0
  5916   001772                     ___flmul:
  5917                           	callstack 26
  5918   001772  5004               	movf	(___flmul@b+3)^0,w,c
  5919   001774  0B80               	andlw	128
  5920   001776  6E0D               	movwf	___flmul@sign^0,c
  5921   001778  5004               	movf	(___flmul@b+3)^0,w,c
  5922   00177A  2404               	addwf	(___flmul@b+3)^0,w,c
  5923   00177C  6E13               	movwf	___flmul@bexp^0,c
  5924   00177E  AE03               	btfss	(___flmul@b+2)^0,7,c
  5925   001780  EFC4  F00B         	goto	u2691
  5926   001784  EFC6  F00B         	goto	u2690
  5927   001788                     u2691:
  5928   001788  EFC7  F00B         	goto	l3021
  5929   00178C                     u2690:
  5930   00178C  8013               	bsf	___flmul@bexp^0,0,c
  5931   00178E                     l3021:
  5932   00178E  5013               	movf	___flmul@bexp^0,w,c
  5933   001790  B4D8               	btfsc	status,2,c
  5934   001792  EFCD  F00B         	goto	u2701
  5935   001796  EFCF  F00B         	goto	u2700
  5936   00179A                     u2701:
  5937   00179A  EFE2  F00B         	goto	l3029
  5938   00179E                     u2700:
  5939   00179E  2813               	incf	___flmul@bexp^0,w,c
  5940   0017A0  A4D8               	btfss	status,2,c
  5941   0017A2  EFD5  F00B         	goto	u2711
  5942   0017A6  EFD7  F00B         	goto	u2710
  5943   0017AA                     u2711:
  5944   0017AA  EFDF  F00B         	goto	l3027
  5945   0017AE                     u2710:
  5946   0017AE  0E00               	movlw	0
  5947   0017B0  6E01               	movwf	___flmul@b^0,c
  5948   0017B2  0E00               	movlw	0
  5949   0017B4  6E02               	movwf	(___flmul@b+1)^0,c
  5950   0017B6  0E00               	movlw	0
  5951   0017B8  6E03               	movwf	(___flmul@b+2)^0,c
  5952   0017BA  0E00               	movlw	0
  5953   0017BC  6E04               	movwf	(___flmul@b+3)^0,c
  5954   0017BE                     l3027:
  5955   0017BE  8E03               	bsf	(___flmul@b+2)^0,7,c
  5956   0017C0  EFEA  F00B         	goto	l3031
  5957   0017C4                     l3029:
  5958   0017C4  0E00               	movlw	0
  5959   0017C6  6E01               	movwf	___flmul@b^0,c
  5960   0017C8  0E00               	movlw	0
  5961   0017CA  6E02               	movwf	(___flmul@b+1)^0,c
  5962   0017CC  0E00               	movlw	0
  5963   0017CE  6E03               	movwf	(___flmul@b+2)^0,c
  5964   0017D0  0E00               	movlw	0
  5965   0017D2  6E04               	movwf	(___flmul@b+3)^0,c
  5966   0017D4                     l3031:
  5967   0017D4  5008               	movf	(___flmul@a+3)^0,w,c
  5968   0017D6  0B80               	andlw	128
  5969   0017D8  1A0D               	xorwf	___flmul@sign^0,f,c
  5970   0017DA  5008               	movf	(___flmul@a+3)^0,w,c
  5971   0017DC  2408               	addwf	(___flmul@a+3)^0,w,c
  5972   0017DE  6E12               	movwf	___flmul@aexp^0,c
  5973   0017E0  AE07               	btfss	(___flmul@a+2)^0,7,c
  5974   0017E2  EFF5  F00B         	goto	u2721
  5975   0017E6  EFF7  F00B         	goto	u2720
  5976   0017EA                     u2721:
  5977   0017EA  EFF8  F00B         	goto	l3039
  5978   0017EE                     u2720:
  5979   0017EE  8012               	bsf	___flmul@aexp^0,0,c
  5980   0017F0                     l3039:
  5981   0017F0  5012               	movf	___flmul@aexp^0,w,c
  5982   0017F2  B4D8               	btfsc	status,2,c
  5983   0017F4  EFFE  F00B         	goto	u2731
  5984   0017F8  EF00  F00C         	goto	u2730
  5985   0017FC                     u2731:
  5986   0017FC  EF13  F00C         	goto	l3047
  5987   001800                     u2730:
  5988   001800  2812               	incf	___flmul@aexp^0,w,c
  5989   001802  A4D8               	btfss	status,2,c
  5990   001804  EF06  F00C         	goto	u2741
  5991   001808  EF08  F00C         	goto	u2740
  5992   00180C                     u2741:
  5993   00180C  EF10  F00C         	goto	l3045
  5994   001810                     u2740:
  5995   001810  0E00               	movlw	0
  5996   001812  6E05               	movwf	___flmul@a^0,c
  5997   001814  0E00               	movlw	0
  5998   001816  6E06               	movwf	(___flmul@a+1)^0,c
  5999   001818  0E00               	movlw	0
  6000   00181A  6E07               	movwf	(___flmul@a+2)^0,c
  6001   00181C  0E00               	movlw	0
  6002   00181E  6E08               	movwf	(___flmul@a+3)^0,c
  6003   001820                     l3045:
  6004   001820  8E07               	bsf	(___flmul@a+2)^0,7,c
  6005   001822  EF1B  F00C         	goto	l769
  6006   001826                     l3047:
  6007   001826  0E00               	movlw	0
  6008   001828  6E05               	movwf	___flmul@a^0,c
  6009   00182A  0E00               	movlw	0
  6010   00182C  6E06               	movwf	(___flmul@a+1)^0,c
  6011   00182E  0E00               	movlw	0
  6012   001830  6E07               	movwf	(___flmul@a+2)^0,c
  6013   001832  0E00               	movlw	0
  6014   001834  6E08               	movwf	(___flmul@a+3)^0,c
  6015   001836                     l769:
  6016   001836  5012               	movf	___flmul@aexp^0,w,c
  6017   001838  B4D8               	btfsc	status,2,c
  6018   00183A  EF21  F00C         	goto	u2751
  6019   00183E  EF23  F00C         	goto	u2750
  6020   001842                     u2751:
  6021   001842  EF2B  F00C         	goto	l3051
  6022   001846                     u2750:
  6023   001846  5013               	movf	___flmul@bexp^0,w,c
  6024   001848  A4D8               	btfss	status,2,c
  6025   00184A  EF29  F00C         	goto	u2761
  6026   00184E  EF2B  F00C         	goto	u2760
  6027   001852                     u2761:
  6028   001852  EF35  F00C         	goto	l3055
  6029   001856                     u2760:
  6030   001856                     l3051:
  6031   001856  0E00               	movlw	0
  6032   001858  6E01               	movwf	?___flmul^0,c
  6033   00185A  0E00               	movlw	0
  6034   00185C  6E02               	movwf	(?___flmul+1)^0,c
  6035   00185E  0E00               	movlw	0
  6036   001860  6E03               	movwf	(?___flmul+2)^0,c
  6037   001862  0E00               	movlw	0
  6038   001864  6E04               	movwf	(?___flmul+3)^0,c
  6039   001866  EFCD  F00D         	goto	l773
  6040   00186A                     l3055:
  6041   00186A  5007               	movf	(___flmul@a+2)^0,w,c
  6042   00186C  0201               	mulwf	___flmul@b^0,c
  6043   00186E  CFF3 F018          	movff	prodl,___flmul@temp
  6044   001872  CFF4 F019          	movff	prodh,___flmul@temp+1
  6045   001876  5018               	movf	___flmul@temp^0,w,c
  6046   001878  6E0E               	movwf	___flmul@grs^0,c
  6047   00187A  6A0F               	clrf	(___flmul@grs+1)^0,c
  6048   00187C  6A10               	clrf	(___flmul@grs+2)^0,c
  6049   00187E  6A11               	clrf	(___flmul@grs+3)^0,c
  6050   001880  5019               	movf	(___flmul@temp+1)^0,w,c
  6051   001882  6E14               	movwf	___flmul@prod^0,c
  6052   001884  6A15               	clrf	(___flmul@prod+1)^0,c
  6053   001886  6A16               	clrf	(___flmul@prod+2)^0,c
  6054   001888  6A17               	clrf	(___flmul@prod+3)^0,c
  6055   00188A  5006               	movf	(___flmul@a+1)^0,w,c
  6056   00188C  0202               	mulwf	(___flmul@b+1)^0,c
  6057   00188E  CFF3 F018          	movff	prodl,___flmul@temp
  6058   001892  CFF4 F019          	movff	prodh,___flmul@temp+1
  6059   001896  5018               	movf	___flmul@temp^0,w,c
  6060   001898  260E               	addwf	___flmul@grs^0,f,c
  6061   00189A  0E00               	movlw	0
  6062   00189C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6063   00189E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6064   0018A0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6065   0018A2  5019               	movf	(___flmul@temp+1)^0,w,c
  6066   0018A4  2614               	addwf	___flmul@prod^0,f,c
  6067   0018A6  0E00               	movlw	0
  6068   0018A8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6069   0018AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6070   0018AC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6071   0018AE  5005               	movf	___flmul@a^0,w,c
  6072   0018B0  0203               	mulwf	(___flmul@b+2)^0,c
  6073   0018B2  CFF3 F018          	movff	prodl,___flmul@temp
  6074   0018B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6075   0018BA  5018               	movf	___flmul@temp^0,w,c
  6076   0018BC  260E               	addwf	___flmul@grs^0,f,c
  6077   0018BE  0E00               	movlw	0
  6078   0018C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6079   0018C2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6080   0018C4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6081   0018C6  5019               	movf	(___flmul@temp+1)^0,w,c
  6082   0018C8  2614               	addwf	___flmul@prod^0,f,c
  6083   0018CA  0E00               	movlw	0
  6084   0018CC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6085   0018CE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6086   0018D0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6087   0018D2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6088   0018D6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6089   0018DA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6090   0018DE  6A0E               	clrf	___flmul@grs^0,c
  6091   0018E0  5005               	movf	___flmul@a^0,w,c
  6092   0018E2  0202               	mulwf	(___flmul@b+1)^0,c
  6093   0018E4  CFF3 F018          	movff	prodl,___flmul@temp
  6094   0018E8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6095   0018EC  5018               	movf	___flmul@temp^0,w,c
  6096   0018EE  260E               	addwf	___flmul@grs^0,f,c
  6097   0018F0  5019               	movf	(___flmul@temp+1)^0,w,c
  6098   0018F2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6099   0018F4  0E00               	movlw	0
  6100   0018F6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6101   0018F8  0E00               	movlw	0
  6102   0018FA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6103   0018FC  5006               	movf	(___flmul@a+1)^0,w,c
  6104   0018FE  0201               	mulwf	___flmul@b^0,c
  6105   001900  CFF3 F018          	movff	prodl,___flmul@temp
  6106   001904  CFF4 F019          	movff	prodh,___flmul@temp+1
  6107   001908  5018               	movf	___flmul@temp^0,w,c
  6108   00190A  260E               	addwf	___flmul@grs^0,f,c
  6109   00190C  5019               	movf	(___flmul@temp+1)^0,w,c
  6110   00190E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6111   001910  0E00               	movlw	0
  6112   001912  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6113   001914  0E00               	movlw	0
  6114   001916  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6115   001918  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6116   00191C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6117   001920  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6118   001924  6A0E               	clrf	___flmul@grs^0,c
  6119   001926  5005               	movf	___flmul@a^0,w,c
  6120   001928  0201               	mulwf	___flmul@b^0,c
  6121   00192A  CFF3 F018          	movff	prodl,___flmul@temp
  6122   00192E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6123   001932  5018               	movf	___flmul@temp^0,w,c
  6124   001934  260E               	addwf	___flmul@grs^0,f,c
  6125   001936  5019               	movf	(___flmul@temp+1)^0,w,c
  6126   001938  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6127   00193A  0E00               	movlw	0
  6128   00193C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6129   00193E  0E00               	movlw	0
  6130   001940  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6131   001942  5007               	movf	(___flmul@a+2)^0,w,c
  6132   001944  0202               	mulwf	(___flmul@b+1)^0,c
  6133   001946  CFF3 F018          	movff	prodl,___flmul@temp
  6134   00194A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6135   00194E  5018               	movf	___flmul@temp^0,w,c
  6136   001950  2614               	addwf	___flmul@prod^0,f,c
  6137   001952  5019               	movf	(___flmul@temp+1)^0,w,c
  6138   001954  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6139   001956  0E00               	movlw	0
  6140   001958  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6141   00195A  0E00               	movlw	0
  6142   00195C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6143   00195E  5006               	movf	(___flmul@a+1)^0,w,c
  6144   001960  0203               	mulwf	(___flmul@b+2)^0,c
  6145   001962  CFF3 F018          	movff	prodl,___flmul@temp
  6146   001966  CFF4 F019          	movff	prodh,___flmul@temp+1
  6147   00196A  5018               	movf	___flmul@temp^0,w,c
  6148   00196C  2614               	addwf	___flmul@prod^0,f,c
  6149   00196E  5019               	movf	(___flmul@temp+1)^0,w,c
  6150   001970  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6151   001972  0E00               	movlw	0
  6152   001974  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6153   001976  0E00               	movlw	0
  6154   001978  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6155   00197A  5007               	movf	(___flmul@a+2)^0,w,c
  6156   00197C  0203               	mulwf	(___flmul@b+2)^0,c
  6157   00197E  CFF3 F018          	movff	prodl,___flmul@temp
  6158   001982  CFF4 F019          	movff	prodh,___flmul@temp+1
  6159   001986  5018               	movf	___flmul@temp^0,w,c
  6160   001988  6E09               	movwf	??___flmul^0,c
  6161   00198A  5019               	movf	(___flmul@temp+1)^0,w,c
  6162   00198C  6E0A               	movwf	(??___flmul+1)^0,c
  6163   00198E  6A0B               	clrf	(??___flmul+2)^0,c
  6164   001990  6A0C               	clrf	(??___flmul+3)^0,c
  6165   001992  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6166   001996  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6167   00199A  C009  F00A         	movff	??___flmul,??___flmul+1
  6168   00199E  6A09               	clrf	??___flmul^0,c
  6169   0019A0  5009               	movf	??___flmul^0,w,c
  6170   0019A2  2614               	addwf	___flmul@prod^0,f,c
  6171   0019A4  500A               	movf	(??___flmul+1)^0,w,c
  6172   0019A6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6173   0019A8  500B               	movf	(??___flmul+2)^0,w,c
  6174   0019AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6175   0019AC  500C               	movf	(??___flmul+3)^0,w,c
  6176   0019AE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6177   0019B0  C00E  F009         	movff	___flmul@grs,??___flmul
  6178   0019B4  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6179   0019B8  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6180   0019BC  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6181   0019C0  0E19               	movlw	25
  6182   0019C2  EFE8  F00C         	goto	u2770
  6183   0019C6                     u2775:
  6184   0019C6  90D8               	bcf	status,0,c
  6185   0019C8  320C               	rrcf	(??___flmul+3)^0,f,c
  6186   0019CA  320B               	rrcf	(??___flmul+2)^0,f,c
  6187   0019CC  320A               	rrcf	(??___flmul+1)^0,f,c
  6188   0019CE  3209               	rrcf	??___flmul^0,f,c
  6189   0019D0                     u2770:
  6190   0019D0  2EE8               	decfsz	wreg,f,c
  6191   0019D2  EFE3  F00C         	goto	u2775
  6192   0019D6  5009               	movf	??___flmul^0,w,c
  6193   0019D8  2614               	addwf	___flmul@prod^0,f,c
  6194   0019DA  500A               	movf	(??___flmul+1)^0,w,c
  6195   0019DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6196   0019DE  500B               	movf	(??___flmul+2)^0,w,c
  6197   0019E0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6198   0019E2  500C               	movf	(??___flmul+3)^0,w,c
  6199   0019E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6200   0019E6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6201   0019EA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6202   0019EE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6203   0019F2  6A0E               	clrf	___flmul@grs^0,c
  6204   0019F4  5012               	movf	___flmul@aexp^0,w,c
  6205   0019F6  C013  F009         	movff	___flmul@bexp,??___flmul
  6206   0019FA  6A0A               	clrf	(??___flmul+1)^0,c
  6207   0019FC  2609               	addwf	??___flmul^0,f,c
  6208   0019FE  0E00               	movlw	0
  6209   001A00  220A               	addwfc	(??___flmul+1)^0,f,c
  6210   001A02  0E82               	movlw	130
  6211   001A04  2409               	addwf	??___flmul^0,w,c
  6212   001A06  6E18               	movwf	___flmul@temp^0,c
  6213   001A08  0EFF               	movlw	255
  6214   001A0A  200A               	addwfc	(??___flmul+1)^0,w,c
  6215   001A0C  6E19               	movwf	(___flmul@temp+1)^0,c
  6216   001A0E  EF1E  F00D         	goto	l3103
  6217   001A12                     l3097:
  6218   001A12  90D8               	bcf	status,0,c
  6219   001A14  3614               	rlcf	___flmul@prod^0,f,c
  6220   001A16  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6221   001A18  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6222   001A1A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6223   001A1C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6224   001A1E  EF13  F00D         	goto	u2781
  6225   001A22  EF15  F00D         	goto	u2780
  6226   001A26                     u2781:
  6227   001A26  EF16  F00D         	goto	l776
  6228   001A2A                     u2780:
  6229   001A2A  8014               	bsf	___flmul@prod^0,0,c
  6230   001A2C                     l776:
  6231   001A2C  90D8               	bcf	status,0,c
  6232   001A2E  360E               	rlcf	___flmul@grs^0,f,c
  6233   001A30  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6234   001A32  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6235   001A34  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6236   001A36  0618               	decf	___flmul@temp^0,f,c
  6237   001A38  A0D8               	btfss	status,0,c
  6238   001A3A  0619               	decf	(___flmul@temp+1)^0,f,c
  6239   001A3C                     l3103:
  6240   001A3C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6241   001A3E  EF23  F00D         	goto	u2791
  6242   001A42  EF25  F00D         	goto	u2790
  6243   001A46                     u2791:
  6244   001A46  EF09  F00D         	goto	l3097
  6245   001A4A                     u2790:
  6246   001A4A  0E00               	movlw	0
  6247   001A4C  6E12               	movwf	___flmul@aexp^0,c
  6248   001A4E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6249   001A50  EF2C  F00D         	goto	u2801
  6250   001A54  EF2E  F00D         	goto	u2800
  6251   001A58                     u2801:
  6252   001A58  EF52  F00D         	goto	l778
  6253   001A5C                     u2800:
  6254   001A5C  0EFF               	movlw	255
  6255   001A5E  140E               	andwf	___flmul@grs^0,w,c
  6256   001A60  6E09               	movwf	??___flmul^0,c
  6257   001A62  0EFF               	movlw	255
  6258   001A64  140F               	andwf	(___flmul@grs+1)^0,w,c
  6259   001A66  6E0A               	movwf	(??___flmul+1)^0,c
  6260   001A68  0EFF               	movlw	255
  6261   001A6A  1410               	andwf	(___flmul@grs+2)^0,w,c
  6262   001A6C  6E0B               	movwf	(??___flmul+2)^0,c
  6263   001A6E  0E7F               	movlw	127
  6264   001A70  1411               	andwf	(___flmul@grs+3)^0,w,c
  6265   001A72  6E0C               	movwf	(??___flmul+3)^0,c
  6266   001A74  5009               	movf	??___flmul^0,w,c
  6267   001A76  100A               	iorwf	(??___flmul+1)^0,w,c
  6268   001A78  100B               	iorwf	(??___flmul+2)^0,w,c
  6269   001A7A  100C               	iorwf	(??___flmul+3)^0,w,c
  6270   001A7C  B4D8               	btfsc	status,2,c
  6271   001A7E  EF43  F00D         	goto	u2811
  6272   001A82  EF45  F00D         	goto	u2810
  6273   001A86                     u2811:
  6274   001A86  EF49  F00D         	goto	l779
  6275   001A8A                     u2810:
  6276   001A8A                     l3111:
  6277   001A8A  0E01               	movlw	1
  6278   001A8C  6E12               	movwf	___flmul@aexp^0,c
  6279   001A8E  EF52  F00D         	goto	l778
  6280   001A92                     l779:
  6281   001A92  A014               	btfss	___flmul@prod^0,0,c
  6282   001A94  EF4E  F00D         	goto	u2821
  6283   001A98  EF50  F00D         	goto	u2820
  6284   001A9C                     u2821:
  6285   001A9C  EF52  F00D         	goto	l778
  6286   001AA0                     u2820:
  6287   001AA0  EF45  F00D         	goto	l3111
  6288   001AA4                     l778:
  6289   001AA4  5012               	movf	___flmul@aexp^0,w,c
  6290   001AA6  B4D8               	btfsc	status,2,c
  6291   001AA8  EF58  F00D         	goto	u2831
  6292   001AAC  EF5A  F00D         	goto	u2830
  6293   001AB0                     u2831:
  6294   001AB0  EF7E  F00D         	goto	l3123
  6295   001AB4                     u2830:
  6296   001AB4  0E01               	movlw	1
  6297   001AB6  2614               	addwf	___flmul@prod^0,f,c
  6298   001AB8  0E00               	movlw	0
  6299   001ABA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6300   001ABC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6301   001ABE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6302   001AC0  A017               	btfss	(___flmul@prod+3)^0,0,c
  6303   001AC2  EF65  F00D         	goto	u2841
  6304   001AC6  EF67  F00D         	goto	u2840
  6305   001ACA                     u2841:
  6306   001ACA  EF7E  F00D         	goto	l3123
  6307   001ACE                     u2840:
  6308   001ACE  C014  F009         	movff	___flmul@prod,??___flmul
  6309   001AD2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6310   001AD6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6311   001ADA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6312   001ADE  340C               	rlcf	(??___flmul+3)^0,w,c
  6313   001AE0  320C               	rrcf	(??___flmul+3)^0,f,c
  6314   001AE2  320B               	rrcf	(??___flmul+2)^0,f,c
  6315   001AE4  320A               	rrcf	(??___flmul+1)^0,f,c
  6316   001AE6  3209               	rrcf	??___flmul^0,f,c
  6317   001AE8  C009  F014         	movff	??___flmul,___flmul@prod
  6318   001AEC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6319   001AF0  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6320   001AF4  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6321   001AF8  4A18               	infsnz	___flmul@temp^0,f,c
  6322   001AFA  2A19               	incf	(___flmul@temp+1)^0,f,c
  6323   001AFC                     l3123:
  6324   001AFC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6325   001AFE  EF89  F00D         	goto	u2851
  6326   001B02  5019               	movf	(___flmul@temp+1)^0,w,c
  6327   001B04  E108               	bnz	u2850
  6328   001B06  2818               	incf	___flmul@temp^0,w,c
  6329   001B08  A0D8               	btfss	status,0,c
  6330   001B0A  EF89  F00D         	goto	u2851
  6331   001B0E  EF8B  F00D         	goto	u2850
  6332   001B12                     u2851:
  6333   001B12  EF95  F00D         	goto	l3127
  6334   001B16                     u2850:
  6335   001B16  0E00               	movlw	0
  6336   001B18  6E14               	movwf	___flmul@prod^0,c
  6337   001B1A  0E00               	movlw	0
  6338   001B1C  6E15               	movwf	(___flmul@prod+1)^0,c
  6339   001B1E  0E80               	movlw	128
  6340   001B20  6E16               	movwf	(___flmul@prod+2)^0,c
  6341   001B22  0E7F               	movlw	127
  6342   001B24  6E17               	movwf	(___flmul@prod+3)^0,c
  6343   001B26  EFC3  F00D         	goto	l3139
  6344   001B2A                     l3127:
  6345   001B2A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6346   001B2C  EFA2  F00D         	goto	u2860
  6347   001B30  5019               	movf	(___flmul@temp+1)^0,w,c
  6348   001B32  E106               	bnz	u2861
  6349   001B34  0418               	decf	___flmul@temp^0,w,c
  6350   001B36  B0D8               	btfsc	status,0,c
  6351   001B38  EFA0  F00D         	goto	u2861
  6352   001B3C  EFA2  F00D         	goto	u2860
  6353   001B40                     u2861:
  6354   001B40  EFAE  F00D         	goto	l786
  6355   001B44                     u2860:
  6356   001B44  0E00               	movlw	0
  6357   001B46  6E14               	movwf	___flmul@prod^0,c
  6358   001B48  0E00               	movlw	0
  6359   001B4A  6E15               	movwf	(___flmul@prod+1)^0,c
  6360   001B4C  0E00               	movlw	0
  6361   001B4E  6E16               	movwf	(___flmul@prod+2)^0,c
  6362   001B50  0E00               	movlw	0
  6363   001B52  6E17               	movwf	(___flmul@prod+3)^0,c
  6364   001B54  0E00               	movlw	0
  6365   001B56  6E0D               	movwf	___flmul@sign^0,c
  6366   001B58  EFC3  F00D         	goto	l3139
  6367   001B5C                     l786:
  6368   001B5C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6369   001B60  0EFF               	movlw	255
  6370   001B62  1614               	andwf	___flmul@prod^0,f,c
  6371   001B64  0EFF               	movlw	255
  6372   001B66  1615               	andwf	(___flmul@prod+1)^0,f,c
  6373   001B68  0E7F               	movlw	127
  6374   001B6A  1616               	andwf	(___flmul@prod+2)^0,f,c
  6375   001B6C  0E00               	movlw	0
  6376   001B6E  1617               	andwf	(___flmul@prod+3)^0,f,c
  6377   001B70  A013               	btfss	___flmul@bexp^0,0,c
  6378   001B72  EFBD  F00D         	goto	u2871
  6379   001B76  EFBF  F00D         	goto	u2870
  6380   001B7A                     u2871:
  6381   001B7A  EFC0  F00D         	goto	l3137
  6382   001B7E                     u2870:
  6383   001B7E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6384   001B80                     l3137:
  6385   001B80  90D8               	bcf	status,0,c
  6386   001B82  3013               	rrcf	___flmul@bexp^0,w,c
  6387   001B84  6E17               	movwf	(___flmul@prod+3)^0,c
  6388   001B86                     l3139:
  6389   001B86  500D               	movf	___flmul@sign^0,w,c
  6390   001B88  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6391   001B8A  C014  F001         	movff	___flmul@prod,?___flmul
  6392   001B8E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6393   001B92  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6394   001B96  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6395   001B9A                     l773:
  6396   001B9A  0012               	return		;funcret
  6397   001B9C                     __end_of___flmul:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function ___flge *****************
  6401 ;; Defined at:
  6402 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  ff1             4   25[COMRAM] unsigned char 
  6405 ;;  ff2             4   29[COMRAM] unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;		None               void
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6417 ;;      Params:         8       0       0       0       0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6419 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6420 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6421 ;;Total ram usage:       12 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_efgtoa
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text24
  6431   002AC2                     __ptext24:
  6432                           	callstack 0
  6433   002AC2                     ___flge:
  6434                           	callstack 26
  6435   002AC2  0E00               	movlw	0
  6436   002AC4  141A               	andwf	___flge@ff1^0,w,c
  6437   002AC6  6E22               	movwf	??___flge^0,c
  6438   002AC8  0E00               	movlw	0
  6439   002ACA  141B               	andwf	(___flge@ff1+1)^0,w,c
  6440   002ACC  6E23               	movwf	(??___flge+1)^0,c
  6441   002ACE  0E80               	movlw	128
  6442   002AD0  141C               	andwf	(___flge@ff1+2)^0,w,c
  6443   002AD2  6E24               	movwf	(??___flge+2)^0,c
  6444   002AD4  0E7F               	movlw	127
  6445   002AD6  141D               	andwf	(___flge@ff1+3)^0,w,c
  6446   002AD8  6E25               	movwf	(??___flge+3)^0,c
  6447   002ADA  5022               	movf	??___flge^0,w,c
  6448   002ADC  1023               	iorwf	(??___flge+1)^0,w,c
  6449   002ADE  1024               	iorwf	(??___flge+2)^0,w,c
  6450   002AE0  1025               	iorwf	(??___flge+3)^0,w,c
  6451   002AE2  A4D8               	btfss	status,2,c
  6452   002AE4  EF76  F015         	goto	u2911
  6453   002AE8  EF78  F015         	goto	u2910
  6454   002AEC                     u2911:
  6455   002AEC  EF80  F015         	goto	l3171
  6456   002AF0                     u2910:
  6457   002AF0  0E00               	movlw	0
  6458   002AF2  6E1A               	movwf	___flge@ff1^0,c
  6459   002AF4  0E00               	movlw	0
  6460   002AF6  6E1B               	movwf	(___flge@ff1+1)^0,c
  6461   002AF8  0E00               	movlw	0
  6462   002AFA  6E1C               	movwf	(___flge@ff1+2)^0,c
  6463   002AFC  0E00               	movlw	0
  6464   002AFE  6E1D               	movwf	(___flge@ff1+3)^0,c
  6465   002B00                     l3171:
  6466   002B00  0E00               	movlw	0
  6467   002B02  141E               	andwf	___flge@ff2^0,w,c
  6468   002B04  6E22               	movwf	??___flge^0,c
  6469   002B06  0E00               	movlw	0
  6470   002B08  141F               	andwf	(___flge@ff2+1)^0,w,c
  6471   002B0A  6E23               	movwf	(??___flge+1)^0,c
  6472   002B0C  0E80               	movlw	128
  6473   002B0E  1420               	andwf	(___flge@ff2+2)^0,w,c
  6474   002B10  6E24               	movwf	(??___flge+2)^0,c
  6475   002B12  0E7F               	movlw	127
  6476   002B14  1421               	andwf	(___flge@ff2+3)^0,w,c
  6477   002B16  6E25               	movwf	(??___flge+3)^0,c
  6478   002B18  5022               	movf	??___flge^0,w,c
  6479   002B1A  1023               	iorwf	(??___flge+1)^0,w,c
  6480   002B1C  1024               	iorwf	(??___flge+2)^0,w,c
  6481   002B1E  1025               	iorwf	(??___flge+3)^0,w,c
  6482   002B20  A4D8               	btfss	status,2,c
  6483   002B22  EF95  F015         	goto	u2921
  6484   002B26  EF97  F015         	goto	u2920
  6485   002B2A                     u2921:
  6486   002B2A  EF9F  F015         	goto	l3175
  6487   002B2E                     u2920:
  6488   002B2E  0E00               	movlw	0
  6489   002B30  6E1E               	movwf	___flge@ff2^0,c
  6490   002B32  0E00               	movlw	0
  6491   002B34  6E1F               	movwf	(___flge@ff2+1)^0,c
  6492   002B36  0E00               	movlw	0
  6493   002B38  6E20               	movwf	(___flge@ff2+2)^0,c
  6494   002B3A  0E00               	movlw	0
  6495   002B3C  6E21               	movwf	(___flge@ff2+3)^0,c
  6496   002B3E                     l3175:
  6497   002B3E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6498   002B40  EFA4  F015         	goto	u2931
  6499   002B44  EFA6  F015         	goto	u2930
  6500   002B48                     u2931:
  6501   002B48  EFAF  F015         	goto	l3179
  6502   002B4C                     u2930:
  6503   002B4C  6C1A               	negf	___flge@ff1^0,c
  6504   002B4E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6505   002B50  B0D8               	btfsc	status,0,c
  6506   002B52  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6507   002B54  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6508   002B56  B0D8               	btfsc	status,0,c
  6509   002B58  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6510   002B5A  0E80               	movlw	128
  6511   002B5C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6512   002B5E                     l3179:
  6513   002B5E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6514   002B60  EFB4  F015         	goto	u2941
  6515   002B64  EFB6  F015         	goto	u2940
  6516   002B68                     u2941:
  6517   002B68  EFBF  F015         	goto	l420
  6518   002B6C                     u2940:
  6519   002B6C  6C1E               	negf	___flge@ff2^0,c
  6520   002B6E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6521   002B70  B0D8               	btfsc	status,0,c
  6522   002B72  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6523   002B74  1E20               	comf	(___flge@ff2+2)^0,f,c
  6524   002B76  B0D8               	btfsc	status,0,c
  6525   002B78  2A20               	incf	(___flge@ff2+2)^0,f,c
  6526   002B7A  0E80               	movlw	128
  6527   002B7C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6528   002B7E                     l420:
  6529   002B7E  0E00               	movlw	0
  6530   002B80  1A1A               	xorwf	___flge@ff1^0,f,c
  6531   002B82  0E00               	movlw	0
  6532   002B84  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6533   002B86  0E00               	movlw	0
  6534   002B88  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6535   002B8A  0E80               	movlw	128
  6536   002B8C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6537   002B8E  0E00               	movlw	0
  6538   002B90  1A1E               	xorwf	___flge@ff2^0,f,c
  6539   002B92  0E00               	movlw	0
  6540   002B94  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6541   002B96  0E00               	movlw	0
  6542   002B98  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6543   002B9A  0E80               	movlw	128
  6544   002B9C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6545   002B9E  501E               	movf	___flge@ff2^0,w,c
  6546   002BA0  5C1A               	subwf	___flge@ff1^0,w,c
  6547   002BA2  501F               	movf	(___flge@ff2+1)^0,w,c
  6548   002BA4  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6549   002BA6  5020               	movf	(___flge@ff2+2)^0,w,c
  6550   002BA8  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6551   002BAA  5021               	movf	(___flge@ff2+3)^0,w,c
  6552   002BAC  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6553   002BAE  B0D8               	btfsc	status,0,c
  6554   002BB0  EFDC  F015         	goto	u2951
  6555   002BB4  EFDE  F015         	goto	u2950
  6556   002BB8                     u2951:
  6557   002BB8  EFE1  F015         	goto	l3185
  6558   002BBC                     u2950:
  6559   002BBC  90D8               	bcf	status,0,c
  6560   002BBE  EFE2  F015         	goto	l425
  6561   002BC2                     l3185:
  6562   002BC2  80D8               	bsf	status,0,c
  6563   002BC4                     l425:
  6564   002BC4  0012               	return		;funcret
  6565   002BC6                     __end_of___flge:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function ___fleq *****************
  6569 ;; Defined at:
  6570 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  ff1             4    0[COMRAM] unsigned char 
  6573 ;;  ff2             4    4[COMRAM] unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6585 ;;      Params:         8       0       0       0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6587 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6588 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6589 ;;Total ram usage:       12 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_efgtoa
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text25
  6599   002E40                     __ptext25:
  6600                           	callstack 0
  6601   002E40                     ___fleq:
  6602                           	callstack 26
  6603   002E40  0E00               	movlw	0
  6604   002E42  1401               	andwf	___fleq@ff1^0,w,c
  6605   002E44  6E09               	movwf	??___fleq^0,c
  6606   002E46  0E00               	movlw	0
  6607   002E48  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6608   002E4A  6E0A               	movwf	(??___fleq+1)^0,c
  6609   002E4C  0E80               	movlw	128
  6610   002E4E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6611   002E50  6E0B               	movwf	(??___fleq+2)^0,c
  6612   002E52  0E7F               	movlw	127
  6613   002E54  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6614   002E56  6E0C               	movwf	(??___fleq+3)^0,c
  6615   002E58  5009               	movf	??___fleq^0,w,c
  6616   002E5A  100A               	iorwf	(??___fleq+1)^0,w,c
  6617   002E5C  100B               	iorwf	(??___fleq+2)^0,w,c
  6618   002E5E  100C               	iorwf	(??___fleq+3)^0,w,c
  6619   002E60  A4D8               	btfss	status,2,c
  6620   002E62  EF35  F017         	goto	u2881
  6621   002E66  EF37  F017         	goto	u2880
  6622   002E6A                     u2881:
  6623   002E6A  EF3F  F017         	goto	l3155
  6624   002E6E                     u2880:
  6625   002E6E  0E00               	movlw	0
  6626   002E70  6E01               	movwf	___fleq@ff1^0,c
  6627   002E72  0E00               	movlw	0
  6628   002E74  6E02               	movwf	(___fleq@ff1+1)^0,c
  6629   002E76  0E00               	movlw	0
  6630   002E78  6E03               	movwf	(___fleq@ff1+2)^0,c
  6631   002E7A  0E00               	movlw	0
  6632   002E7C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6633   002E7E                     l3155:
  6634   002E7E  0E00               	movlw	0
  6635   002E80  1405               	andwf	___fleq@ff2^0,w,c
  6636   002E82  6E09               	movwf	??___fleq^0,c
  6637   002E84  0E00               	movlw	0
  6638   002E86  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6639   002E88  6E0A               	movwf	(??___fleq+1)^0,c
  6640   002E8A  0E80               	movlw	128
  6641   002E8C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6642   002E8E  6E0B               	movwf	(??___fleq+2)^0,c
  6643   002E90  0E7F               	movlw	127
  6644   002E92  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6645   002E94  6E0C               	movwf	(??___fleq+3)^0,c
  6646   002E96  5009               	movf	??___fleq^0,w,c
  6647   002E98  100A               	iorwf	(??___fleq+1)^0,w,c
  6648   002E9A  100B               	iorwf	(??___fleq+2)^0,w,c
  6649   002E9C  100C               	iorwf	(??___fleq+3)^0,w,c
  6650   002E9E  A4D8               	btfss	status,2,c
  6651   002EA0  EF54  F017         	goto	u2891
  6652   002EA4  EF56  F017         	goto	u2890
  6653   002EA8                     u2891:
  6654   002EA8  EF5E  F017         	goto	l3159
  6655   002EAC                     u2890:
  6656   002EAC  0E00               	movlw	0
  6657   002EAE  6E05               	movwf	___fleq@ff2^0,c
  6658   002EB0  0E00               	movlw	0
  6659   002EB2  6E06               	movwf	(___fleq@ff2+1)^0,c
  6660   002EB4  0E00               	movlw	0
  6661   002EB6  6E07               	movwf	(___fleq@ff2+2)^0,c
  6662   002EB8  0E00               	movlw	0
  6663   002EBA  6E08               	movwf	(___fleq@ff2+3)^0,c
  6664   002EBC                     l3159:
  6665   002EBC  5005               	movf	___fleq@ff2^0,w,c
  6666   002EBE  1801               	xorwf	___fleq@ff1^0,w,c
  6667   002EC0  E10F               	bnz	u2900
  6668   002EC2  5006               	movf	(___fleq@ff2+1)^0,w,c
  6669   002EC4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6670   002EC6  E10C               	bnz	u2900
  6671   002EC8  5007               	movf	(___fleq@ff2+2)^0,w,c
  6672   002ECA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6673   002ECC  E109               	bnz	u2900
  6674   002ECE  5008               	movf	(___fleq@ff2+3)^0,w,c
  6675   002ED0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6676   002ED2  B4D8               	btfsc	status,2,c
  6677   002ED4  EF6E  F017         	goto	u2901
  6678   002ED8  EF70  F017         	goto	u2900
  6679   002EDC                     u2901:
  6680   002EDC  EF73  F017         	goto	l3163
  6681   002EE0                     u2900:
  6682   002EE0  90D8               	bcf	status,0,c
  6683   002EE2  EF74  F017         	goto	l414
  6684   002EE6                     l3163:
  6685   002EE6  80D8               	bsf	status,0,c
  6686   002EE8                     l414:
  6687   002EE8  0012               	return		;funcret
  6688   002EEA                     __end_of___fleq:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function ___fldiv *****************
  6692 ;; Defined at:
  6693 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  b               4    0[COMRAM] unsigned char 
  6696 ;;  a               4    4[COMRAM] unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  grs             4   19[COMRAM] unsigned long 
  6699 ;;  rem             4   12[COMRAM] unsigned long 
  6700 ;;  new_exp         2   17[COMRAM] short 
  6701 ;;  aexp            1   24[COMRAM] unsigned char 
  6702 ;;  bexp            1   23[COMRAM] unsigned char 
  6703 ;;  sign            1   16[COMRAM] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  4    0[COMRAM] unsigned char 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6713 ;;      Params:         8       0       0       0       0       0       0       0       0
  6714 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6715 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6716 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6717 ;;Total ram usage:       25 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_efgtoa
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text26
  6727   001B9C                     __ptext26:
  6728                           	callstack 0
  6729   001B9C                     ___fldiv:
  6730                           	callstack 26
  6731   001B9C  5004               	movf	(___fldiv@b+3)^0,w,c
  6732   001B9E  0B80               	andlw	128
  6733   001BA0  6E11               	movwf	___fldiv@sign^0,c
  6734   001BA2  5004               	movf	(___fldiv@b+3)^0,w,c
  6735   001BA4  2404               	addwf	(___fldiv@b+3)^0,w,c
  6736   001BA6  6E18               	movwf	___fldiv@bexp^0,c
  6737   001BA8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6738   001BAA  EFD9  F00D         	goto	u2461
  6739   001BAE  EFDB  F00D         	goto	u2460
  6740   001BB2                     u2461:
  6741   001BB2  EFDC  F00D         	goto	l2883
  6742   001BB6                     u2460:
  6743   001BB6  8018               	bsf	___fldiv@bexp^0,0,c
  6744   001BB8                     l2883:
  6745   001BB8  5018               	movf	___fldiv@bexp^0,w,c
  6746   001BBA  B4D8               	btfsc	status,2,c
  6747   001BBC  EFE2  F00D         	goto	u2471
  6748   001BC0  EFE4  F00D         	goto	u2470
  6749   001BC4                     u2471:
  6750   001BC4  EFF9  F00D         	goto	l2893
  6751   001BC8                     u2470:
  6752   001BC8  2818               	incf	___fldiv@bexp^0,w,c
  6753   001BCA  A4D8               	btfss	status,2,c
  6754   001BCC  EFEA  F00D         	goto	u2481
  6755   001BD0  EFEC  F00D         	goto	u2480
  6756   001BD4                     u2481:
  6757   001BD4  EFF4  F00D         	goto	l2889
  6758   001BD8                     u2480:
  6759   001BD8  0E00               	movlw	0
  6760   001BDA  6E01               	movwf	___fldiv@b^0,c
  6761   001BDC  0E00               	movlw	0
  6762   001BDE  6E02               	movwf	(___fldiv@b+1)^0,c
  6763   001BE0  0E00               	movlw	0
  6764   001BE2  6E03               	movwf	(___fldiv@b+2)^0,c
  6765   001BE4  0E00               	movlw	0
  6766   001BE6  6E04               	movwf	(___fldiv@b+3)^0,c
  6767   001BE8                     l2889:
  6768   001BE8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6769   001BEA  0E00               	movlw	0
  6770   001BEC  6E04               	movwf	(___fldiv@b+3)^0,c
  6771   001BEE  EF01  F00E         	goto	l2895
  6772   001BF2                     l2893:
  6773   001BF2  0E00               	movlw	0
  6774   001BF4  6E01               	movwf	___fldiv@b^0,c
  6775   001BF6  0E00               	movlw	0
  6776   001BF8  6E02               	movwf	(___fldiv@b+1)^0,c
  6777   001BFA  0E00               	movlw	0
  6778   001BFC  6E03               	movwf	(___fldiv@b+2)^0,c
  6779   001BFE  0E00               	movlw	0
  6780   001C00  6E04               	movwf	(___fldiv@b+3)^0,c
  6781   001C02                     l2895:
  6782   001C02  5008               	movf	(___fldiv@a+3)^0,w,c
  6783   001C04  0B80               	andlw	128
  6784   001C06  1A11               	xorwf	___fldiv@sign^0,f,c
  6785   001C08  5008               	movf	(___fldiv@a+3)^0,w,c
  6786   001C0A  2408               	addwf	(___fldiv@a+3)^0,w,c
  6787   001C0C  6E19               	movwf	___fldiv@aexp^0,c
  6788   001C0E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6789   001C10  EF0C  F00E         	goto	u2491
  6790   001C14  EF0E  F00E         	goto	u2490
  6791   001C18                     u2491:
  6792   001C18  EF0F  F00E         	goto	l2903
  6793   001C1C                     u2490:
  6794   001C1C  8019               	bsf	___fldiv@aexp^0,0,c
  6795   001C1E                     l2903:
  6796   001C1E  5019               	movf	___fldiv@aexp^0,w,c
  6797   001C20  B4D8               	btfsc	status,2,c
  6798   001C22  EF15  F00E         	goto	u2501
  6799   001C26  EF17  F00E         	goto	u2500
  6800   001C2A                     u2501:
  6801   001C2A  EF2C  F00E         	goto	l2913
  6802   001C2E                     u2500:
  6803   001C2E  2819               	incf	___fldiv@aexp^0,w,c
  6804   001C30  A4D8               	btfss	status,2,c
  6805   001C32  EF1D  F00E         	goto	u2511
  6806   001C36  EF1F  F00E         	goto	u2510
  6807   001C3A                     u2511:
  6808   001C3A  EF27  F00E         	goto	l2909
  6809   001C3E                     u2510:
  6810   001C3E  0E00               	movlw	0
  6811   001C40  6E05               	movwf	___fldiv@a^0,c
  6812   001C42  0E00               	movlw	0
  6813   001C44  6E06               	movwf	(___fldiv@a+1)^0,c
  6814   001C46  0E00               	movlw	0
  6815   001C48  6E07               	movwf	(___fldiv@a+2)^0,c
  6816   001C4A  0E00               	movlw	0
  6817   001C4C  6E08               	movwf	(___fldiv@a+3)^0,c
  6818   001C4E                     l2909:
  6819   001C4E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6820   001C50  0E00               	movlw	0
  6821   001C52  6E08               	movwf	(___fldiv@a+3)^0,c
  6822   001C54  EF34  F00E         	goto	l2915
  6823   001C58                     l2913:
  6824   001C58  0E00               	movlw	0
  6825   001C5A  6E05               	movwf	___fldiv@a^0,c
  6826   001C5C  0E00               	movlw	0
  6827   001C5E  6E06               	movwf	(___fldiv@a+1)^0,c
  6828   001C60  0E00               	movlw	0
  6829   001C62  6E07               	movwf	(___fldiv@a+2)^0,c
  6830   001C64  0E00               	movlw	0
  6831   001C66  6E08               	movwf	(___fldiv@a+3)^0,c
  6832   001C68                     l2915:
  6833   001C68  5005               	movf	___fldiv@a^0,w,c
  6834   001C6A  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6835   001C6C  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6836   001C6E  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6837   001C70  A4D8               	btfss	status,2,c
  6838   001C72  EF3D  F00E         	goto	u2521
  6839   001C76  EF3F  F00E         	goto	u2520
  6840   001C7A                     u2521:
  6841   001C7A  EF57  F00E         	goto	l2927
  6842   001C7E                     u2520:
  6843   001C7E  0E00               	movlw	0
  6844   001C80  6E01               	movwf	___fldiv@b^0,c
  6845   001C82  0E00               	movlw	0
  6846   001C84  6E02               	movwf	(___fldiv@b+1)^0,c
  6847   001C86  0E00               	movlw	0
  6848   001C88  6E03               	movwf	(___fldiv@b+2)^0,c
  6849   001C8A  0E00               	movlw	0
  6850   001C8C  6E04               	movwf	(___fldiv@b+3)^0,c
  6851   001C8E  0E80               	movlw	128
  6852   001C90  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6853   001C92  0E7F               	movlw	127
  6854   001C94  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6855   001C96                     l2921:
  6856   001C96  5011               	movf	___fldiv@sign^0,w,c
  6857   001C98  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6858   001C9A  C001  F001         	movff	___fldiv@b,?___fldiv
  6859   001C9E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6860   001CA2  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6861   001CA6  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6862   001CAA  EF9A  F00F         	goto	l737
  6863   001CAE                     l2927:
  6864   001CAE  5018               	movf	___fldiv@bexp^0,w,c
  6865   001CB0  A4D8               	btfss	status,2,c
  6866   001CB2  EF5D  F00E         	goto	u2531
  6867   001CB6  EF5F  F00E         	goto	u2530
  6868   001CBA                     u2531:
  6869   001CBA  EF69  F00E         	goto	l2935
  6870   001CBE                     u2530:
  6871   001CBE  0E00               	movlw	0
  6872   001CC0  6E01               	movwf	?___fldiv^0,c
  6873   001CC2  0E00               	movlw	0
  6874   001CC4  6E02               	movwf	(?___fldiv+1)^0,c
  6875   001CC6  0E00               	movlw	0
  6876   001CC8  6E03               	movwf	(?___fldiv+2)^0,c
  6877   001CCA  0E00               	movlw	0
  6878   001CCC  6E04               	movwf	(?___fldiv+3)^0,c
  6879   001CCE  EF9A  F00F         	goto	l737
  6880   001CD2                     l2935:
  6881   001CD2  5019               	movf	___fldiv@aexp^0,w,c
  6882   001CD4  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6883   001CD8  6A0A               	clrf	(??___fldiv+1)^0,c
  6884   001CDA  5E09               	subwf	??___fldiv^0,f,c
  6885   001CDC  0E00               	movlw	0
  6886   001CDE  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6887   001CE0  0E7F               	movlw	127
  6888   001CE2  2409               	addwf	??___fldiv^0,w,c
  6889   001CE4  6E12               	movwf	___fldiv@new_exp^0,c
  6890   001CE6  0E00               	movlw	0
  6891   001CE8  200A               	addwfc	(??___fldiv+1)^0,w,c
  6892   001CEA  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6893   001CEC  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6894   001CF0  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6895   001CF4  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6896   001CF8  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6897   001CFC  0E00               	movlw	0
  6898   001CFE  6E01               	movwf	___fldiv@b^0,c
  6899   001D00  0E00               	movlw	0
  6900   001D02  6E02               	movwf	(___fldiv@b+1)^0,c
  6901   001D04  0E00               	movlw	0
  6902   001D06  6E03               	movwf	(___fldiv@b+2)^0,c
  6903   001D08  0E00               	movlw	0
  6904   001D0A  6E04               	movwf	(___fldiv@b+3)^0,c
  6905   001D0C  0E00               	movlw	0
  6906   001D0E  6E14               	movwf	___fldiv@grs^0,c
  6907   001D10  0E00               	movlw	0
  6908   001D12  6E15               	movwf	(___fldiv@grs+1)^0,c
  6909   001D14  0E00               	movlw	0
  6910   001D16  6E16               	movwf	(___fldiv@grs+2)^0,c
  6911   001D18  0E00               	movlw	0
  6912   001D1A  6E17               	movwf	(___fldiv@grs+3)^0,c
  6913   001D1C  0E00               	movlw	0
  6914   001D1E  6E19               	movwf	___fldiv@aexp^0,c
  6915   001D20  EFCA  F00E         	goto	l739
  6916   001D24                     l2945:
  6917   001D24  5019               	movf	___fldiv@aexp^0,w,c
  6918   001D26  B4D8               	btfsc	status,2,c
  6919   001D28  EF98  F00E         	goto	u2541
  6920   001D2C  EF9A  F00E         	goto	u2540
  6921   001D30                     u2541:
  6922   001D30  EFB1  F00E         	goto	l2953
  6923   001D34                     u2540:
  6924   001D34  90D8               	bcf	status,0,c
  6925   001D36  360D               	rlcf	___fldiv@rem^0,f,c
  6926   001D38  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6927   001D3A  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6928   001D3C  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6929   001D3E  90D8               	bcf	status,0,c
  6930   001D40  3601               	rlcf	___fldiv@b^0,f,c
  6931   001D42  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6932   001D44  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6933   001D46  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6934   001D48  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6935   001D4A  EFA9  F00E         	goto	u2551
  6936   001D4E  EFAB  F00E         	goto	u2550
  6937   001D52                     u2551:
  6938   001D52  EFAC  F00E         	goto	l742
  6939   001D56                     u2550:
  6940   001D56  8001               	bsf	___fldiv@b^0,0,c
  6941   001D58                     l742:
  6942   001D58  90D8               	bcf	status,0,c
  6943   001D5A  3614               	rlcf	___fldiv@grs^0,f,c
  6944   001D5C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6945   001D5E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6946   001D60  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6947   001D62                     l2953:
  6948   001D62  5005               	movf	___fldiv@a^0,w,c
  6949   001D64  5C0D               	subwf	___fldiv@rem^0,w,c
  6950   001D66  5006               	movf	(___fldiv@a+1)^0,w,c
  6951   001D68  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6952   001D6A  5007               	movf	(___fldiv@a+2)^0,w,c
  6953   001D6C  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6954   001D6E  5008               	movf	(___fldiv@a+3)^0,w,c
  6955   001D70  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6956   001D72  A0D8               	btfss	status,0,c
  6957   001D74  EFBE  F00E         	goto	u2561
  6958   001D78  EFC0  F00E         	goto	u2560
  6959   001D7C                     u2561:
  6960   001D7C  EFC9  F00E         	goto	l2959
  6961   001D80                     u2560:
  6962   001D80  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6963   001D82  5005               	movf	___fldiv@a^0,w,c
  6964   001D84  5E0D               	subwf	___fldiv@rem^0,f,c
  6965   001D86  5006               	movf	(___fldiv@a+1)^0,w,c
  6966   001D88  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6967   001D8A  5007               	movf	(___fldiv@a+2)^0,w,c
  6968   001D8C  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6969   001D8E  5008               	movf	(___fldiv@a+3)^0,w,c
  6970   001D90  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6971   001D92                     l2959:
  6972   001D92  2A19               	incf	___fldiv@aexp^0,f,c
  6973   001D94                     l739:
  6974   001D94  0E19               	movlw	25
  6975   001D96  6419               	cpfsgt	___fldiv@aexp^0,c
  6976   001D98  EFD0  F00E         	goto	u2571
  6977   001D9C  EFD2  F00E         	goto	u2570
  6978   001DA0                     u2571:
  6979   001DA0  EF92  F00E         	goto	l2945
  6980   001DA4                     u2570:
  6981   001DA4  500D               	movf	___fldiv@rem^0,w,c
  6982   001DA6  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6983   001DA8  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6984   001DAA  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6985   001DAC  B4D8               	btfsc	status,2,c
  6986   001DAE  EFDB  F00E         	goto	u2581
  6987   001DB2  EFDD  F00E         	goto	u2580
  6988   001DB6                     u2581:
  6989   001DB6  EFF5  F00E         	goto	l2971
  6990   001DBA                     u2580:
  6991   001DBA  8014               	bsf	___fldiv@grs^0,0,c
  6992   001DBC  EFF5  F00E         	goto	l2971
  6993   001DC0                     l2965:
  6994   001DC0  90D8               	bcf	status,0,c
  6995   001DC2  3601               	rlcf	___fldiv@b^0,f,c
  6996   001DC4  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6997   001DC6  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6998   001DC8  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6999   001DCA  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7000   001DCC  EFEA  F00E         	goto	u2591
  7001   001DD0  EFEC  F00E         	goto	u2590
  7002   001DD4                     u2591:
  7003   001DD4  EFED  F00E         	goto	l748
  7004   001DD8                     u2590:
  7005   001DD8  8001               	bsf	___fldiv@b^0,0,c
  7006   001DDA                     l748:
  7007   001DDA  90D8               	bcf	status,0,c
  7008   001DDC  3614               	rlcf	___fldiv@grs^0,f,c
  7009   001DDE  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7010   001DE0  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7011   001DE2  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7012   001DE4  0612               	decf	___fldiv@new_exp^0,f,c
  7013   001DE6  A0D8               	btfss	status,0,c
  7014   001DE8  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7015   001DEA                     l2971:
  7016   001DEA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7017   001DEC  EFFA  F00E         	goto	u2601
  7018   001DF0  EFFC  F00E         	goto	u2600
  7019   001DF4                     u2601:
  7020   001DF4  EFE0  F00E         	goto	l2965
  7021   001DF8                     u2600:
  7022   001DF8  0E00               	movlw	0
  7023   001DFA  6E19               	movwf	___fldiv@aexp^0,c
  7024   001DFC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7025   001DFE  EF03  F00F         	goto	u2611
  7026   001E02  EF05  F00F         	goto	u2610
  7027   001E06                     u2611:
  7028   001E06  EF29  F00F         	goto	l750
  7029   001E0A                     u2610:
  7030   001E0A  0EFF               	movlw	255
  7031   001E0C  1414               	andwf	___fldiv@grs^0,w,c
  7032   001E0E  6E09               	movwf	??___fldiv^0,c
  7033   001E10  0EFF               	movlw	255
  7034   001E12  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7035   001E14  6E0A               	movwf	(??___fldiv+1)^0,c
  7036   001E16  0EFF               	movlw	255
  7037   001E18  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7038   001E1A  6E0B               	movwf	(??___fldiv+2)^0,c
  7039   001E1C  0E7F               	movlw	127
  7040   001E1E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7041   001E20  6E0C               	movwf	(??___fldiv+3)^0,c
  7042   001E22  5009               	movf	??___fldiv^0,w,c
  7043   001E24  100A               	iorwf	(??___fldiv+1)^0,w,c
  7044   001E26  100B               	iorwf	(??___fldiv+2)^0,w,c
  7045   001E28  100C               	iorwf	(??___fldiv+3)^0,w,c
  7046   001E2A  B4D8               	btfsc	status,2,c
  7047   001E2C  EF1A  F00F         	goto	u2621
  7048   001E30  EF1C  F00F         	goto	u2620
  7049   001E34                     u2621:
  7050   001E34  EF20  F00F         	goto	l751
  7051   001E38                     u2620:
  7052   001E38                     l2979:
  7053   001E38  0E01               	movlw	1
  7054   001E3A  6E19               	movwf	___fldiv@aexp^0,c
  7055   001E3C  EF29  F00F         	goto	l750
  7056   001E40                     l751:
  7057   001E40  A001               	btfss	___fldiv@b^0,0,c
  7058   001E42  EF25  F00F         	goto	u2631
  7059   001E46  EF27  F00F         	goto	u2630
  7060   001E4A                     u2631:
  7061   001E4A  EF29  F00F         	goto	l750
  7062   001E4E                     u2630:
  7063   001E4E  EF1C  F00F         	goto	l2979
  7064   001E52                     l750:
  7065   001E52  5019               	movf	___fldiv@aexp^0,w,c
  7066   001E54  B4D8               	btfsc	status,2,c
  7067   001E56  EF2F  F00F         	goto	u2641
  7068   001E5A  EF31  F00F         	goto	u2640
  7069   001E5E                     u2641:
  7070   001E5E  EF55  F00F         	goto	l2991
  7071   001E62                     u2640:
  7072   001E62  0E01               	movlw	1
  7073   001E64  2601               	addwf	___fldiv@b^0,f,c
  7074   001E66  0E00               	movlw	0
  7075   001E68  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7076   001E6A  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7077   001E6C  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7078   001E6E  A004               	btfss	(___fldiv@b+3)^0,0,c
  7079   001E70  EF3C  F00F         	goto	u2651
  7080   001E74  EF3E  F00F         	goto	u2650
  7081   001E78                     u2651:
  7082   001E78  EF55  F00F         	goto	l2991
  7083   001E7C                     u2650:
  7084   001E7C  C001  F009         	movff	___fldiv@b,??___fldiv
  7085   001E80  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7086   001E84  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7087   001E88  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7088   001E8C  340C               	rlcf	(??___fldiv+3)^0,w,c
  7089   001E8E  320C               	rrcf	(??___fldiv+3)^0,f,c
  7090   001E90  320B               	rrcf	(??___fldiv+2)^0,f,c
  7091   001E92  320A               	rrcf	(??___fldiv+1)^0,f,c
  7092   001E94  3209               	rrcf	??___fldiv^0,f,c
  7093   001E96  C009  F001         	movff	??___fldiv,___fldiv@b
  7094   001E9A  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7095   001E9E  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7096   001EA2  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7097   001EA6  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7098   001EA8  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7099   001EAA                     l2991:
  7100   001EAA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7101   001EAC  EF60  F00F         	goto	u2661
  7102   001EB0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7103   001EB2  E108               	bnz	u2660
  7104   001EB4  2812               	incf	___fldiv@new_exp^0,w,c
  7105   001EB6  A0D8               	btfss	status,0,c
  7106   001EB8  EF60  F00F         	goto	u2661
  7107   001EBC  EF62  F00F         	goto	u2660
  7108   001EC0                     u2661:
  7109   001EC0  EF6D  F00F         	goto	l2995
  7110   001EC4                     u2660:
  7111   001EC4  0E00               	movlw	0
  7112   001EC6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7113   001EC8  6812               	setf	___fldiv@new_exp^0,c
  7114   001ECA  0E00               	movlw	0
  7115   001ECC  6E01               	movwf	___fldiv@b^0,c
  7116   001ECE  0E00               	movlw	0
  7117   001ED0  6E02               	movwf	(___fldiv@b+1)^0,c
  7118   001ED2  0E00               	movlw	0
  7119   001ED4  6E03               	movwf	(___fldiv@b+2)^0,c
  7120   001ED6  0E00               	movlw	0
  7121   001ED8  6E04               	movwf	(___fldiv@b+3)^0,c
  7122   001EDA                     l2995:
  7123   001EDA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7124   001EDC  EF7A  F00F         	goto	u2670
  7125   001EE0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7126   001EE2  E106               	bnz	u2671
  7127   001EE4  0412               	decf	___fldiv@new_exp^0,w,c
  7128   001EE6  B0D8               	btfsc	status,0,c
  7129   001EE8  EF78  F00F         	goto	u2671
  7130   001EEC  EF7A  F00F         	goto	u2670
  7131   001EF0                     u2671:
  7132   001EF0  EF88  F00F         	goto	l2999
  7133   001EF4                     u2670:
  7134   001EF4  0E00               	movlw	0
  7135   001EF6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7136   001EF8  0E00               	movlw	0
  7137   001EFA  6E12               	movwf	___fldiv@new_exp^0,c
  7138   001EFC  0E00               	movlw	0
  7139   001EFE  6E01               	movwf	___fldiv@b^0,c
  7140   001F00  0E00               	movlw	0
  7141   001F02  6E02               	movwf	(___fldiv@b+1)^0,c
  7142   001F04  0E00               	movlw	0
  7143   001F06  6E03               	movwf	(___fldiv@b+2)^0,c
  7144   001F08  0E00               	movlw	0
  7145   001F0A  6E04               	movwf	(___fldiv@b+3)^0,c
  7146   001F0C  0E00               	movlw	0
  7147   001F0E  6E11               	movwf	___fldiv@sign^0,c
  7148   001F10                     l2999:
  7149   001F10  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7150   001F14  A018               	btfss	___fldiv@bexp^0,0,c
  7151   001F16  EF8F  F00F         	goto	u2681
  7152   001F1A  EF91  F00F         	goto	u2680
  7153   001F1E                     u2681:
  7154   001F1E  EF94  F00F         	goto	l3005
  7155   001F22                     u2680:
  7156   001F22  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7157   001F24  EF95  F00F         	goto	l3007
  7158   001F28                     l3005:
  7159   001F28  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7160   001F2A                     l3007:
  7161   001F2A  90D8               	bcf	status,0,c
  7162   001F2C  3018               	rrcf	___fldiv@bexp^0,w,c
  7163   001F2E  6E04               	movwf	(___fldiv@b+3)^0,c
  7164   001F30  EF4B  F00E         	goto	l2921
  7165   001F34                     l737:
  7166   001F34  0012               	return		;funcret
  7167   001F36                     __end_of___fldiv:
  7168                           	callstack 0
  7169                           
  7170 ;; *************** function _Lcd_Write_String *****************
  7171 ;; Defined at:
  7172 ;;		line 104 in file "lcd.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  a               2    4[COMRAM] PTR const unsigned char 
  7175 ;;		 -> buffer(20), STR_4(5), STR_3(17), STR_2(11), 
  7176 ;;		 -> STR_1(14), 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  i               2    8[COMRAM] int 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      void 
  7181 ;; Registers used:
  7182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7188 ;;      Params:         2       0       0       0       0       0       0       0       0
  7189 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7190 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7191 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7192 ;;Total ram usage:        6 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 2
  7195 ;; This function calls:
  7196 ;;		_Lcd_Write_Char
  7197 ;; This function is called by:
  7198 ;;		_main
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text27
  7203   00301C                     __ptext27:
  7204                           	callstack 0
  7205   00301C                     _Lcd_Write_String:
  7206                           	callstack 28
  7207   00301C                     
  7208                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  7209   00301C  0E00               	movlw	0
  7210   00301E  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7211   003020  0E00               	movlw	0
  7212   003022  6E09               	movwf	Lcd_Write_String@i^0,c
  7213   003024  EF2E  F018         	goto	l3995
  7214   003028                     l3991:
  7215                           
  7216                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  7217   003028  5009               	movf	Lcd_Write_String@i^0,w,c
  7218   00302A  2405               	addwf	Lcd_Write_String@a^0,w,c
  7219   00302C  6E07               	movwf	??_Lcd_Write_String^0,c
  7220   00302E  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7221   003030  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7222   003032  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7223   003034  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7224   003038  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7225   00303C  6AF8               	clrf	tblptru,c
  7226   00303E  0E07               	movlw	(high __ramtop+-1)
  7227   003040  64F7               	cpfsgt	tblptrh,c
  7228   003042  D003               	bra	u3987
  7229   003044  0008               	tblrd		*
  7230   003046  50F5               	movf	tablat,w,c
  7231   003048  D005               	bra	u3980
  7232   00304A                     u3987:
  7233   00304A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7234   00304E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7235   003052  50E7               	movf	indf1,w,c
  7236   003054                     u3980:
  7237   003054  EC58  F01A         	call	_Lcd_Write_Char
  7238   003058  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7239   00305A  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7240   00305C                     l3995:
  7241   00305C  5009               	movf	Lcd_Write_String@i^0,w,c
  7242   00305E  2405               	addwf	Lcd_Write_String@a^0,w,c
  7243   003060  6E07               	movwf	??_Lcd_Write_String^0,c
  7244   003062  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7245   003064  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7246   003066  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7247   003068  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7248   00306C  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7249   003070  6AF8               	clrf	tblptru,c
  7250   003072  0E07               	movlw	(high __ramtop+-1)
  7251   003074  64F7               	cpfsgt	tblptrh,c
  7252   003076  D003               	bra	u3997
  7253   003078  0008               	tblrd		*
  7254   00307A  50F5               	movf	tablat,w,c
  7255   00307C  D005               	bra	u3990
  7256   00307E                     u3997:
  7257   00307E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7258   003082  CFF7 FFE2          	movff	tblptrh,fsr1h
  7259   003086  50E7               	movf	indf1,w,c
  7260   003088                     u3990:
  7261   003088  0900               	iorlw	0
  7262   00308A  A4D8               	btfss	status,2,c
  7263   00308C  EF4A  F018         	goto	u4001
  7264   003090  EF4C  F018         	goto	u4000
  7265   003094                     u4001:
  7266   003094  EF14  F018         	goto	l3991
  7267   003098                     u4000:
  7268   003098  0012               	return		;funcret
  7269   00309A                     __end_of_Lcd_Write_String:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _Lcd_Shift_Right *****************
  7273 ;; Defined at:
  7274 ;;		line 111 in file "lcd.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 2
  7295 ;; This function calls:
  7296 ;;		_Lcd_Cmd
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text28
  7303   00352A                     __ptext28:
  7304                           	callstack 0
  7305   00352A                     _Lcd_Shift_Right:
  7306                           	callstack 28
  7307   00352A                     
  7308                           ;lcd.c: 113:     Lcd_Cmd(0x01);
  7309   00352A  0E01               	movlw	1
  7310   00352C  EC85  F01A         	call	_Lcd_Cmd
  7311                           
  7312                           ;lcd.c: 114:     Lcd_Cmd(0x0C);
  7313   003530  0E0C               	movlw	12
  7314   003532  EC85  F01A         	call	_Lcd_Cmd
  7315   003536  0012               	return		;funcret
  7316   003538                     __end_of_Lcd_Shift_Right:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function _Lcd_Shift_Left *****************
  7320 ;; Defined at:
  7321 ;;		line 117 in file "lcd.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7339 ;;Total ram usage:        0 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; Hardware stack levels required when called: 2
  7342 ;; This function calls:
  7343 ;;		_Lcd_Cmd
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text29
  7350   003538                     __ptext29:
  7351                           	callstack 0
  7352   003538                     _Lcd_Shift_Left:
  7353                           	callstack 28
  7354   003538                     
  7355                           ;lcd.c: 119:     Lcd_Cmd(0x01);
  7356   003538  0E01               	movlw	1
  7357   00353A  EC85  F01A         	call	_Lcd_Cmd
  7358                           
  7359                           ;lcd.c: 120:     Lcd_Cmd(0x08);
  7360   00353E  0E08               	movlw	8
  7361   003540  EC85  F01A         	call	_Lcd_Cmd
  7362   003544  0012               	return		;funcret
  7363   003546                     __end_of_Lcd_Shift_Left:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _Lcd_Set_Cursor *****************
  7367 ;; Defined at:
  7368 ;;		line 26 in file "lcd.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  a               1    wreg     unsigned char 
  7371 ;;  b               1    3[COMRAM] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  a               1    4[COMRAM] unsigned char 
  7374 ;;  temp            1    7[COMRAM] unsigned char 
  7375 ;;  y               1    6[COMRAM] unsigned char 
  7376 ;;  z               1    5[COMRAM] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7386 ;;      Params:         1       0       0       0       0       0       0       0       0
  7387 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7389 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7390 ;;Total ram usage:        5 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 2
  7393 ;; This function calls:
  7394 ;;		_Lcd_Cmd
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text30
  7401   002CC4                     __ptext30:
  7402                           	callstack 0
  7403   002CC4                     _Lcd_Set_Cursor:
  7404                           	callstack 28
  7405                           
  7406                           ;incstack = 0
  7407                           ;Lcd_Set_Cursor@a stored from wreg
  7408   002CC4  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7409   002CC6                     
  7410                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  7411   002CC6  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7412   002CC8  A4D8               	btfss	status,2,c
  7413   002CCA  EF69  F016         	goto	u3941
  7414   002CCE  EF6B  F016         	goto	u3940
  7415   002CD2                     u3941:
  7416   002CD2  EF7C  F016         	goto	l3965
  7417   002CD6                     u3940:
  7418   002CD6                     
  7419                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  7420   002CD6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7421   002CD8  0F7F               	addlw	127
  7422   002CDA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7423                           
  7424                           ;lcd.c: 32:         z = temp>>4;
  7425   002CDC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7426   002CDE  0B0F               	andlw	15
  7427   002CE0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7428                           
  7429                           ;lcd.c: 33:         y = temp & 0x0F;
  7430   002CE2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7431   002CE4  0B0F               	andlw	15
  7432   002CE6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7433   002CE8                     
  7434                           ;lcd.c: 34:         Lcd_Cmd(z);
  7435   002CE8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7436   002CEA  EC85  F01A         	call	_Lcd_Cmd
  7437   002CEE                     
  7438                           ;lcd.c: 35:         Lcd_Cmd(y);
  7439   002CEE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7440   002CF0  EC85  F01A         	call	_Lcd_Cmd
  7441                           
  7442                           ;lcd.c: 36:     }
  7443   002CF4  EFCA  F016         	goto	l93
  7444   002CF8                     l3965:
  7445   002CF8  0E02               	movlw	2
  7446   002CFA  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7447   002CFC  A4D8               	btfss	status,2,c
  7448   002CFE  EF83  F016         	goto	u3951
  7449   002D02  EF85  F016         	goto	u3950
  7450   002D06                     u3951:
  7451   002D06  EF96  F016         	goto	l3973
  7452   002D0A                     u3950:
  7453   002D0A                     
  7454                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7455   002D0A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7456   002D0C  0FBF               	addlw	191
  7457   002D0E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7458                           
  7459                           ;lcd.c: 40:         z = temp>>4;
  7460   002D10  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7461   002D12  0B0F               	andlw	15
  7462   002D14  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7463                           
  7464                           ;lcd.c: 41:         y = temp & 0x0F;
  7465   002D16  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7466   002D18  0B0F               	andlw	15
  7467   002D1A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7468   002D1C                     
  7469                           ;lcd.c: 42:         Lcd_Cmd(z);
  7470   002D1C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7471   002D1E  EC85  F01A         	call	_Lcd_Cmd
  7472   002D22                     
  7473                           ;lcd.c: 43:         Lcd_Cmd(y);
  7474   002D22  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7475   002D24  EC85  F01A         	call	_Lcd_Cmd
  7476                           
  7477                           ;lcd.c: 44:     }
  7478   002D28  EFCA  F016         	goto	l93
  7479   002D2C                     l3973:
  7480   002D2C  0E03               	movlw	3
  7481   002D2E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7482   002D30  A4D8               	btfss	status,2,c
  7483   002D32  EF9D  F016         	goto	u3961
  7484   002D36  EF9F  F016         	goto	u3960
  7485   002D3A                     u3961:
  7486   002D3A  EFB0  F016         	goto	l3981
  7487   002D3E                     u3960:
  7488   002D3E                     
  7489                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7490   002D3E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7491   002D40  0F93               	addlw	147
  7492   002D42  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7493                           
  7494                           ;lcd.c: 48:         z = temp>>4;
  7495   002D44  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7496   002D46  0B0F               	andlw	15
  7497   002D48  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7498                           
  7499                           ;lcd.c: 49:         y = temp & 0x0F;
  7500   002D4A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7501   002D4C  0B0F               	andlw	15
  7502   002D4E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7503   002D50                     
  7504                           ;lcd.c: 50:         Lcd_Cmd(z);
  7505   002D50  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7506   002D52  EC85  F01A         	call	_Lcd_Cmd
  7507   002D56                     
  7508                           ;lcd.c: 51:         Lcd_Cmd(y);
  7509   002D56  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7510   002D58  EC85  F01A         	call	_Lcd_Cmd
  7511                           
  7512                           ;lcd.c: 52:     }
  7513   002D5C  EFCA  F016         	goto	l93
  7514   002D60                     l3981:
  7515   002D60  0E04               	movlw	4
  7516   002D62  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7517   002D64  A4D8               	btfss	status,2,c
  7518   002D66  EFB7  F016         	goto	u3971
  7519   002D6A  EFB9  F016         	goto	u3970
  7520   002D6E                     u3971:
  7521   002D6E  EFCA  F016         	goto	l89
  7522   002D72                     u3970:
  7523   002D72                     
  7524                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7525   002D72  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7526   002D74  0FD3               	addlw	211
  7527   002D76  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7528                           
  7529                           ;lcd.c: 56:         z = temp>>4;
  7530   002D78  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7531   002D7A  0B0F               	andlw	15
  7532   002D7C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7533                           
  7534                           ;lcd.c: 57:         y = temp & 0x0F;
  7535   002D7E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7536   002D80  0B0F               	andlw	15
  7537   002D82  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7538   002D84                     
  7539                           ;lcd.c: 58:         Lcd_Cmd(z);
  7540   002D84  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7541   002D86  EC85  F01A         	call	_Lcd_Cmd
  7542   002D8A                     
  7543                           ;lcd.c: 59:         Lcd_Cmd(y);
  7544   002D8A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7545   002D8C  EC85  F01A         	call	_Lcd_Cmd
  7546   002D90  EFCA  F016         	goto	l93
  7547   002D94                     l89:
  7548   002D94                     l93:
  7549   002D94  0012               	return		;funcret
  7550   002D96                     __end_of_Lcd_Set_Cursor:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _Lcd_NoBlink *****************
  7554 ;; Defined at:
  7555 ;;		line 129 in file "lcd.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 2
  7576 ;; This function calls:
  7577 ;;		_Lcd_Cmd
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text31
  7584   003546                     __ptext31:
  7585                           	callstack 0
  7586   003546                     _Lcd_NoBlink:
  7587                           	callstack 28
  7588   003546                     
  7589                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  7590   003546  0E00               	movlw	0
  7591   003548  EC85  F01A         	call	_Lcd_Cmd
  7592                           
  7593                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  7594   00354C  0E0C               	movlw	12
  7595   00354E  EC85  F01A         	call	_Lcd_Cmd
  7596   003552  0012               	return		;funcret
  7597   003554                     __end_of_Lcd_NoBlink:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function _Lcd_Init *****************
  7601 ;; Defined at:
  7602 ;;		line 63 in file "lcd.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7618 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7619 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7620 ;;Total ram usage:        2 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 3
  7623 ;; This function calls:
  7624 ;;		_Lcd_Clear
  7625 ;;		_Lcd_Cmd
  7626 ;;		_Lcd_Port
  7627 ;; This function is called by:
  7628 ;;		_main
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text32
  7633   002F90                     __ptext32:
  7634                           	callstack 0
  7635   002F90                     _Lcd_Init:
  7636                           	callstack 27
  7637   002F90                     
  7638                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7639   002F90  9495               	bcf	149,2,c	;volatile
  7640                           
  7641                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7642   002F92  9695               	bcf	149,3,c	;volatile
  7643                           
  7644                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7645   002F94  9895               	bcf	149,4,c	;volatile
  7646                           
  7647                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7648   002F96  9A95               	bcf	149,5,c	;volatile
  7649                           
  7650                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7651   002F98  9C95               	bcf	149,6,c	;volatile
  7652                           
  7653                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7654   002F9A  9E95               	bcf	149,7,c	;volatile
  7655   002F9C                     
  7656                           ;lcd.c: 71:     Lcd_Port(0x00);
  7657   002F9C  0E00               	movlw	0
  7658   002F9E  EC1F  F019         	call	_Lcd_Port
  7659   002FA2                     
  7660                           ;lcd.c: 72:     _delay((unsigned long)((20)*(48000000/4000.0)));
  7661   002FA2  0E02               	movlw	2
  7662   002FA4  6E05               	movwf	(??_Lcd_Init+1)^0,c
  7663   002FA6  0E38               	movlw	56
  7664   002FA8  6E04               	movwf	??_Lcd_Init^0,c
  7665   002FAA  0EAD               	movlw	173
  7666   002FAC                     u4697:
  7667   002FAC  2EE8               	decfsz	wreg,f,c
  7668   002FAE  D7FE               	bra	u4697
  7669   002FB0  2E04               	decfsz	??_Lcd_Init^0,f,c
  7670   002FB2  D7FC               	bra	u4697
  7671   002FB4  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  7672   002FB6  D7FA               	bra	u4697
  7673   002FB8  0000               	nop	
  7674   002FBA                     
  7675                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7676   002FBA  0E03               	movlw	3
  7677   002FBC  EC85  F01A         	call	_Lcd_Cmd
  7678   002FC0                     
  7679                           ;lcd.c: 74:     _delay((unsigned long)((5)*(48000000/4000.0)));
  7680   002FC0  0E4E               	movlw	78
  7681   002FC2  6E04               	movwf	??_Lcd_Init^0,c
  7682   002FC4  0EEB               	movlw	235
  7683   002FC6                     u4707:
  7684   002FC6  2EE8               	decfsz	wreg,f,c
  7685   002FC8  D7FE               	bra	u4707
  7686   002FCA  2E04               	decfsz	??_Lcd_Init^0,f,c
  7687   002FCC  D7FC               	bra	u4707
  7688   002FCE  0000               	nop	
  7689   002FD0                     
  7690                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7691   002FD0  0E03               	movlw	3
  7692   002FD2  EC85  F01A         	call	_Lcd_Cmd
  7693   002FD6                     
  7694                           ;lcd.c: 76:     _delay((unsigned long)((11)*(48000000/4000.0)));
  7695   002FD6  0EAC               	movlw	172
  7696   002FD8  6E04               	movwf	??_Lcd_Init^0,c
  7697   002FDA  0E6C               	movlw	108
  7698   002FDC                     u4717:
  7699   002FDC  2EE8               	decfsz	wreg,f,c
  7700   002FDE  D7FE               	bra	u4717
  7701   002FE0  2E04               	decfsz	??_Lcd_Init^0,f,c
  7702   002FE2  D7FC               	bra	u4717
  7703   002FE4  D000               	nop2	
  7704   002FE6                     
  7705                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7706   002FE6  0E03               	movlw	3
  7707   002FE8  EC85  F01A         	call	_Lcd_Cmd
  7708   002FEC                     
  7709                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7710   002FEC  0E02               	movlw	2
  7711   002FEE  EC85  F01A         	call	_Lcd_Cmd
  7712   002FF2                     
  7713                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7714   002FF2  0E02               	movlw	2
  7715   002FF4  EC85  F01A         	call	_Lcd_Cmd
  7716   002FF8                     
  7717                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7718   002FF8  0E08               	movlw	8
  7719   002FFA  EC85  F01A         	call	_Lcd_Cmd
  7720   002FFE                     
  7721                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7722   002FFE  0E00               	movlw	0
  7723   003000  EC85  F01A         	call	_Lcd_Cmd
  7724   003004                     
  7725                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7726   003004  0E0C               	movlw	12
  7727   003006  EC85  F01A         	call	_Lcd_Cmd
  7728   00300A                     
  7729                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7730   00300A  0E00               	movlw	0
  7731   00300C  EC85  F01A         	call	_Lcd_Cmd
  7732   003010                     
  7733                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7734   003010  0E06               	movlw	6
  7735   003012  EC85  F01A         	call	_Lcd_Cmd
  7736   003016                     
  7737                           ;lcd.c: 85:     Lcd_Clear();
  7738   003016  ECAA  F01A         	call	_Lcd_Clear	;wreg free
  7739   00301A  0012               	return		;funcret
  7740   00301C                     __end_of_Lcd_Init:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _Lcd_Clear *****************
  7744 ;; Defined at:
  7745 ;;		line 20 in file "lcd.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 2
  7766 ;; This function calls:
  7767 ;;		_Lcd_Cmd
  7768 ;; This function is called by:
  7769 ;;		_main
  7770 ;;		_Lcd_Init
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text33
  7775   003554                     __ptext33:
  7776                           	callstack 0
  7777   003554                     _Lcd_Clear:
  7778                           	callstack 27
  7779   003554                     
  7780                           ;lcd.c: 22:     Lcd_Cmd(0);
  7781   003554  0E00               	movlw	0
  7782   003556  EC85  F01A         	call	_Lcd_Cmd
  7783                           
  7784                           ;lcd.c: 23:     Lcd_Cmd(1);
  7785   00355A  0E01               	movlw	1
  7786   00355C  EC85  F01A         	call	_Lcd_Cmd
  7787   003560  0012               	return		;funcret
  7788   003562                     __end_of_Lcd_Clear:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function _Lcd_CGRAM_Init *****************
  7792 ;; Defined at:
  7793 ;;		line 175 in file "lcd.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; Hardware stack levels required when called: 2
  7814 ;; This function calls:
  7815 ;;		_Lcd_Cmd
  7816 ;; This function is called by:
  7817 ;;		_main
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text34
  7822   003562                     __ptext34:
  7823                           	callstack 0
  7824   003562                     _Lcd_CGRAM_Init:
  7825                           	callstack 28
  7826   003562                     
  7827                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  7828   003562  0E04               	movlw	4
  7829   003564  EC85  F01A         	call	_Lcd_Cmd
  7830                           
  7831                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  7832   003568  0E00               	movlw	0
  7833   00356A  EC85  F01A         	call	_Lcd_Cmd
  7834   00356E  0012               	return		;funcret
  7835   003570                     __end_of_Lcd_CGRAM_Init:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  7839 ;; Defined at:
  7840 ;;		line 136 in file "lcd.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  add             1    wreg     unsigned char 
  7843 ;;  chardata        1    4[COMRAM] PTR const unsigned char 
  7844 ;;		 -> figura_2(8), figura_1(8), 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  add             1    7[COMRAM] unsigned char 
  7847 ;;  i               1   15[COMRAM] unsigned char 
  7848 ;;  i               1   14[COMRAM] unsigned char 
  7849 ;;  i               1   13[COMRAM] unsigned char 
  7850 ;;  i               1   12[COMRAM] unsigned char 
  7851 ;;  i               1   11[COMRAM] unsigned char 
  7852 ;;  i               1   10[COMRAM] unsigned char 
  7853 ;;  i               1    9[COMRAM] unsigned char 
  7854 ;;  i               1    8[COMRAM] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7864 ;;      Params:         1       0       0       0       0       0       0       0       0
  7865 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7866 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7867 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:       12 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 2
  7871 ;; This function calls:
  7872 ;;		_Lcd_Write_Char
  7873 ;; This function is called by:
  7874 ;;		_main
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text35
  7879   00269A                     __ptext35:
  7880                           	callstack 0
  7881   00269A                     _Lcd_CGRAM_CreateChar:
  7882                           	callstack 28
  7883                           
  7884                           ;incstack = 0
  7885                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  7886   00269A  6E08               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  7887   00269C                     
  7888                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  7889   00269C  EF1E  F014         	goto	l3949
  7890   0026A0                     l3851:
  7891                           
  7892                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  7893   0026A0  0E00               	movlw	0
  7894   0026A2  6E09               	movwf	Lcd_CGRAM_CreateChar@i^0,c
  7895   0026A4                     l3857:
  7896                           
  7897                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  7898   0026A4  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  7899   0026A6  2409               	addwf	Lcd_CGRAM_CreateChar@i^0,w,c
  7900   0026A8  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  7901   0026AA  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  7902   0026AE                     	if	1	;There is more than 1 active tblptr byte
  7903   0026AE  0E08               	movlw	high __smallconst
  7904   0026B0  6EF7               	movwf	tblptrh,c
  7905   0026B2                     	endif
  7906   0026B2                     	if	0	;tblptru may be non-zero
  7907   0026B2                     	endif
  7908   0026B2                     	if	0	;tblptru may be non-zero
  7909   0026B2                     	endif
  7910   0026B2  0008               	tblrd		*
  7911   0026B4  50F5               	movf	tablat,w,c
  7912   0026B6  EC58  F01A         	call	_Lcd_Write_Char
  7913   0026BA  2A09               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  7914   0026BC  0E07               	movlw	7
  7915   0026BE  6409               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  7916   0026C0  EF64  F013         	goto	u3861
  7917   0026C4  EF66  F013         	goto	u3860
  7918   0026C8                     u3861:
  7919   0026C8  EF52  F013         	goto	l3857
  7920   0026CC                     u3860:
  7921   0026CC  EF4B  F014         	goto	l146
  7922   0026D0                     l3863:
  7923                           
  7924                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  7925   0026D0  0E08               	movlw	8
  7926   0026D2  6E0A               	movwf	Lcd_CGRAM_CreateChar@i_272^0,c
  7927   0026D4                     l3869:
  7928                           
  7929                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  7930   0026D4  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  7931   0026D6  240A               	addwf	Lcd_CGRAM_CreateChar@i_272^0,w,c
  7932   0026D8  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  7933   0026DA  0EF8               	movlw	-8
  7934   0026DC  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  7935   0026DE  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  7936   0026E2                     	if	1	;There is more than 1 active tblptr byte
  7937   0026E2  0E08               	movlw	high __smallconst
  7938   0026E4  6EF7               	movwf	tblptrh,c
  7939   0026E6                     	endif
  7940   0026E6                     	if	0	;tblptru may be non-zero
  7941   0026E6                     	endif
  7942   0026E6                     	if	0	;tblptru may be non-zero
  7943   0026E6                     	endif
  7944   0026E6  0008               	tblrd		*
  7945   0026E8  50F5               	movf	tablat,w,c
  7946   0026EA  EC58  F01A         	call	_Lcd_Write_Char
  7947   0026EE  2A0A               	incf	Lcd_CGRAM_CreateChar@i_272^0,f,c
  7948   0026F0  0E0F               	movlw	15
  7949   0026F2  640A               	cpfsgt	Lcd_CGRAM_CreateChar@i_272^0,c
  7950   0026F4  EF7E  F013         	goto	u3871
  7951   0026F8  EF80  F013         	goto	u3870
  7952   0026FC                     u3871:
  7953   0026FC  EF6A  F013         	goto	l3869
  7954   002700                     u3870:
  7955   002700  EF4B  F014         	goto	l146
  7956   002704                     l3875:
  7957                           
  7958                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  7959   002704  0E10               	movlw	16
  7960   002706  6E0B               	movwf	Lcd_CGRAM_CreateChar@i_273^0,c
  7961   002708                     l3881:
  7962                           
  7963                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  7964   002708  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  7965   00270A  240B               	addwf	Lcd_CGRAM_CreateChar@i_273^0,w,c
  7966   00270C  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  7967   00270E  0EF0               	movlw	-16
  7968   002710  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  7969   002712  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  7970   002716                     	if	1	;There is more than 1 active tblptr byte
  7971   002716  0E08               	movlw	high __smallconst
  7972   002718  6EF7               	movwf	tblptrh,c
  7973   00271A                     	endif
  7974   00271A                     	if	0	;tblptru may be non-zero
  7975   00271A                     	endif
  7976   00271A                     	if	0	;tblptru may be non-zero
  7977   00271A                     	endif
  7978   00271A  0008               	tblrd		*
  7979   00271C  50F5               	movf	tablat,w,c
  7980   00271E  EC58  F01A         	call	_Lcd_Write_Char
  7981   002722  2A0B               	incf	Lcd_CGRAM_CreateChar@i_273^0,f,c
  7982   002724  0E17               	movlw	23
  7983   002726  640B               	cpfsgt	Lcd_CGRAM_CreateChar@i_273^0,c
  7984   002728  EF98  F013         	goto	u3881
  7985   00272C  EF9A  F013         	goto	u3880
  7986   002730                     u3881:
  7987   002730  EF84  F013         	goto	l3881
  7988   002734                     u3880:
  7989   002734  EF4B  F014         	goto	l146
  7990   002738                     l3887:
  7991                           
  7992                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  7993   002738  0E18               	movlw	24
  7994   00273A  6E0C               	movwf	Lcd_CGRAM_CreateChar@i_274^0,c
  7995   00273C                     l3893:
  7996                           
  7997                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  7998   00273C  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  7999   00273E  240C               	addwf	Lcd_CGRAM_CreateChar@i_274^0,w,c
  8000   002740  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8001   002742  0EE8               	movlw	-24
  8002   002744  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  8003   002746  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  8004   00274A                     	if	1	;There is more than 1 active tblptr byte
  8005   00274A  0E08               	movlw	high __smallconst
  8006   00274C  6EF7               	movwf	tblptrh,c
  8007   00274E                     	endif
  8008   00274E                     	if	0	;tblptru may be non-zero
  8009   00274E                     	endif
  8010   00274E                     	if	0	;tblptru may be non-zero
  8011   00274E                     	endif
  8012   00274E  0008               	tblrd		*
  8013   002750  50F5               	movf	tablat,w,c
  8014   002752  EC58  F01A         	call	_Lcd_Write_Char
  8015   002756  2A0C               	incf	Lcd_CGRAM_CreateChar@i_274^0,f,c
  8016   002758  0E1F               	movlw	31
  8017   00275A  640C               	cpfsgt	Lcd_CGRAM_CreateChar@i_274^0,c
  8018   00275C  EFB2  F013         	goto	u3891
  8019   002760  EFB4  F013         	goto	u3890
  8020   002764                     u3891:
  8021   002764  EF9E  F013         	goto	l3893
  8022   002768                     u3890:
  8023   002768  EF4B  F014         	goto	l146
  8024   00276C                     l3899:
  8025                           
  8026                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  8027   00276C  0E20               	movlw	32
  8028   00276E  6E0D               	movwf	Lcd_CGRAM_CreateChar@i_275^0,c
  8029   002770                     l3905:
  8030                           
  8031                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  8032   002770  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  8033   002772  240D               	addwf	Lcd_CGRAM_CreateChar@i_275^0,w,c
  8034   002774  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8035   002776  0EE0               	movlw	-32
  8036   002778  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  8037   00277A  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  8038   00277E                     	if	1	;There is more than 1 active tblptr byte
  8039   00277E  0E08               	movlw	high __smallconst
  8040   002780  6EF7               	movwf	tblptrh,c
  8041   002782                     	endif
  8042   002782                     	if	0	;tblptru may be non-zero
  8043   002782                     	endif
  8044   002782                     	if	0	;tblptru may be non-zero
  8045   002782                     	endif
  8046   002782  0008               	tblrd		*
  8047   002784  50F5               	movf	tablat,w,c
  8048   002786  EC58  F01A         	call	_Lcd_Write_Char
  8049   00278A  2A0D               	incf	Lcd_CGRAM_CreateChar@i_275^0,f,c
  8050   00278C  0E27               	movlw	39
  8051   00278E  640D               	cpfsgt	Lcd_CGRAM_CreateChar@i_275^0,c
  8052   002790  EFCC  F013         	goto	u3901
  8053   002794  EFCE  F013         	goto	u3900
  8054   002798                     u3901:
  8055   002798  EFB8  F013         	goto	l3905
  8056   00279C                     u3900:
  8057   00279C  EF4B  F014         	goto	l146
  8058   0027A0                     l3911:
  8059                           
  8060                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  8061   0027A0  0E28               	movlw	40
  8062   0027A2  6E0E               	movwf	Lcd_CGRAM_CreateChar@i_276^0,c
  8063   0027A4                     l3917:
  8064                           
  8065                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  8066   0027A4  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  8067   0027A6  240E               	addwf	Lcd_CGRAM_CreateChar@i_276^0,w,c
  8068   0027A8  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8069   0027AA  0ED8               	movlw	-40
  8070   0027AC  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  8071   0027AE  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  8072   0027B2                     	if	1	;There is more than 1 active tblptr byte
  8073   0027B2  0E08               	movlw	high __smallconst
  8074   0027B4  6EF7               	movwf	tblptrh,c
  8075   0027B6                     	endif
  8076   0027B6                     	if	0	;tblptru may be non-zero
  8077   0027B6                     	endif
  8078   0027B6                     	if	0	;tblptru may be non-zero
  8079   0027B6                     	endif
  8080   0027B6  0008               	tblrd		*
  8081   0027B8  50F5               	movf	tablat,w,c
  8082   0027BA  EC58  F01A         	call	_Lcd_Write_Char
  8083   0027BE  2A0E               	incf	Lcd_CGRAM_CreateChar@i_276^0,f,c
  8084   0027C0  0E2F               	movlw	47
  8085   0027C2  640E               	cpfsgt	Lcd_CGRAM_CreateChar@i_276^0,c
  8086   0027C4  EFE6  F013         	goto	u3911
  8087   0027C8  EFE8  F013         	goto	u3910
  8088   0027CC                     u3911:
  8089   0027CC  EFD2  F013         	goto	l3917
  8090   0027D0                     u3910:
  8091   0027D0  EF4B  F014         	goto	l146
  8092   0027D4                     l3923:
  8093                           
  8094                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  8095   0027D4  0E30               	movlw	48
  8096   0027D6  6E0F               	movwf	Lcd_CGRAM_CreateChar@i_277^0,c
  8097   0027D8                     l3929:
  8098                           
  8099                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  8100   0027D8  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  8101   0027DA  240F               	addwf	Lcd_CGRAM_CreateChar@i_277^0,w,c
  8102   0027DC  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8103   0027DE  0ED0               	movlw	-48
  8104   0027E0  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  8105   0027E2  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  8106   0027E6                     	if	1	;There is more than 1 active tblptr byte
  8107   0027E6  0E08               	movlw	high __smallconst
  8108   0027E8  6EF7               	movwf	tblptrh,c
  8109   0027EA                     	endif
  8110   0027EA                     	if	0	;tblptru may be non-zero
  8111   0027EA                     	endif
  8112   0027EA                     	if	0	;tblptru may be non-zero
  8113   0027EA                     	endif
  8114   0027EA  0008               	tblrd		*
  8115   0027EC  50F5               	movf	tablat,w,c
  8116   0027EE  EC58  F01A         	call	_Lcd_Write_Char
  8117   0027F2  2A0F               	incf	Lcd_CGRAM_CreateChar@i_277^0,f,c
  8118   0027F4  0E37               	movlw	55
  8119   0027F6  640F               	cpfsgt	Lcd_CGRAM_CreateChar@i_277^0,c
  8120   0027F8  EF00  F014         	goto	u3921
  8121   0027FC  EF02  F014         	goto	u3920
  8122   002800                     u3921:
  8123   002800  EFEC  F013         	goto	l3929
  8124   002804                     u3920:
  8125   002804  EF4B  F014         	goto	l146
  8126   002808                     l3935:
  8127                           
  8128                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  8129   002808  0E38               	movlw	56
  8130   00280A  6E10               	movwf	Lcd_CGRAM_CreateChar@i_278^0,c
  8131   00280C                     l3941:
  8132                           
  8133                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  8134   00280C  5005               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  8135   00280E  2410               	addwf	Lcd_CGRAM_CreateChar@i_278^0,w,c
  8136   002810  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8137   002812  0EC8               	movlw	-56
  8138   002814  2606               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  8139   002816  C006  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  8140   00281A                     	if	1	;There is more than 1 active tblptr byte
  8141   00281A  0E08               	movlw	high __smallconst
  8142   00281C  6EF7               	movwf	tblptrh,c
  8143   00281E                     	endif
  8144   00281E                     	if	0	;tblptru may be non-zero
  8145   00281E                     	endif
  8146   00281E                     	if	0	;tblptru may be non-zero
  8147   00281E                     	endif
  8148   00281E  0008               	tblrd		*
  8149   002820  50F5               	movf	tablat,w,c
  8150   002822  EC58  F01A         	call	_Lcd_Write_Char
  8151   002826  2A10               	incf	Lcd_CGRAM_CreateChar@i_278^0,f,c
  8152   002828  0E3F               	movlw	63
  8153   00282A  6410               	cpfsgt	Lcd_CGRAM_CreateChar@i_278^0,c
  8154   00282C  EF1A  F014         	goto	u3931
  8155   002830  EF1C  F014         	goto	u3930
  8156   002834                     u3931:
  8157   002834  EF06  F014         	goto	l3941
  8158   002838                     u3930:
  8159   002838  EF4B  F014         	goto	l146
  8160   00283C                     l3949:
  8161   00283C  5008               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  8162   00283E  6E06               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  8163   002840  6A07               	clrf	(??_Lcd_CGRAM_CreateChar+1)^0,c
  8164                           
  8165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8166                           ; Switch size 1, requested type "simple"
  8167                           ; Number of cases is 1, Range of values is 0 to 0
  8168                           ; switch strategies available:
  8169                           ; Name         Instructions Cycles
  8170                           ; simple_byte            4     3 (average)
  8171                           ;	Chosen strategy is simple_byte
  8172   002842  5007               	movf	(??_Lcd_CGRAM_CreateChar+1)^0,w,c
  8173   002844  0A00               	xorlw	0	; case 0
  8174   002846  B4D8               	btfsc	status,2,c
  8175   002848  EF28  F014         	goto	l4915
  8176   00284C  EF4B  F014         	goto	l146
  8177   002850                     l4915:
  8178                           
  8179                           ; Switch size 1, requested type "simple"
  8180                           ; Number of cases is 8, Range of values is 0 to 7
  8181                           ; switch strategies available:
  8182                           ; Name         Instructions Cycles
  8183                           ; simple_byte           25    13 (average)
  8184                           ;	Chosen strategy is simple_byte
  8185   002850  5006               	movf	??_Lcd_CGRAM_CreateChar^0,w,c
  8186   002852  0A00               	xorlw	0	; case 0
  8187   002854  B4D8               	btfsc	status,2,c
  8188   002856  EF50  F013         	goto	l3851
  8189   00285A  0A01               	xorlw	1	; case 1
  8190   00285C  B4D8               	btfsc	status,2,c
  8191   00285E  EF68  F013         	goto	l3863
  8192   002862  0A03               	xorlw	3	; case 2
  8193   002864  B4D8               	btfsc	status,2,c
  8194   002866  EF82  F013         	goto	l3875
  8195   00286A  0A01               	xorlw	1	; case 3
  8196   00286C  B4D8               	btfsc	status,2,c
  8197   00286E  EF9C  F013         	goto	l3887
  8198   002872  0A07               	xorlw	7	; case 4
  8199   002874  B4D8               	btfsc	status,2,c
  8200   002876  EFB6  F013         	goto	l3899
  8201   00287A  0A01               	xorlw	1	; case 5
  8202   00287C  B4D8               	btfsc	status,2,c
  8203   00287E  EFD0  F013         	goto	l3911
  8204   002882  0A03               	xorlw	3	; case 6
  8205   002884  B4D8               	btfsc	status,2,c
  8206   002886  EFEA  F013         	goto	l3923
  8207   00288A  0A01               	xorlw	1	; case 7
  8208   00288C  B4D8               	btfsc	status,2,c
  8209   00288E  EF04  F014         	goto	l3935
  8210   002892  EF4B  F014         	goto	l146
  8211   002896                     l146:
  8212   002896  0012               	return		;funcret
  8213   002898                     __end_of_Lcd_CGRAM_CreateChar:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function _Lcd_Write_Char *****************
  8217 ;; Defined at:
  8218 ;;		line 88 in file "lcd.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  a               1    wreg     unsigned char 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;  a               1    3[COMRAM] unsigned char 
  8223 ;;  y               1    2[COMRAM] unsigned char 
  8224 ;;  temp            1    1[COMRAM] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8237 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:        3 bytes
  8239 ;; Hardware stack levels used: 1
  8240 ;; Hardware stack levels required when called: 1
  8241 ;; This function calls:
  8242 ;;		_Lcd_Port
  8243 ;; This function is called by:
  8244 ;;		_main
  8245 ;;		_Lcd_Write_String
  8246 ;;		_Lcd_CGRAM_CreateChar
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text36
  8251   0034B0                     __ptext36:
  8252                           	callstack 0
  8253   0034B0                     _Lcd_Write_Char:
  8254                           	callstack 28
  8255                           
  8256                           ;incstack = 0
  8257                           ;Lcd_Write_Char@a stored from wreg
  8258   0034B0  6E04               	movwf	Lcd_Write_Char@a^0,c
  8259   0034B2                     
  8260                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  8261   0034B2  5004               	movf	Lcd_Write_Char@a^0,w,c
  8262   0034B4  0B0F               	andlw	15
  8263   0034B6  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8264                           
  8265                           ;lcd.c: 92:     y = a&0xF0;
  8266   0034B8  5004               	movf	Lcd_Write_Char@a^0,w,c
  8267   0034BA  0BF0               	andlw	240
  8268   0034BC  6E03               	movwf	Lcd_Write_Char@y^0,c
  8269   0034BE                     
  8270                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  8271   0034BE  848C               	bsf	140,2,c	;volatile
  8272   0034C0                     
  8273                           ;lcd.c: 94:     Lcd_Port(y>>4);
  8274   0034C0  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8275   0034C2  0B0F               	andlw	15
  8276   0034C4  EC1F  F019         	call	_Lcd_Port
  8277   0034C8                     
  8278                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  8279   0034C8  868C               	bsf	140,3,c	;volatile
  8280   0034CA                     
  8281                           ;lcd.c: 96:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  8282   0034CA  0EA0               	movlw	160
  8283   0034CC                     u4727:
  8284   0034CC  2EE8               	decfsz	wreg,f,c
  8285   0034CE  D7FE               	bra	u4727
  8286   0034D0                     
  8287                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  8288   0034D0  968C               	bcf	140,3,c	;volatile
  8289   0034D2                     
  8290                           ;lcd.c: 98:     Lcd_Port(temp);
  8291   0034D2  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8292   0034D4  EC1F  F019         	call	_Lcd_Port
  8293   0034D8                     
  8294                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  8295   0034D8  868C               	bsf	140,3,c	;volatile
  8296   0034DA                     
  8297                           ;lcd.c: 100:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  8298   0034DA  0EA0               	movlw	160
  8299   0034DC                     u4737:
  8300   0034DC  2EE8               	decfsz	wreg,f,c
  8301   0034DE  D7FE               	bra	u4737
  8302   0034E0                     
  8303                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  8304   0034E0  968C               	bcf	140,3,c	;volatile
  8305   0034E2  0012               	return		;funcret
  8306   0034E4                     __end_of_Lcd_Write_Char:
  8307                           	callstack 0
  8308                           
  8309 ;; *************** function _Lcd_CGRAM_Close *****************
  8310 ;; Defined at:
  8311 ;;		line 181 in file "lcd.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 2
  8332 ;; This function calls:
  8333 ;;		_Lcd_Cmd
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text37
  8340   003570                     __ptext37:
  8341                           	callstack 0
  8342   003570                     _Lcd_CGRAM_Close:
  8343                           	callstack 28
  8344   003570                     
  8345                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  8346   003570  0E00               	movlw	0
  8347   003572  EC85  F01A         	call	_Lcd_Cmd
  8348                           
  8349                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  8350   003576  0E02               	movlw	2
  8351   003578  EC85  F01A         	call	_Lcd_Cmd
  8352   00357C  0012               	return		;funcret
  8353   00357E                     __end_of_Lcd_CGRAM_Close:
  8354                           	callstack 0
  8355                           
  8356 ;; *************** function _Lcd_Blink *****************
  8357 ;; Defined at:
  8358 ;;		line 123 in file "lcd.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; Hardware stack levels required when called: 2
  8379 ;; This function calls:
  8380 ;;		_Lcd_Cmd
  8381 ;; This function is called by:
  8382 ;;		_main
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text38
  8387   00357E                     __ptext38:
  8388                           	callstack 0
  8389   00357E                     _Lcd_Blink:
  8390                           	callstack 28
  8391   00357E                     
  8392                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  8393   00357E  0E00               	movlw	0
  8394   003580  EC85  F01A         	call	_Lcd_Cmd
  8395                           
  8396                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  8397   003584  0E0F               	movlw	15
  8398   003586  EC85  F01A         	call	_Lcd_Cmd
  8399   00358A  0012               	return		;funcret
  8400   00358C                     __end_of_Lcd_Blink:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _Lcd_Cmd *****************
  8404 ;; Defined at:
  8405 ;;		line 11 in file "lcd.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  a               1    wreg     unsigned char 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  a               1    2[COMRAM] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0
  8420 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8421 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8423 ;;Total ram usage:        2 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 1
  8426 ;; This function calls:
  8427 ;;		_Lcd_Port
  8428 ;; This function is called by:
  8429 ;;		_Lcd_Clear
  8430 ;;		_Lcd_Set_Cursor
  8431 ;;		_Lcd_Init
  8432 ;;		_Lcd_Shift_Right
  8433 ;;		_Lcd_Shift_Left
  8434 ;;		_Lcd_Blink
  8435 ;;		_Lcd_NoBlink
  8436 ;;		_Lcd_CGRAM_Init
  8437 ;;		_Lcd_CGRAM_Close
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text39
  8442   00350A                     __ptext39:
  8443                           	callstack 0
  8444   00350A                     _Lcd_Cmd:
  8445                           	callstack 28
  8446                           
  8447                           ;incstack = 0
  8448                           ;Lcd_Cmd@a stored from wreg
  8449   00350A  6E03               	movwf	Lcd_Cmd@a^0,c
  8450   00350C                     
  8451                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  8452   00350C  948C               	bcf	140,2,c	;volatile
  8453   00350E                     
  8454                           ;lcd.c: 14:     Lcd_Port(a);
  8455   00350E  5003               	movf	Lcd_Cmd@a^0,w,c
  8456   003510  EC1F  F019         	call	_Lcd_Port
  8457   003514                     
  8458                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  8459   003514  868C               	bsf	140,3,c	;volatile
  8460   003516                     
  8461                           ;lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
  8462   003516  0E3F               	movlw	63
  8463   003518  6E02               	movwf	??_Lcd_Cmd^0,c
  8464   00351A  0E55               	movlw	85
  8465   00351C                     u4747:
  8466   00351C  2EE8               	decfsz	wreg,f,c
  8467   00351E  D7FE               	bra	u4747
  8468   003520  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8469   003522  D7FC               	bra	u4747
  8470   003524  0000               	nop	
  8471   003526                     
  8472                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  8473   003526  968C               	bcf	140,3,c	;volatile
  8474   003528  0012               	return		;funcret
  8475   00352A                     __end_of_Lcd_Cmd:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _Lcd_Port *****************
  8479 ;; Defined at:
  8480 ;;		line 3 in file "lcd.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  a               1    wreg     unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  a               1    0[COMRAM] unsigned char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0
  8495 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8498 ;;Total ram usage:        1 bytes
  8499 ;; Hardware stack levels used: 1
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_Lcd_Cmd
  8504 ;;		_Lcd_Init
  8505 ;;		_Lcd_Write_Char
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text40
  8510   00323E                     __ptext40:
  8511                           	callstack 0
  8512   00323E                     _Lcd_Port:
  8513                           	callstack 28
  8514                           
  8515                           ;incstack = 0
  8516                           ;Lcd_Port@a stored from wreg
  8517   00323E  6E01               	movwf	Lcd_Port@a^0,c
  8518   003240                     
  8519                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  8520   003240  A001               	btfss	Lcd_Port@a^0,0,c
  8521   003242  EF25  F019         	goto	u3321
  8522   003246  EF27  F019         	goto	u3320
  8523   00324A                     u3321:
  8524   00324A  EF2A  F019         	goto	l62
  8525   00324E                     u3320:
  8526   00324E  888C               	bsf	140,4,c	;volatile
  8527   003250  EF2B  F019         	goto	l3369
  8528   003254                     l62:
  8529   003254  988C               	bcf	140,4,c	;volatile
  8530   003256                     l3369:
  8531                           
  8532                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  8533   003256  A201               	btfss	Lcd_Port@a^0,1,c
  8534   003258  EF30  F019         	goto	u3331
  8535   00325C  EF32  F019         	goto	u3330
  8536   003260                     u3331:
  8537   003260  EF35  F019         	goto	l66
  8538   003264                     u3330:
  8539   003264  8A8C               	bsf	140,5,c	;volatile
  8540   003266  EF36  F019         	goto	l3373
  8541   00326A                     l66:
  8542   00326A  9A8C               	bcf	140,5,c	;volatile
  8543   00326C                     l3373:
  8544                           
  8545                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  8546   00326C  A401               	btfss	Lcd_Port@a^0,2,c
  8547   00326E  EF3B  F019         	goto	u3341
  8548   003272  EF3D  F019         	goto	u3340
  8549   003276                     u3341:
  8550   003276  EF40  F019         	goto	l70
  8551   00327A                     u3340:
  8552   00327A  8C8C               	bsf	140,6,c	;volatile
  8553   00327C  EF41  F019         	goto	l3377
  8554   003280                     l70:
  8555   003280  9C8C               	bcf	140,6,c	;volatile
  8556   003282                     l3377:
  8557                           
  8558                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  8559   003282  A601               	btfss	Lcd_Port@a^0,3,c
  8560   003284  EF46  F019         	goto	u3351
  8561   003288  EF48  F019         	goto	u3350
  8562   00328C                     u3351:
  8563   00328C  EF4B  F019         	goto	l74
  8564   003290                     u3350:
  8565   003290  8E8C               	bsf	140,7,c	;volatile
  8566   003292  EF4C  F019         	goto	l77
  8567   003296                     l74:
  8568   003296  9E8C               	bcf	140,7,c	;volatile
  8569   003298                     l77:
  8570   003298  0012               	return		;funcret
  8571   00329A                     __end_of_Lcd_Port:
  8572                           	callstack 0
  8573                           
  8574                           	psect	rparam
  8575   000000                     
  8576                           	psect	config
  8577                           
  8578                           ;Config register CONFIG1L @ 0x300000
  8579                           ;	PLL Prescaler Selection bits
  8580                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  8581                           ;	System Clock Postscaler Selection bits
  8582                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8583                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8584                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  8585   300000                     	org	3145728
  8586   300000  21                 	db	33
  8587                           
  8588                           ;Config register CONFIG1H @ 0x300001
  8589                           ;	Oscillator Selection bits
  8590                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  8591                           ;	Fail-Safe Clock Monitor Enable bit
  8592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8593                           ;	Internal/External Oscillator Switchover bit
  8594                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8595   300001                     	org	3145729
  8596   300001  0E                 	db	14
  8597                           
  8598                           ;Config register CONFIG2L @ 0x300002
  8599                           ;	Power-up Timer Enable bit
  8600                           ;	PWRT = OFF, PWRT disabled
  8601                           ;	Brown-out Reset Enable bits
  8602                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8603                           ;	Brown-out Reset Voltage bits
  8604                           ;	BORV = 3, Minimum setting 2.05V
  8605                           ;	USB Voltage Regulator Enable bit
  8606                           ;	VREGEN = OFF, USB voltage regulator disabled
  8607   300002                     	org	3145730
  8608   300002  19                 	db	25
  8609                           
  8610                           ;Config register CONFIG2H @ 0x300003
  8611                           ;	Watchdog Timer Enable bit
  8612                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8613                           ;	Watchdog Timer Postscale Select bits
  8614                           ;	WDTPS = 32768, 1:32768
  8615   300003                     	org	3145731
  8616   300003  1E                 	db	30
  8617                           
  8618                           ; Padding undefined space
  8619   300004                     	org	3145732
  8620   300004  FF                 	db	255
  8621                           
  8622                           ;Config register CONFIG3H @ 0x300005
  8623                           ;	CCP2 MUX bit
  8624                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8625                           ;	PORTB A/D Enable bit
  8626                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8627                           ;	Low-Power Timer 1 Oscillator Enable bit
  8628                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8629                           ;	MCLR Pin Enable bit
  8630                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8631   300005                     	org	3145733
  8632   300005  81                 	db	129
  8633                           
  8634                           ;Config register CONFIG4L @ 0x300006
  8635                           ;	Stack Full/Underflow Reset Enable bit
  8636                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8637                           ;	Single-Supply ICSP Enable bit
  8638                           ;	LVP = OFF, Single-Supply ICSP disabled
  8639                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8640                           ;	ICPRT = OFF, ICPORT disabled
  8641                           ;	Extended Instruction Set Enable bit
  8642                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8643                           ;	Background Debugger Enable bit
  8644                           ;	DEBUG = 0x1, unprogrammed default
  8645   300006                     	org	3145734
  8646   300006  81                 	db	129
  8647                           
  8648                           ; Padding undefined space
  8649   300007                     	org	3145735
  8650   300007  FF                 	db	255
  8651                           
  8652                           ;Config register CONFIG5L @ 0x300008
  8653                           ;	Code Protection bit
  8654                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8655                           ;	Code Protection bit
  8656                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8657                           ;	Code Protection bit
  8658                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8659                           ;	Code Protection bit
  8660                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8661   300008                     	org	3145736
  8662   300008  0F                 	db	15
  8663                           
  8664                           ;Config register CONFIG5H @ 0x300009
  8665                           ;	Boot Block Code Protection bit
  8666                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8667                           ;	Data EEPROM Code Protection bit
  8668                           ;	CPD = OFF, Data EEPROM is not code-protected
  8669   300009                     	org	3145737
  8670   300009  C0                 	db	192
  8671                           
  8672                           ;Config register CONFIG6L @ 0x30000A
  8673                           ;	Write Protection bit
  8674                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8675                           ;	Write Protection bit
  8676                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8677                           ;	Write Protection bit
  8678                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8679                           ;	Write Protection bit
  8680                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8681   30000A                     	org	3145738
  8682   30000A  0F                 	db	15
  8683                           
  8684                           ;Config register CONFIG6H @ 0x30000B
  8685                           ;	Configuration Register Write Protection bit
  8686                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8687                           ;	Boot Block Write Protection bit
  8688                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8689                           ;	Data EEPROM Write Protection bit
  8690                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8691   30000B                     	org	3145739
  8692   30000B  E0                 	db	224
  8693                           
  8694                           ;Config register CONFIG7L @ 0x30000C
  8695                           ;	Table Read Protection bit
  8696                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8697                           ;	Table Read Protection bit
  8698                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8699                           ;	Table Read Protection bit
  8700                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8701                           ;	Table Read Protection bit
  8702                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8703   30000C                     	org	3145740
  8704   30000C  0F                 	db	15
  8705                           
  8706                           ;Config register CONFIG7H @ 0x30000D
  8707                           ;	Boot Block Table Read Protection bit
  8708                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8709   30000D                     	org	3145741
  8710   30000D  40                 	db	64
  8711                           tosu	equ	0xFFF
  8712                           tosh	equ	0xFFE
  8713                           tosl	equ	0xFFD
  8714                           stkptr	equ	0xFFC
  8715                           pclatu	equ	0xFFB
  8716                           pclath	equ	0xFFA
  8717                           pcl	equ	0xFF9
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           indf0	equ	0xFEF
  8725                           postinc0	equ	0xFEE
  8726                           postdec0	equ	0xFED
  8727                           preinc0	equ	0xFEC
  8728                           plusw0	equ	0xFEB
  8729                           fsr0h	equ	0xFEA
  8730                           fsr0l	equ	0xFE9
  8731                           wreg	equ	0xFE8
  8732                           indf1	equ	0xFE7
  8733                           postinc1	equ	0xFE6
  8734                           postdec1	equ	0xFE5
  8735                           preinc1	equ	0xFE4
  8736                           plusw1	equ	0xFE3
  8737                           fsr1h	equ	0xFE2
  8738                           fsr1l	equ	0xFE1
  8739                           bsr	equ	0xFE0
  8740                           indf2	equ	0xFDF
  8741                           postinc2	equ	0xFDE
  8742                           postdec2	equ	0xFDD
  8743                           preinc2	equ	0xFDC
  8744                           plusw2	equ	0xFDB
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    16
    Data        6
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      94
    BANK0           160     53      81
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[14]), STR_2(CODE[11]), STR_3(CODE[17]), 
		 -> STR_4(CODE[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S718$buffer	PTR unsigned char  size(2) Largest target is 0

    S718$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[8]), STR_6(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[8]), STR_6(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[8]), STR_6(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[8]), STR_6(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   32928
                                             79 COMRAM     4     4      0
                          _Lcd_Blink
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   28482
                                             66 COMRAM    13    13      0
                                             47 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   27798
                                             65 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   27292
                                             53 COMRAM    12     9      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     6      3    4129
                                             22 COMRAM     9     6      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   20481
                                             45 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     724
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1258
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              3 COMRAM     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                12    11      1    1072
                                              4 COMRAM    12    11      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Blink
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Shift_Left
     _Lcd_Cmd
   _Lcd_Shift_Right
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5E       1       98.9%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRll         2C      0       0      23        0.0%
BITBIGSFRlhh        2B      0       0      21        0.0%
BITBIGSFRlhl         8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      24        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 27 16:39:15 2024

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                             _t 00AD  
                           _v 005D                  ___fldiv@sign 0011                            l70 3280  
                          l62 3254                            l80 3528                            l74 3296  
                          l66 326A                            l83 3560                            l77 3298  
                          l93 2D94                            l96 301A                            l89 2D94  
                          l99 34E2           ___wmul@multiplicand 0003                           l111 3544  
                         l105 3098                           l114 358A                           l108 3536  
                         l117 3552                           l152 357C                           l146 2896  
                         l155 3508                           l420 2B7E                           l149 356E  
                         l414 2EE8                           l425 2BC4                           l700 15BA  
                         l452 2AC0                           l429 34AE                           l710 1678  
                         l709 168A                           l725 3384                           l653 310C  
                         l750 1E52                           l742 1D58                           l646 3104  
                         l751 1E40                           l663 323C                           l656 3234  
                         l737 1F34                           l833 3476                           l739 1D94  
                         l683 14A0                           l748 1DDA                           l692 1770  
                         l684 148E                           l860 318A                           l908 102E  
                         l773 1B9A                           l685 1454                           l941 2F86  
                         l927 28C2                           l776 1A2C                           l864 31D8  
                         l880 0A2A                           l769 1836                           l945 2F8E  
                         l937 29BA                           l929 28CA                           l786 1B5C  
                         l778 1AA4                           l962 222A                           l779 1A92  
                         l875 12B0                           l878 0BE4                           l985 33C4  
                         l995 2CC2                           _pad 3174                           wreg 0FE8  
                ___flmul@aexp 0012                  ___flmul@bexp 0013           __end_of_Lcd_NoBlink 3554  
                ___flmul@sign 000D                  ___flmul@temp 0018                  ___flmul@prod 0014  
       Lcd_CGRAM_CreateChar@i 0009                  ___fltol@exp1 000A                          l1002 2698  
                        l1005 25DC                          l1022 333E                          l1016 32EE  
                        l1034 2E3E                          l1042 3404                          l1051 343E  
                        l1045 3592                          l3001 1F14                          l3003 1F22  
                        l3005 1F28                          l3101 1A2A                          l3021 178E  
                        l3007 1F2A                          l3111 1A8A                          l3103 1A3C  
                        l3031 17D4                          l3023 179E                          l3015 1772  
                        l4001 352A                          l3121 1AF8                          l3105 1A4A  
                        l3041 1800                          l3033 17DA                          l3025 17AE  
                        l3017 177E                          l4003 3538                          l3131 1B60  
                        l3115 1AB4                          l3123 1AFC                          l3107 1A4E  
                        l3051 1856                          l3043 1810                          l3035 17E0  
                        l3027 17BE                          l3019 178C                          l3211 2A26  
                        l3203 29E6                          l3141 1B8A                          l3133 1B70  
                        l3125 1B16                          l3117 1AC0                          l3109 1A5C  
                        l3061 1896                          l3045 1820                          l3037 17EE  
                        l3029 17C4                          l3221 2A56                          l3213 2A34  
                        l3205 2A10                          l3151 2E40                          l3135 1B7E  
                        l3127 1B2A                          l3119 1ACE                          l3071 18E0  
                        l3063 18A2                          l3055 186A                          l3047 1826  
                        l3039 17F0                          l3231 2A80                          l3223 2A60  
                        l3207 2A12                          l3303 2C64                          l3161 2EE0  
                        l3153 2E6E                          l3137 1B80                          l3129 1B44  
                        l3081 1932                          l3073 18EC                          l3065 18BA  
                        l3057 1876                          l3049 1846                          l3145 3340  
                        l3233 2A90                          l3209 2A22                          l3305 2C76  
                        l3321 32BC                          l3241 309A                          l3163 2EE6  
                        l3155 2E7E                          l3171 2B00                          l3139 1B86  
                        l3091 19B0                          l3083 1942                          l3075 18FC  
                        l3067 18C6                          l3059 1880                          l3147 3350  
                        l3235 2AA0                          l3219 2A4C                          l3331 2512  
                        l3251 30D2                          l3243 30A2                          l3157 2EAC  
                        l3181 2B6C                          l3173 2B2E                          l3093 19E6  
                        l3085 195E                          l3077 1908                          l3069 18D2  
                        l2701 1382                          l3237 2AB0                          l3229 2A74  
                        l3309 2CBA                          l3333 2520                          l3341 2600  
                        l3325 2488                          l3317 329A                          l4301 08F0  
                        l3261 30FE                          l3253 30D8                          l3245 30B4  
                        l3159 2EBC                          l3183 2BBC                          l3175 2B3E  
                        l3167 2AC2                          l3095 19F4                          l3087 196A  
                        l3079 1918                          l3191 348E                          l2711 13BA  
                        l2703 1392                          l3343 263C                          l3327 24A8  
                        l3319 32A8                          l4311 0936                          l4303 08F4  
                        l3255 30EE                          l3247 30BC                          l3271 320A  
                        l3263 31DA                          l3185 2BC2                          l3177 2B4C  
                        l3169 2AF0                          l3097 1A12                          l3089 1986  
                        l3193 349E                          l2721 13CE                          l2713 13BE  
                        l2705 13A4                          l3345 2650                          l3337 2590  
                        l3329 24FE                          l4401 0D92                          l4313 093E  
                        l4305 091A                          l4321 0978                          l3257 30F6  
                        l3249 30C4                          l3273 3220                          l3265 31EC  
                        l3371 3264                          l3179 2B5E                          l3099 1A1C  
                        l2811 161C                          l2803 15F4                          l2731 13E2  
                        l2723 13D2                          l2715 13C2                          l2707 13B2  
                        l3291 2BC6                          l3347 2678                          l3339 25CC  
                        l2651 2DB6                          l4243 33C6                          l4251 3174  
                        l4411 0E5E                          l4403 0DB0                          l4331 09C2  
                        l4323 099E                          l4315 0952                          l4307 092C  
                        l3259 30F8                          l3275 3228                          l3267 31F4  
                        l3373 326C                          l3365 3240                          l2901 1C1C  
                        l3189 3478                          l2813 1624                          l2805 15FE  
                        l2821 1648                          l2741 13F6                          l2733 13E6  
                        l2725 13D6                          l2717 13C6                          l2709 13B6  
                        l2661 12B2                          l3197 29BC                          l3293 2BE6  
                        l3349 2688                          l2653 2DC0                          l4245 33D2  
                        l4261 31C8                          l4253 3182                          l4501 1248  
                        l4421 0F0E                          l4413 0E6E                          l4405 0DE4  
                        l4341 09F4                          l4325 09B0                          l4317 095C  
                        l4309 0930                          l3277 322E                          l3269 31FC  
                        l3375 327A                          l3367 324E                          l2911 1C50  
                        l2903 1C1E                          l2831 169A                          l2823 164C  
                        l2815 1628                          l2807 160C                          l2751 146E  
                        l2743 1420                          l2735 13EA                          l2727 13DA  
                        l2719 13CA                          l2671 12EE                          l2663 12BE  
                        l3199 29D2                          l3295 2C24                          l4271 3310  
                        l2655 2DDC                          l2647 2D96                          l4247 33E0  
                        l4255 3196                          l4263 3406                          l4503 1266  
                        l4431 0F72                          l4423 0F42                          l4415 0E7E  
                        l4407 0E16                          l4351 0AB2                          l4327 09B4  
                        l3377 3282                          l3369 3256                          l3801 34DA  
                        l2921 1C96                          l2905 1C2E                          l2913 1C58  
                        l2841 1700                          l2833 16A6                          l2825 165A  
                        l2817 1638                          l2809 160E                          l2761 14AE  
                        l2753 1472                          l2745 143C                          l2737 13EE  
                        l2729 13DE                          l2681 131E                          l2673 12FE  
                        l2665 12CC                          l3297 2C4C                          l4273 3314  
                        l2657 2E0E                          l2649 2DA6                          l4249 33E4  
                        l4257 31A6                          l4265 340E                          l4505 1276  
                        l4441 1024                          l4433 0F78                          l4425 0F56  
                        l4417 0EB2                          l4409 0E2C                          l4361 0B72  
                        l4353 0AE4                          l4345 0A3A                          l4329 09BA  
                        l4281 0864                          l4521 28D2                          l4513 2898  
                        l4601 20C4                          l3379 3290                          l3803 34E0  
                        l2931 1CBE                          l2923 1C9A                          l2915 1C68  
                        l2907 1C3E                          l2851 1748                          l2843 1710  
                        l2835 16B4                          l2827 1670                          l2819 163A  
                        l2771 14F0                          l2763 14BE                          l2755 1480  
                        l2747 144C                          l2739 13F2                          l2691 1348  
                        l2683 1330                          l2675 1300                          l2667 12CE  
                        l3299 2C58                          l4275 3320                          l4267 32F0  
                        l4259 31AA                          l4507 128C                          l4451 1068  
                        l4443 1040                          l4435 0F80                          l4419 0F08  
                        l4427 0F5A                          l4371 0C06                          l4355 0B22  
                        l4347 0A40                          l4339 09DA                          l4291 08B4  
                        l4283 0874                          l3651 2EEA                          l4531 2916  
                        l4523 28DA                          l4515 28A6                          l4611 2146  
                        l3821 2FBA                          l2941 1D0C                          l2917 1C7E  
                        l2909 1C4E                          l2853 174A                          l2845 1730  
                        l2837 16EE                          l2781 151E                          l2773 14FE  
                        l2757 1482                          l2749 1462                          l2693 1358  
                        l2685 1332                          l2669 12DE                          l2677 1308  
                        l4269 3304                          l4277 3324                          l4509 1294  
                        l4453 1070                          l4445 104E                          l4461 1090  
                        l4437 0F8C                          l4429 0F6A                          l4381 0C3E  
                        l4373 0C10                          l4357 0B36                          l4365 0BB2  
                        l4349 0A74                          l4293 08BC                          l4285 0882  
                        l3661 2F58                          l3653 2EF2                          l4541 2976  
                        l4533 291C                          l4525 28E4                          l4517 28A8  
                        l4605 20CC                          l4701 2288                          ?_pad 000F  
                        l3671 3516                          l3911 27A0                          l3831 2FEC  
                        l3823 2FC0                          l3815 2F90                          l2951 1D56  
                        l2943 1D1C                          l2935 1CD2                          l2919 1C8E  
                        l2927 1CAE                          l2855 1750                          l2847 1734  
                        l2839 16F0                          l2791 158A                          l2783 1528  
                        l2775 150A                          l2767 14D2                          l2759 148C  
                        l2695 1368                          l2687 1338                          l2679 1318  
                        l4471 1116                          l4463 10A2                          l4455 1080  
                        l4447 105E                          l4439 1004                          l4391 0C88  
                        l4383 0C56                          l4375 0C18                          l4367 0BEC  
                        l4359 0B6A                          l4295 08CC                          l4287 0886  
                        l4279 085E                          l2871 34E4                          l3655 2F14  
                        l3663 2F60                          l4543 2990                          l4527 28EA  
                        l4535 2938                          l4519 28B6                          l4615 216E  
                        l4607 20FE                          l4551 1F58                          l4631 2208  
                        l4711 22B4                          l4703 2292                          l3673 3526  
                        l3665 350C                          l3921 27C0                          l3905 2770  
                        l3841 300A                          l3833 2FF2                          l3825 2FD0  
                        l3817 2F9C                          l2961 1DA4                          l2953 1D62  
                        l2945 1D24                          l2937 1CEC                          l2929 1CBE  
                        l2881 1BB6                          l2857 175E                          l2849 1742  
                        l2793 159A                          l2777 150E                          l2769 14E2  
                        l2785 152E                          l2697 1378                          l2689 1346  
                        l4481 1190                          l4473 114A                          l4465 10B4  
                        l4457 1084                          l4449 1062                          l4393 0C9C  
                        l4385 0C68                          l4377 0C1E                          l4369 0BFA  
                        l4297 08DC                          l4289 08AA                          l2873 3500  
                        l3657 2F1C                          l4537 294A                          l4545 299E  
                        l4529 2910                          l4625 21D0                          l4617 2198  
                        l4609 211E                          l4561 1F7A                          l4553 1F60  
                        l4721 22F6                          l4713 22CC                          l4705 2296  
                        l3667 350E                          l3931 27F2                          l3923 27D4  
                        l3907 278A                          l3851 26A0                          l3843 3010  
                        l3835 2FF8                          l3827 2FD6                          l3819 2FA2  
                        l2963 1DBA                          l2971 1DEA                          l2955 1D80  
                        l2947 1D34                          l2939 1CFC                          l2891 1BEA  
                        l2883 1BB8                          l2859 1760                          l2787 1554  
                        l2795 15AA                          l2779 151C                          l2699 137A  
                        l4491 11FC                          l4483 1198                          l4475 1152  
                        l4467 10B8                          l4459 108A                          l4395 0D00  
                        l4379 0C30                          l4387 0C70                          l4299 08E8  
                        l3659 2F38                          l4539 295C                          l4619 21A6  
                        l4627 21FC                          l4571 1FD0                          l4563 1F86  
                        l4555 1F6C                          l4731 233A                          l4723 22FC  
                        l4715 22D6                          l4707 22AC                          l3669 3514  
                        l3941 280C                          l3933 27F4                          l3917 27A4  
                        l3909 278C                          l3861 26BC                          l3845 3016  
                        l3837 2FFE                          l3829 2FE6                          l2973 1DF8  
                        l2965 1DC0                          l2957 1D82                          l2949 1D48  
                        l2885 1BC8                          l2893 1BF2                          l2877 1B9C  
                        l2797 15D0                          l2789 1588                          l4485 11A6  
                        l4469 10BE                          l4477 1156                          l4397 0D58  
                        l4389 0C78                          l4581 2034                          l4573 1FF2  
                        l4557 1F70                          l4549 1F36                          l4661 339E  
                        l4741 2366                          l4733 234A                          l4725 2314  
                        l4717 22E6                          l4709 22B0                          l3791 34C8  
                        l3943 2826                          l3935 2808                          l3919 27BE  
                        l3871 26EE                          l3863 26D0                          l3847 3562  
                        l3783 3554                          l3839 3004                          l2983 1E62  
                        l2991 1EAA                          l2975 1DFC                          l2967 1DCA  
                        l2959 1D92                          l2895 1C02                          l2887 1BD8  
                        l2879 1BA8                          l2799 15E0                          l4495 120E  
                        l4487 11D6                          l4479 1174                          l4399 0D8C  
                        l4911 2182                          l4591 206E                          l4583 204C  
                        l4575 1FFA                          l4567 1F8E                          l4559 1F78  
                        l4663 33BA                          l4671 3450                          l4751 23A8  
                        l4743 236A                          l4735 2362                          l4727 2318  
                        l4719 22F0                          l3793 34CA                          l3785 34B2  
                        l3945 2828                          l3929 27D8                          l3881 2708  
                        l3873 26F0                          l3857 26A4                          l3849 269C  
                        l3961 2CE8                          l2993 1EC4                          l2985 1E6E  
                        l2977 1E0A                          l2969 1DD8                          l2897 1C08  
                        l2889 1BE8                          l4497 1224                          l4489 11E4  
                        l4913 21EE                          l4585 205A                          l4593 209A  
                        l4577 200E                          l4905 1FB2                          l4569 1FC0  
                        l4657 3386                          l4673 3458                          l4761 23C6  
                        l4745 2380                          l4729 2330                          l4681 2230  
                        l3955 3570                          l3795 34D0                          l3787 34BE  
                        l4915 2850                          l3883 2722                          l3875 2704  
                        l3859 26BA                          l3971 2D22                          l3963 2CEE  
                        l2995 1EDA                          l2987 1E7C                          l2979 1E38  
                        l2899 1C0E                          l4499 122A                          l4595 20A4  
                        l4907 208C                          l4579 2018                          l4659 338E  
                        l4675 346A                          l4667 3440                          l4771 23FE  
                        l4763 23C8                          l4747 2382                          l4691 2250  
                        l4683 2234                          l3797 34D2                          l3789 34C0  
                        l3893 273C                          l3885 2724                          l3869 26D4  
                        l3949 283C                          l3981 2D60                          l3973 2D2C  
                        l3965 2CF8                          l3957 2CC6                          l2997 1EF4  
                        l2989 1EA6                          l4909 20E0                          l4597 20B6  
                        l4669 3448                          l4781 244E                          l4773 2412  
                        l4765 23D8                          l4757 23AC                          l4749 2392  
                        l4693 2254                          l4685 2238                          l3799 34D8  
                        l3895 2756                          l3887 2738                          l3983 2D72  
                        l3975 2D3E                          l3967 2D0A                          l3959 2CD6  
                        l3991 3028                          l2999 1F10                          l4599 20BC  
                        l4783 246A                          l4775 241C                          l4767 23DC  
                        l4759 23B0                          l4695 225E                          l4687 2242  
                        l4679 222C                          l3897 2758                          l3985 2D84  
                        l3977 2D50                          l3969 2D1C                          l3993 3058  
                        l4777 2426                          l4769 23F4                          l4697 226E  
                        l4689 224C                          l3899 276C                          l3987 2D8A  
                        l3979 2D56                          l3995 305C                          l4779 2444  
                        l4699 2278                          l3997 357E                          l3989 301C  
                        l3999 3546                          STR_1 0822                          STR_2 083D  
                        STR_3 0811                          STR_4 0850                          STR_5 0848  
                        STR_6 0830                          STR_7 0855               ?_Lcd_CGRAM_Init 0001  
                        u2100 1346                          u2020 2DA6                          u2101 1342  
                        u2021 2DA2                          u2110 1358                          u2030 2DB6  
                        u2111 1354                          u2031 2DB2                          u2200 14A0  
                        u2120 1368                          u3000 2A48                          u2040 2DDC  
                        u2201 149C                          u2121 1364                          u3001 2A44  
                        u2041 2DD8                          u2210 14AE                          u2130 13A4  
                        u3010 2A70                          u2050 2E0E                          u2211 14AA  
                        u2131 13A0                          u3011 2A6C                          u2051 2E0A  
                        u2300 160C                          u2220 14BE                          u2140 13B2  
                        u2060 12CC                          u3020 2A90                          u2301 1608  
                        u2221 14BA                          u2141 13AE                          u2061 12C8  
                        u3021 2A8C                          u2310 161C                          u2230 14F0  
                        u2150 1420                          u2070 12DE                          u3030 2AA0  
                        u2311 1618                          u2231 14EC                          u2151 141C  
                        u2071 12DA                          u3031 2A9C                          u4000 3098  
                        u2400 1700                          u2320 1638                          u2240 14FE  
                        u2160 1438                          u2080 12EE                          u3120 2C06  
                        u3200 32A8                          u3040 30B4                          u4001 3094  
                        u2401 16FC                          u2321 1634                          u2241 14FA  
                        u2161 1432                          u2081 12EA                          u3201 32A4  
                        u3041 30B0                          u2410 1710                          u2330 1648  
                        u2250 151C                          u2170 143A                          u2090 1330  
                        u3130 2C24                          u3210 24D0                          u3050 30D2  
                        u2411 170C                          u2331 1644                          u2251 1518  
                        u2091 132C                          u3131 2C20                          u3051 30CE  
                        u2500 1C2E                          u2420 1730                          u2340 165A  
                        u2260 1554                          u2180 1462                          u3140 2C4C  
                        u3300 2678                          u3220 24FE                          u4100 08DC  
                        u3060 30EE                          u2501 1C2A                          u2421 172C  
                        u2341 1656                          u2261 1550                          u2181 145E  
                        u3141 2C48                          u3125 2BFC                          u3301 2674  
                        u3221 24FA                          u4101 08D8                          u3061 30EA  
                        u2510 1C3E                          u2430 1742                          u2350 1670  
                        u2270 159A                          u2190 1480                          u3150 2C76  
                        u3230 2520                          u4030 3404                          u4110 091A  
                        u3070 31EC                          u2511 1C3A                          u2431 173E  
                        u2351 166C                          u2271 1596                          u2191 147C  
                        u3151 2C72                          u3231 251C                          u3215 24C6  
                        u4031 3400                          u4111 0916                          u3071 31E8  
                        u3320 324E                          u2600 1DF8                          u2520 1C7E  
                        u2440 175E                          u2360 1686                          u2280 15D0  
                        u4040 3182                          u4200 0BE4                          u4120 092C  
                        u3080 320A                          u3321 324A                          u2601 1DF4  
                        u2521 1C7A                          u2441 175A                          u2361 1682  
                        u2281 15CC                          u4041 317E                          u4201 0BE0  
                        u4121 0928                          u3081 3206                          u3330 3264  
                        u2610 1E0A                          u2530 1CBE                          u2370 169A  
                        u2290 15E0                          u3170 2CB0                          u3250 258C  
                        u4050 31C8                          u4210 0BFA                          u4130 099E  
                        u3090 3220                          u3331 3260                          u2611 1E06  
                        u2531 1CBA                          u2371 1696                          u2291 15DC  
                        u3171 2CAA                          u3251 2588                          u4051 31C4  
                        u4211 0BF6                          u4131 099A                          u3091 321C  
                        u3340 327A                          u2620 1E38                          u2540 1D34  
                        u2460 1BB6                          u2700 179E                          u2380 16B4  
                        u3180 2CB2                          u3260 25B0                          u4060 343E  
                        u4300 0F56                          u4220 0C30                          u4140 09B0  
                        u3341 3276                          u2621 1E34                          u2541 1D30  
                        u2461 1BB2                          u2701 179A                          u2381 16B0  
                        u3165 2C88                          u3245 2534                          u4061 343A  
                        u4301 0F52                          u4221 0C2C                          u4141 09AC  
                        u3350 3290                          u2630 1E4E                          u2550 1D56  
                        u2470 1BC8                          u2710 17AE                          u2390 16EE  
                        u3270 25CC                          u3246 253E                          u4070 333E  
                        u4310 1004                          u4230 0C3E                          u4150 0A26  
                        u3351 328C                          u2631 1E4A                          u2551 1D52  
                        u2471 1BC4                          u2711 17AA                          u2391 16EA  
                        u3271 25C8                          u3247 254E                          u4071 333A  
                        u4311 1000                          u4231 0C3A                          u4151 0A22  
                        u2640 1E62                          u2560 1D80                          u2480 1BD8  
                        u2800 1A5C                          u2720 17EE                          u3280 2620  
                        u4400 1248                          u4320 1040                          u4240 0C68  
                        u4160 0AB2                          u4080 0882                          u2641 1E5E  
                        u2561 1D7C                          u2481 1BD4                          u2801 1A58  
                        u2721 17EA                          u3265 25A6                          u4401 1244  
                        u4321 103C                          u4241 0C64                          u4161 0AAE  
                        u4081 087E                          u2650 1E7C                          u2570 1DA4  
                        u2490 1C1C                          u2810 1A8A                          u2730 1800  
                        u3290 263C                          u4410 1266                          u4330 104E  
                        u4250 0DB0                          u4170 0AE4                          u4090 08CC  
                        u2651 1E78                          u2571 1DA0                          u2491 1C18  
                        u2811 1A86                          u2731 17FC                          u3291 2638  
                        u4411 1262                          u4331 104A                          u4251 0DAC  
                        u4171 0AE0                          u4091 08C8                          u2660 1EC4  
                        u2580 1DBA                          u2900 2EE0                          u2820 1AA0  
                        u2740 1810                          u4420 1276                          u4340 10A2  
                        u4260 0E16                          u4180 0B22                          u4500 1F58  
                        u2661 1EC0                          u2581 1DB6                          u2901 2EDC  
                        u2821 1A9C                          u2741 180C                          u3285 2616  
                        u4421 1272                          u4341 109E                          u4261 0E12  
                        u4181 0B1E                          u4501 1F54                          u2670 1EF4  
                        u2590 1DD8                          u2910 2AF0                          u2830 1AB4  
                        u2750 1846                          u4350 1174                          u4270 0E5E  
                        u4190 0BAE                          u4430 28A6                          u4510 1FD0  
                        u2671 1EF0                          u2591 1DD4                          u2911 2AEC  
                        u2831 1AB0                          u2751 1842                          u4351 1170  
                        u4271 0E5A                          u4191 0BAA                          u4431 28A2  
                        u4511 1FCC                          u2680 1F22                          u2920 2B2E  
                        u2840 1ACE                          u2760 1856                          u4360 1190  
                        u4280 0E6E                          u4440 28B6                          u4520 1FF2  
                        u2681 1F1E                          u2921 2B2A                          u2841 1ACA  
                        u2761 1852                          u4361 118C                          u4281 0E6A  
                        u4441 28B2                          u4521 1FEE                          u2930 2B4C  
                        u2850 1B16                          u2770 19D0                          u2690 178C  
                        u4370 11F6                          u4290 0F08                          u4450 294A  
                        u4530 2034                          u2931 2B48                          u2851 1B12  
                        u2691 1788                          u4371 11F0                          u4291 0F04  
                        u4451 2946                          u4531 2030                          u3900 279C  
                        u2940 2B6C                          u2860 1B44                          u2780 1A2A  
                        u4380 11F8                          u4460 295C                          u4540 211A  
                        u3901 2798                          u2941 2B68                          u2861 1B40  
                        u2781 1A26                          u4461 2958                          u4541 2116  
                        u3910 27D0                          u2950 2BBC                          u2870 1B7E  
                        u2790 1A4A                          u4390 120A                          u4470 2976  
                        u4550 33BA                          u3911 27CC                          u2951 2BB8  
                        u2871 1B7A                          u2791 1A46                          u2775 19C6  
                        u4391 1206                          u4471 2972                          u4551 33B6  
                        u4607 2306                          u3920 2804                          u2880 2E6E  
                        u2960 348E                          u4480 2990                          u4560 2392  
                        u3921 2800                          u2881 2E6A                          u2961 348A  
                        u4481 298C                          u4561 238E                          u4617 2322  
                        u3930 2838                          u2890 2EAC                          u2970 29D2  
                        u4490 299E                          u4570 23D8                          u3931 2834  
                        u4707 2FC6                          u2891 2EA8                          u2971 29CE  
                        u4491 299A                          u4571 23D4                          u4627 2354  
                        u3860 26CC                          u3940 2CD6                          u2980 2A06  
                        u3780 2F14                          u3861 26C8                          u4717 2FDC  
                        u3941 2CD2                          u3781 2F10                          u4637 2374  
                        u3870 2700                          u3950 2D0A                          u2990 2A34  
                        u3790 2F86                          u4727 34CC                          u3871 26FC  
                        u3951 2D06                          u2991 2A30                          u3791 2F82  
                        u4647 239C                          u3880 2734                          u3960 2D3E  
                        u4737 34DC                          u3881 2730                          u3961 2D3A  
                        u2985 29FC                          u4657 23BA                          u3890 2768  
                        u3970 2D72                          u4747 351C                          u3891 2764  
                        u3971 2D6E                          u4667 23E6                          u4587 22A0  
                        u3980 3054                          u4677 2458                          u4597 22BE  
                        u3990 3088                          u4687 2474                          u4697 2FAC  
                        u3987 304A                          u3997 307E             ?_Lcd_Write_String 0005  
                        _dbuf 0100                          _labs 329A                          _main 222C  
                        _prec 005A                          pad@i 0015                          pad@p 0012  
                        fsr1h 0FE2                          fsr2h 0FDA                          indf1 0FE7  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        _utoa 2898                 ___fpclassifyf 2BC6                          prodh 0FF4  
                        prodl 0FF3                          start 0000            ??_Lcd_Write_String 0007  
             ___fldiv@new_exp 0012               __end_of_Lcd_Cmd 352A                  ___param_bank 0000  
                       ??_pad 0014                 ___fltol@sign1 0009                         ?_labs 0001  
             __end_of___fladd 1772                         ?_main 0001               __end_of___fldiv 1F36  
             __end_of___flneg 34B0                         STR_10 0859              ?_Lcd_CGRAM_Close 0001  
             __end_of___flmul 1B9C               __end_of___flsub 3386               __end_of___fltol 2AC2  
                       ?_utoa 0017               __end_of___lwdiv 310E               __end_of___lwmod 323E  
                vfpfcnvrt@fmt 0037                         _flags 005C           read_prec_or_width@c 0009  
         read_prec_or_width@n 000A                         _fputc 2D96                         _fputs 33C6  
                       labs@a 0001                         pad@fp 000F                         _width 0058  
                       _putch 3592                         main@i 0052                         tablat 0FF5  
                       utoa@d 0018                         utoa@i 001E                         utoa@p 001A  
                       utoa@w 001C                         status 0FD8               __end_of_sprintf 3478  
              ?___fpclassifyf 0001              __end_of_Lcd_Init 301C              __end_of_Lcd_Port 329A  
             __initialization 310E                  __end_of_labs 32F0                  __end_of_main 2488  
                __end_of_utoa 29BC                   _Lcd_NoBlink 3546                        ??_labs 0005  
                      ??_main 0050                        ??_utoa 001A                 __activetblptr 0002  
  __end_of_read_prec_or_width 2F90       Lcd_CGRAM_CreateChar@add 0008                        ?_fputc 0001  
                      ?_fputs 0009                        ?_putch 0001                     ??_Lcd_Cmd 0002  
               vfpfcnvrt@done 003B                  vfprintf@cfmt 0042              __end_of_figura_1 0811  
            __end_of_figura_2 0809                        ___flge 2AC2                        ___fleq 2E40  
Lcd_CGRAM_CreateChar@chardata 0005                     ??___fladd 0009                        ___wmul 34E4  
                   ??___fldiv 0009                     ??___flneg 0005                     ??___flmul 0009  
                   ??___flsub 0022                     ??___fltol 0005                        _efgtoa 085E  
                   ??___lwdiv 0005                     ??___lwmod 0005                        _buffer 0099  
                      _floorf 2488                        _memcpy 32F0          read_prec_or_width@ap 0008  
                      clear_0 314C                        clear_1 3158                        clear_2 3164  
                      isa$std 0001                        pad@buf 0010                        _strcpy 3406  
                      fputc@c 0001                        fputs@c 000C                        fputs@i 000D  
                __pdataCOMRAM 005D                        fputs@s 0009               ___fpclassifyf@e 0009  
             ___fpclassifyf@u 000B               ___fpclassifyf@x 0001                  __mediumconst 0000  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
                      putch@c 0001              __end_of_vfprintf 33C6                        utoa@fp 0017  
                   ??_sprintf 0043               Lcd_Set_Cursor@a 0005               Lcd_Set_Cursor@b 0004  
             Lcd_Set_Cursor@y 0007               Lcd_Set_Cursor@z 0006                    ___flge@ff1 001A  
                  ___flge@ff2 001E               ??___fpclassifyf 0005     Lcd_CGRAM_CreateChar@i_272 000A  
   Lcd_CGRAM_CreateChar@i_273 000B     Lcd_CGRAM_CreateChar@i_274 000C     Lcd_CGRAM_CreateChar@i_275 000D  
   Lcd_CGRAM_CreateChar@i_276 000E     Lcd_CGRAM_CreateChar@i_277 000F     Lcd_CGRAM_CreateChar@i_278 0010  
                  ___fleq@ff1 0001                    ___fleq@ff2 0005                    __accesstop 0060  
     __end_of__initialization 316A                    ___flneg@f1 0001             __end_of_Lcd_Clear 3562  
           __end_of_Lcd_Blink 358C                 ___rparam_used 0001                    ___fltol@f1 0001  
              __pcstackCOMRAM 0001                  __pidataBANK0 358C                 __end_of_fputc 2E40  
               __end_of_fputs 3406                 __end_of_putch 3594                _Lcd_Set_Cursor 2CC4  
            ??_Lcd_CGRAM_Init 0004                _Lcd_Shift_Left 3538                     ?_Lcd_Init 0001  
                   ?_Lcd_Port 0001                       ??_fputc 0004                       ??_fputs 000C  
                     ??_putch 0001                    __pbssBANK0 0095                    __pbssBANK1 0100  
                  _efgtoa$845 0066                       ?___flge 001A                       ?___fleq 0001  
                     ?___wmul 0001                       ?_efgtoa 002E                       ?_floorf 001A  
                     ?_memcpy 0001        __end_of_Lcd_Set_Cursor 2D96                       ?_strcpy 0001  
      __end_of_Lcd_Shift_Left 3546             ??_Lcd_Shift_Right 0004                    ??_Lcd_Init 0004  
                  ??_Lcd_Port 0001                _Lcd_Write_Char 34B0                       _Lcd_Cmd 350A  
                     __Hparam 0000                       __Lparam 0000                       ___fladd 12B2  
                     ___fldiv 1B9C                       ___flneg 3478                       ___flmul 1772  
                     ___flsub 3340                       ___fltol 29BC                       ___lwdiv 309A  
                     ___lwmod 31DA                     ?_vfprintf 008C                  __psmallconst 0800  
                     __pcinit 310E                       __ramtop 0800               ?_Lcd_Set_Cursor 0004  
                ?_Lcd_NoBlink 0001                       __ptext0 222C                       __ptext1 3440  
                     __ptext2 3386                       __ptext3 1F36                       __ptext4 2898  
                     __ptext5 31DA                       __ptext6 309A                       __ptext7 2EEA  
                     __ptext8 34E4                       __ptext9 085E         read_prec_or_width@fmt 0007  
             ?_Lcd_Shift_Left 0001                       efgtoa@c 0033                       efgtoa@d 006B  
                     efgtoa@e 006F                       efgtoa@f 002F                       efgtoa@g 0082  
                     efgtoa@h 0077                       efgtoa@i 007F                       efgtoa@l 007B  
                     efgtoa@m 006D                       efgtoa@n 0086                       efgtoa@p 0062  
                     efgtoa@t 0064                       efgtoa@u 0088                       efgtoa@w 0075  
                     _sprintf 3440        __end_of_Lcd_Write_Char 34E4          end_of_initialization 316A  
                     floorf@e 0028                       floorf@m 0024                       floorf@u 002A  
                     floorf@x 001A                       memcpy@d 0008                       memcpy@n 0005  
                     memcpy@s 000A                       fputc@fp 0003                 __Lmediumconst 0000  
                     fputs@fp 000B            _read_prec_or_width 2EEA             __end_of_vfpfcnvrt 222C  
                  efgtoa@mode 0069                    efgtoa@sign 0081                       postdec1 0FE5  
                     postdec2 0FDD           ?_read_prec_or_width 0007                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE              vfpfcnvrt@convarg 003C  
                   Lcd_Port@a 0001                    ??_vfprintf 0042                       strcpy@d 0005  
                 ___fladd@grs 0010                     _TRISDbits 0F95          ??_read_prec_or_width 0009  
                 ___fldiv@grs 0014                   ___fldiv@rem 000D               ?_Lcd_Write_Char 0001  
           Lcd_Write_String@a 0005             Lcd_Write_String@i 0009                   ___flmul@grs 000E  
                   _Lcd_Clear 3554                     _Lcd_Blink 357E                __end_of___flge 2BC6  
              __end_of___fleq 2EEA                   vfpfcnvrt@ap 0038                   vfpfcnvrt@cp 0041  
                 vfpfcnvrt@fp 0036                __end_of___wmul 350A              _Lcd_Write_String 301C  
               __pidataCOMRAM 3590                __end_of_efgtoa 12B2                __end_of_floorf 269A  
              __end_of_memcpy 3340                    floorf@F521 0095  __end_of_Lcd_CGRAM_CreateChar 2898  
              __end_of_strcpy 3440           start_initialization 310E                   __end_of_pad 31DA  
       __end_of___fpclassifyf 2CC4             ??_Lcd_CGRAM_Close 0004                   vfprintf@fmt 008D  
                  ?_Lcd_Clear 0001                      ??___flge 0022                      ??___fleq 0009  
                  ?_Lcd_Blink 0001               _Lcd_Shift_Right 352A                      ??___wmul 0005  
                    ??_efgtoa 0034                   __pdataBANK0 00AD                      ??_floorf 001E  
                    ??_memcpy 0007               Lcd_Write_Char@a 0004               Lcd_Write_Char@y 0003  
                    ??_strcpy 0004                     ___fladd@a 0005                     ___fladd@b 0001  
                   ___fldiv@a 0005                     ___fldiv@b 0001                     ___flmul@a 0005  
                   ___flmul@b 0001                   __pbssCOMRAM 0054                     ___flsub@a 001E  
                   ___flsub@b 001A                 __pcstackBANK0 0060                      ?_Lcd_Cmd 0001  
            ___lwdiv@dividend 0001              ??_Lcd_Set_Cursor 0005                      ?___fladd 0001  
                    ?___fldiv 0001                      ?___flneg 0001                      ?___flmul 0001  
                    ?___flsub 001A                      ?___fltol 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001              ??_Lcd_Shift_Left 0004                   __smallconst 0800  
            ___lwdiv@quotient 0005                      ?_sprintf 008F                ___wmul@product 0005  
                    _LATDbits 0F8C       __end_of_Lcd_Shift_Right 3538          _Lcd_CGRAM_CreateChar 269A  
                    Lcd_Cmd@a 0003                   ??_Lcd_Clear 0004                   ??_Lcd_Blink 0004  
                   _vfpfcnvrt 1F36                    _ADCON1bits 0FC1                     main@i_142 0053  
           ___wmul@multiplier 0001              ??_Lcd_Write_Char 0002                      _Lcd_Init 2F90  
                    _Lcd_Port 323E                    vfpfcnvrt@c 0040                     copy_data0 3122  
    __end_of_Lcd_Write_String 309A         ?_Lcd_CGRAM_CreateChar 0005                      __Hrparam 0000  
                   memcpy@tmp 0007                    vfprintf@ap 008E                      __Lrparam 0000  
                  vfprintf@fp 008C                    ?_vfpfcnvrt 0036            ___fpclassifyf@F465 0054  
                  sprintf@fmt 0090               ___lwdiv@divisor 0003               _Lcd_CGRAM_Close 3570  
             ___lwdiv@counter 0007                      __ptext10 3406                      __ptext11 3174  
                    __ptext20 3340                      __ptext12 33C6                      __ptext21 12B2  
                    __ptext13 2D96                      __ptext30 2CC4                      __ptext22 3478  
                    __ptext14 3592                      __ptext31 3546                      __ptext23 1772  
                    __ptext15 32F0                      __ptext40 323E                      __ptext32 2F90  
                    __ptext24 2AC2                      __ptext16 329A                      __ptext33 3554  
                    __ptext25 2E40                      __ptext17 2488                      __ptext34 3562  
                    __ptext26 1B9C                      __ptext18 2BC6                      __ptext35 269A  
                    __ptext27 301C                      __ptext19 29BC                      __ptext36 34B0  
                    __ptext28 352A                      __ptext37 3570                      __ptext29 3538  
                    __ptext38 357E                      __ptext39 350A                      _figura_1 0809  
                    _figura_2 0801                    strcpy@dest 0001              ?_Lcd_Shift_Right 0001  
                    efgtoa@fp 002E                      efgtoa@ne 0060                      efgtoa@pp 0068  
                    efgtoa@ou 0071                      isa$xinst 0000                      _vfprintf 3386  
                    memcpy@d1 0001                      memcpy@s1 0003            Lcd_Write_Char@temp 0002  
                   sprintf@ap 0043        ??_Lcd_CGRAM_CreateChar 0006                _Lcd_CGRAM_Init 3562  
            ___lwmod@dividend 0001                     strcpy@src 0003                   efgtoa@nmode 006A  
                 ??_vfpfcnvrt 0039            Lcd_Set_Cursor@temp 0008                 ??_Lcd_NoBlink 0004  
     __end_of_Lcd_CGRAM_Close 357E                      sprintf@f 0044                      sprintf@s 008F  
             ___lwmod@divisor 0003               ___lwmod@counter 0005                 ___fladd@signs 000D  
      __end_of_Lcd_CGRAM_Init 3570                  ___fladd@aexp 000E                  ___fladd@bexp 000F  
