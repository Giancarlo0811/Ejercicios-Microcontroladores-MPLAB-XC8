

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 07 16:24:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 23/03/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _ADCON0bits	set	4034
    87   000000                     _LATBbits	set	3978
    88   000000                     _TRISBbits	set	3987
    89   000000                     _TRISDbits	set	3989
    90   000000                     _ADCON2	set	4032
    91   000000                     _ADCON1	set	4033
    92   000000                     _LATDbits	set	3980
    93   000000                     _ADRES	set	4035
    94   000000                     _ADCON0	set	4034
    95                           
    96                           	psect	smallconst
    97   000800                     __psmallconst:
    98                           	callstack 0
    99   000800  00                 	db	0
   100   000801                     STR_2:
   101   000801  56                 	db	86	;'V'
   102   000802  6F                 	db	111	;'o'
   103   000803  6C                 	db	108	;'l'
   104   000804  74                 	db	116	;'t'
   105   000805  61                 	db	97	;'a'
   106   000806  6A                 	db	106	;'j'
   107   000807  65                 	db	101	;'e'
   108   000808  3A                 	db	58	;':'
   109   000809  20                 	db	32
   110   00080A  25                 	db	37
   111   00080B  30                 	db	48	;'0'
   112   00080C  2E                 	db	46
   113   00080D  32                 	db	50	;'2'
   114   00080E  66                 	db	102	;'f'
   115   00080F  00                 	db	0
   116   000810                     STR_1:
   117   000810  41                 	db	65	;'A'
   118   000811  44                 	db	68	;'D'
   119   000812  43                 	db	67	;'C'
   120   000813  3A                 	db	58	;':'
   121   000814  20                 	db	32
   122   000815  25                 	db	37
   123   000816  75                 	db	117	;'u'
   124   000817  00                 	db	0
   125   000818                     STR_3:
   126   000818  69                 	db	105	;'i'
   127   000819  6E                 	db	110	;'n'
   128   00081A  66                 	db	102	;'f'
   129   00081B  00                 	db	0
   130   00081C                     STR_6:
   131   00081C  6E                 	db	110	;'n'
   132   00081D  61                 	db	97	;'a'
   133   00081E  6E                 	db	110	;'n'
   134   00081F  00                 	db	0
   135   000820  00                 	db	0	; dummy byte at the end
   136   000000                     
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140   0032EE                     __pcinit:
   141                           	callstack 0
   142   0032EE                     start_initialization:
   143                           	callstack 0
   144   0032EE                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Clear objects allocated to BANK1 (80 bytes)
   148   0032EE  EE01  F000         	lfsr	0,__pbssBANK1
   149   0032F2  0E50               	movlw	80
   150   0032F4                     clear_0:
   151   0032F4  6AEE               	clrf	postinc0,c
   152   0032F6  06E8               	decf	wreg,f,c
   153   0032F8  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK0 (39 bytes)
   156   0032FA  EE00  F0AC         	lfsr	0,__pbssBANK0
   157   0032FE  0E27               	movlw	39
   158   003300                     clear_1:
   159   003300  6AEE               	clrf	postinc0,c
   160   003302  06E8               	decf	wreg,f,c
   161   003304  E1FD               	bnz	clear_1
   162   003306                     end_of_initialization:
   163                           	callstack 0
   164   003306                     __end_of__initialization:
   165                           	callstack 0
   166   003306  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167   003308  6EF8               	movwf	tblptru,c
   168   00330A  0100               	movlb	0
   169   00330C  EF70  F013         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssBANK0
   172   0000AC                     __pbssBANK0:
   173                           	callstack 0
   174   0000AC                     floorf@F521:
   175                           	callstack 0
   176   0000AC                     	ds	4
   177   0000B0                     ___fpclassifyf@F465:
   178                           	callstack 0
   179   0000B0                     	ds	4
   180   0000B4                     _voltaje:
   181                           	callstack 0
   182   0000B4                     	ds	4
   183   0000B8                     _width:
   184                           	callstack 0
   185   0000B8                     	ds	2
   186   0000BA                     _prec:
   187                           	callstack 0
   188   0000BA                     	ds	2
   189   0000BC                     _valor_adc:
   190                           	callstack 0
   191   0000BC                     	ds	2
   192   0000BE                     _flags:
   193                           	callstack 0
   194   0000BE                     	ds	1
   195   0000BF                     _buffer:
   196                           	callstack 0
   197   0000BF                     	ds	20
   198                           
   199                           	psect	bssBANK1
   200   000100                     __pbssBANK1:
   201                           	callstack 0
   202   000100                     _dbuf:
   203                           	callstack 0
   204   000100                     	ds	80
   205                           
   206                           	psect	cstackBANK0
   207   000060                     __pcstackBANK0:
   208                           	callstack 0
   209   000060                     efgtoa@ne:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x0
   213   000060                     	ds	2
   214   000062                     efgtoa@p:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x2
   218   000062                     	ds	2
   219   000064                     efgtoa@t:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x4
   223   000064                     	ds	2
   224   000066                     _efgtoa$941:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x6
   228   000066                     	ds	2
   229   000068                     efgtoa@pp:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x8
   233   000068                     	ds	1
   234   000069                     efgtoa@mode:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x9
   238   000069                     	ds	1
   239   00006A                     efgtoa@nmode:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0xA
   243   00006A                     	ds	1
   244   00006B                     efgtoa@d:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xB
   248   00006B                     	ds	2
   249   00006D                     efgtoa@m:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xD
   253   00006D                     	ds	2
   254   00006F                     efgtoa@e:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xF
   258   00006F                     	ds	2
   259   000071                     efgtoa@ou:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0x11
   263   000071                     	ds	4
   264   000075                     efgtoa@w:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x15
   268   000075                     	ds	2
   269   000077                     efgtoa@h:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x17
   273   000077                     	ds	4
   274   00007B                     efgtoa@l:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x1B
   278   00007B                     	ds	4
   279   00007F                     efgtoa@i:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x1F
   283   00007F                     	ds	2
   284   000081                     efgtoa@sign:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x21
   288   000081                     	ds	1
   289   000082                     efgtoa@g:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x22
   293   000082                     	ds	4
   294   000086                     efgtoa@n:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x26
   298   000086                     	ds	2
   299   000088                     efgtoa@u:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x28
   303   000088                     	ds	4
   304   00008C                     ??_vfpfcnvrt:
   305                           
   306                           ; 1 bytes @ 0x2C
   307   00008C                     	ds	2
   308   00008E                     vfpfcnvrt@done:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x2E
   312   00008E                     	ds	1
   313   00008F                     vfpfcnvrt@convarg:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x2F
   317   00008F                     	ds	4
   318   000093                     vfpfcnvrt@c:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x33
   322   000093                     	ds	1
   323   000094                     vfpfcnvrt@cp:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x34
   327   000094                     	ds	1
   328   000095                     ?_vfprintf:
   329                           	callstack 0
   330   000095                     vfprintf@fp:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x35
   334   000095                     	ds	1
   335   000096                     vfprintf@fmt:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x36
   339   000096                     	ds	1
   340   000097                     vfprintf@ap:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x37
   344   000097                     	ds	1
   345   000098                     vfprintf@cfmt:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x38
   349   000098                     	ds	1
   350   000099                     ?_sprintf:
   351                           	callstack 0
   352   000099                     sprintf@s:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x39
   356   000099                     	ds	1
   357   00009A                     sprintf@fmt:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x3A
   361   00009A                     	ds	5
   362   00009F                     sprintf@ap:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x3F
   366   00009F                     	ds	1
   367   0000A0                     sprintf@f:
   368                           	callstack 0
   369                           
   370                           ; 12 bytes @ 0x40
   371   0000A0                     	ds	12
   372                           
   373                           	psect	cstackCOMRAM
   374   000001                     __pcstackCOMRAM:
   375                           	callstack 0
   376   000001                     ?_ADC_Read:
   377                           	callstack 0
   378   000001                     ?___fpclassifyf:
   379                           	callstack 0
   380   000001                     ?___wmul:
   381                           	callstack 0
   382   000001                     ?___lwdiv:
   383                           	callstack 0
   384   000001                     ?___lwmod:
   385                           	callstack 0
   386   000001                     ?___fladd:
   387                           	callstack 0
   388   000001                     ?_labs:
   389                           	callstack 0
   390   000001                     ?___flneg:
   391                           	callstack 0
   392   000001                     ?___fltol:
   393                           	callstack 0
   394   000001                     ?___xxtofl:
   395                           	callstack 0
   396   000001                     ADC_Init@p_ang:
   397                           	callstack 0
   398   000001                     Lcd_Port@a:
   399                           	callstack 0
   400   000001                     ___wmul@multiplier:
   401                           	callstack 0
   402   000001                     ___lwdiv@dividend:
   403                           	callstack 0
   404   000001                     ___lwmod@dividend:
   405                           	callstack 0
   406   000001                     memcpy@d1:
   407                           	callstack 0
   408   000001                     fputc@c:
   409                           	callstack 0
   410   000001                     strcpy@dest:
   411                           	callstack 0
   412   000001                     ___fleq@ff1:
   413                           	callstack 0
   414   000001                     ___flneg@f1:
   415                           	callstack 0
   416   000001                     ___fltol@f1:
   417                           	callstack 0
   418   000001                     ___fladd@b:
   419                           	callstack 0
   420   000001                     ___xxtofl@val:
   421                           	callstack 0
   422   000001                     ___fpclassifyf@x:
   423                           	callstack 0
   424   000001                     labs@a:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x0
   428   000001                     	ds	1
   429   000002                     ??_Lcd_Cmd:
   430   000002                     Lcd_Write_Char@temp:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434   000002                     	ds	1
   435   000003                     ADC_Read@ch:
   436                           	callstack 0
   437   000003                     Lcd_Cmd@a:
   438                           	callstack 0
   439   000003                     Lcd_Write_Char@y:
   440                           	callstack 0
   441   000003                     fputc@fp:
   442                           	callstack 0
   443   000003                     strcpy@src:
   444                           	callstack 0
   445   000003                     ___wmul@multiplicand:
   446                           	callstack 0
   447   000003                     ___lwdiv@divisor:
   448                           	callstack 0
   449   000003                     ___lwmod@divisor:
   450                           	callstack 0
   451   000003                     memcpy@s1:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x2
   455   000003                     	ds	1
   456   000004                     ??_Lcd_Init:
   457   000004                     ??_fputc:
   458   000004                     ??_strcpy:
   459   000004                     Lcd_Set_Cursor@b:
   460                           	callstack 0
   461   000004                     Lcd_Write_Char@a:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x3
   465   000004                     	ds	1
   466   000005                     ??___fpclassifyf:
   467   000005                     ??_labs:
   468   000005                     ??___fltol:
   469   000005                     ??___xxtofl:
   470   000005                     Lcd_Set_Cursor@a:
   471                           	callstack 0
   472   000005                     Lcd_Write_String@a:
   473                           	callstack 0
   474   000005                     ___lwdiv@counter:
   475                           	callstack 0
   476   000005                     ___lwmod@counter:
   477                           	callstack 0
   478   000005                     ___wmul@product:
   479                           	callstack 0
   480   000005                     memcpy@n:
   481                           	callstack 0
   482   000005                     strcpy@d:
   483                           	callstack 0
   484   000005                     ___fleq@ff2:
   485                           	callstack 0
   486   000005                     ___fladd@a:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x4
   490   000005                     	ds	1
   491   000006                     Lcd_Set_Cursor@z:
   492                           	callstack 0
   493   000006                     Lcd_Write_String@i:
   494                           	callstack 0
   495   000006                     ___lwdiv@quotient:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x5
   499   000006                     	ds	1
   500   000007                     ?_read_prec_or_width:
   501                           	callstack 0
   502   000007                     Lcd_Set_Cursor@y:
   503                           	callstack 0
   504   000007                     read_prec_or_width@fmt:
   505                           	callstack 0
   506   000007                     memcpy@tmp:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x6
   510   000007                     	ds	1
   511   000008                     Lcd_Set_Cursor@temp:
   512                           	callstack 0
   513   000008                     read_prec_or_width@ap:
   514                           	callstack 0
   515   000008                     memcpy@d:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x7
   519   000008                     	ds	1
   520   000009                     ??___fladd:
   521   000009                     ??___fleq:
   522   000009                     ___fltol@sign1:
   523                           	callstack 0
   524   000009                     ___xxtofl@sign:
   525                           	callstack 0
   526   000009                     read_prec_or_width@c:
   527                           	callstack 0
   528   000009                     ___fpclassifyf@e:
   529                           	callstack 0
   530   000009                     fputs@s:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x8
   534   000009                     	ds	1
   535   00000A                     ___fltol@exp1:
   536                           	callstack 0
   537   00000A                     ___xxtofl@exp:
   538                           	callstack 0
   539   00000A                     read_prec_or_width@n:
   540                           	callstack 0
   541   00000A                     memcpy@s:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x9
   545   00000A                     	ds	1
   546   00000B                     fputs@fp:
   547                           	callstack 0
   548   00000B                     ___xxtofl@arg:
   549                           	callstack 0
   550   00000B                     ___fpclassifyf@u:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0xA
   554   00000B                     	ds	1
   555   00000C                     fputs@c:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xB
   559   00000C                     	ds	1
   560   00000D                     ___fladd@signs:
   561                           	callstack 0
   562   00000D                     fputs@i:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xC
   566   00000D                     	ds	1
   567   00000E                     ___fladd@aexp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0xD
   571   00000E                     	ds	1
   572   00000F                     ?___flmul:
   573                           	callstack 0
   574   00000F                     ___fladd@bexp:
   575                           	callstack 0
   576   00000F                     pad@fp:
   577                           	callstack 0
   578   00000F                     ___flmul@b:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xE
   582   00000F                     	ds	1
   583   000010                     ___fladd@grs:
   584                           	callstack 0
   585   000010                     pad@buf:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0xF
   589   000010                     	ds	2
   590   000012                     pad@p:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x11
   594   000012                     	ds	1
   595   000013                     ___flmul@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599   000013                     	ds	1
   600   000014                     ??_pad:
   601                           
   602                           ; 1 bytes @ 0x13
   603   000014                     	ds	1
   604   000015                     pad@i:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608   000015                     	ds	2
   609   000017                     ??___flmul:
   610   000017                     utoa@fp:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x16
   614   000017                     	ds	1
   615   000018                     utoa@d:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x17
   619   000018                     	ds	2
   620   00001A                     utoa@p:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x19
   624   00001A                     	ds	1
   625   00001B                     ___flmul@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x1A
   629   00001B                     	ds	1
   630   00001C                     ___flmul@aexp:
   631                           	callstack 0
   632   00001C                     utoa@w:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x1B
   636   00001C                     	ds	1
   637   00001D                     ___flmul@grs:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x1C
   641   00001D                     	ds	1
   642   00001E                     utoa@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x1D
   646   00001E                     	ds	3
   647   000021                     ___flmul@bexp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x20
   651   000021                     	ds	1
   652   000022                     ___flmul@prod:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x21
   656   000022                     	ds	4
   657   000026                     ___flmul@temp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x25
   661   000026                     	ds	2
   662   000028                     ?___fldiv:
   663                           	callstack 0
   664   000028                     ?___flsub:
   665                           	callstack 0
   666   000028                     ___flge@ff1:
   667                           	callstack 0
   668   000028                     ___flsub@b:
   669                           	callstack 0
   670   000028                     ___fldiv@b:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x27
   674   000028                     	ds	4
   675   00002C                     ___flge@ff2:
   676                           	callstack 0
   677   00002C                     ___flsub@a:
   678                           	callstack 0
   679   00002C                     ___fldiv@a:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x2B
   683   00002C                     	ds	4
   684   000030                     ??___fldiv:
   685   000030                     ??___flge:
   686                           
   687                           ; 1 bytes @ 0x2F
   688   000030                     	ds	4
   689   000034                     ___fldiv@rem:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x33
   693   000034                     	ds	4
   694   000038                     ___fldiv@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x37
   698   000038                     	ds	1
   699   000039                     ___fldiv@new_exp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x38
   703   000039                     	ds	2
   704   00003B                     ___fldiv@grs:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x3A
   708   00003B                     	ds	4
   709   00003F                     ___fldiv@bexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x3E
   713   00003F                     	ds	1
   714   000040                     ___fldiv@aexp:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x3F
   718   000040                     	ds	1
   719   000041                     ?_floorf:
   720                           	callstack 0
   721   000041                     floorf@x:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x40
   725   000041                     	ds	4
   726   000045                     ??_floorf:
   727                           
   728                           ; 1 bytes @ 0x44
   729   000045                     	ds	6
   730   00004B                     floorf@m:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x4A
   734   00004B                     	ds	4
   735   00004F                     floorf@e:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x4E
   739   00004F                     	ds	2
   740   000051                     floorf@u:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x50
   744   000051                     	ds	4
   745   000055                     efgtoa@fp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x54
   749   000055                     	ds	1
   750   000056                     efgtoa@f:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x55
   754   000056                     	ds	4
   755   00005A                     efgtoa@c:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x59
   759   00005A                     	ds	1
   760   00005B                     ??_efgtoa:
   761                           
   762                           ; 1 bytes @ 0x5A
   763   00005B                     	ds	2
   764   00005D                     vfpfcnvrt@fp:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x5C
   768   00005D                     	ds	1
   769   00005E                     vfpfcnvrt@fmt:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x5D
   773   00005E                     	ds	1
   774   00005F                     vfpfcnvrt@ap:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x5E
   778   00005F                     	ds	1
   779   000060                     
   780                           ; 1 bytes @ 0x5F
   781 ;;
   782 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   783 ;;
   784 ;; *************** function _main *****************
   785 ;; Defined at:
   786 ;;		line 27 in file "adc_lcd.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   800 ;;      Params:         0       0       0       0       0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels required when called: 8
   806 ;; This function calls:
   807 ;;		_ADC_Init
   808 ;;		_ADC_Read
   809 ;;		_Lcd_Init
   810 ;;		_Lcd_Set_Cursor
   811 ;;		_Lcd_Write_String
   812 ;;		___fldiv
   813 ;;		___flge
   814 ;;		___flmul
   815 ;;		___xxtofl
   816 ;;		_sprintf
   817 ;; This function is called by:
   818 ;;		Startup code after reset
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text0
   823   0026E0                     __ptext0:
   824                           	callstack 0
   825   0026E0                     _main:
   826                           	callstack 23
   827   0026E0                     
   828                           ;adc_lcd.c: 28:     ADC_Init(0x0E);
   829   0026E0  0E0E               	movlw	14
   830   0026E2  EC98  F019         	call	_ADC_Init
   831                           
   832                           ;adc_lcd.c: 29:     Lcd_Init();
   833   0026E6  ECED  F016         	call	_Lcd_Init	;wreg free
   834   0026EA                     
   835                           ;adc_lcd.c: 30:     TRISBbits.RB0 = 0;
   836   0026EA  9093               	bcf	147,0,c	;volatile
   837   0026EC                     
   838                           ;adc_lcd.c: 31:     LATBbits.LB0 = 0;
   839   0026EC  908A               	bcf	138,0,c	;volatile
   840   0026EE                     l5069:
   841                           
   842                           ;adc_lcd.c: 34:         valor_adc = ADC_Read(0);
   843   0026EE  0E00               	movlw	0
   844   0026F0  EC76  F018         	call	_ADC_Read
   845   0026F4  C001  F0BC         	movff	?_ADC_Read,_valor_adc
   846   0026F8  C002  F0BD         	movff	?_ADC_Read+1,_valor_adc+1
   847   0026FC                     
   848                           ;adc_lcd.c: 35:         voltaje = (float) (valor_adc * 5.0) / 1023.0;
   849   0026FC  0E00               	movlw	0
   850   0026FE  6E13               	movwf	___flmul@a^0,c
   851   002700  0E00               	movlw	0
   852   002702  6E14               	movwf	(___flmul@a+1)^0,c
   853   002704  0EA0               	movlw	160
   854   002706  6E15               	movwf	(___flmul@a+2)^0,c
   855   002708  0E40               	movlw	64
   856   00270A  6E16               	movwf	(___flmul@a+3)^0,c
   857   00270C  C0BC  F001         	movff	_valor_adc,___xxtofl@val
   858   002710  C0BD  F002         	movff	_valor_adc+1,___xxtofl@val+1
   859   002714  0E00               	movlw	0
   860   002716  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   861   002718  0EFF               	movlw	-1
   862   00271A  6E03               	movwf	(___xxtofl@val+2)^0,c
   863   00271C  6E04               	movwf	(___xxtofl@val+3)^0,c
   864   00271E  0E01               	movlw	1
   865   002720  EC02  F012         	call	___xxtofl
   866   002724  C001  F00F         	movff	?___xxtofl,___flmul@b
   867   002728  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   868   00272C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   869   002730  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   870   002734  EC9A  F00B         	call	___flmul	;wreg free
   871   002738  C00F  F028         	movff	?___flmul,___fldiv@b
   872   00273C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   873   002740  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   874   002744  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   875   002748  0E00               	movlw	0
   876   00274A  6E2C               	movwf	___fldiv@a^0,c
   877   00274C  0EC0               	movlw	192
   878   00274E  6E2D               	movwf	(___fldiv@a+1)^0,c
   879   002750  0E7F               	movlw	127
   880   002752  6E2E               	movwf	(___fldiv@a+2)^0,c
   881   002754  0E44               	movlw	68
   882   002756  6E2F               	movwf	(___fldiv@a+3)^0,c
   883   002758  ECAF  F00D         	call	___fldiv	;wreg free
   884   00275C  C028  F0B4         	movff	?___fldiv,_voltaje
   885   002760  C029  F0B5         	movff	?___fldiv+1,_voltaje+1
   886   002764  C02A  F0B6         	movff	?___fldiv+2,_voltaje+2
   887   002768  C02B  F0B7         	movff	?___fldiv+3,_voltaje+3
   888   00276C                     
   889                           ;adc_lcd.c: 37:         Lcd_Set_Cursor(1,1);
   890   00276C  0E01               	movlw	1
   891   00276E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   892   002770  0E01               	movlw	1
   893   002772  EC87  F015         	call	_Lcd_Set_Cursor
   894   002776                     
   895                           ;adc_lcd.c: 38:         sprintf(buffer, "ADC: %u", valor_adc);
   896   002776  0EBF               	movlw	low _buffer
   897   002778  0100               	movlb	0	; () banked
   898   00277A  6F99               	movwf	sprintf@s& (0+255),b
   899   00277C  0E10               	movlw	low STR_1
   900   00277E  6F9A               	movwf	sprintf@fmt& (0+255),b
   901   002780  C0BC  F09B         	movff	_valor_adc,?_sprintf+2
   902   002784  C0BD  F09C         	movff	_valor_adc+1,?_sprintf+3
   903   002788  ECF6  F018         	call	_sprintf	;wreg free
   904   00278C                     
   905                           ;adc_lcd.c: 39:         Lcd_Write_String(buffer);
   906   00278C  0EBF               	movlw	low _buffer
   907   00278E  6E05               	movwf	Lcd_Write_String@a^0,c
   908   002790  EC2E  F019         	call	_Lcd_Write_String	;wreg free
   909   002794                     
   910                           ;adc_lcd.c: 40:         Lcd_Set_Cursor(2,1);
   911   002794  0E01               	movlw	1
   912   002796  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   913   002798  0E02               	movlw	2
   914   00279A  EC87  F015         	call	_Lcd_Set_Cursor
   915   00279E                     
   916                           ;adc_lcd.c: 41:         sprintf(buffer, "Voltaje: %0.2f", voltaje);
   917   00279E  0EBF               	movlw	low _buffer
   918   0027A0  0100               	movlb	0	; () banked
   919   0027A2  6F99               	movwf	sprintf@s& (0+255),b
   920   0027A4  0E01               	movlw	low STR_2
   921   0027A6  6F9A               	movwf	sprintf@fmt& (0+255),b
   922   0027A8  C0B4  F09B         	movff	_voltaje,?_sprintf+2
   923   0027AC  C0B5  F09C         	movff	_voltaje+1,?_sprintf+3
   924   0027B0  C0B6  F09D         	movff	_voltaje+2,?_sprintf+4
   925   0027B4  C0B7  F09E         	movff	_voltaje+3,?_sprintf+5
   926   0027B8  ECF6  F018         	call	_sprintf	;wreg free
   927   0027BC                     
   928                           ;adc_lcd.c: 42:         Lcd_Write_String(buffer);
   929   0027BC  0EBF               	movlw	low _buffer
   930   0027BE  6E05               	movwf	Lcd_Write_String@a^0,c
   931   0027C0  EC2E  F019         	call	_Lcd_Write_String	;wreg free
   932   0027C4                     
   933                           ;adc_lcd.c: 44:         if (voltaje > 4.2) {
   934   0027C4  0E66               	movlw	102
   935   0027C6  6E28               	movwf	___flge@ff1^0,c
   936   0027C8  0E66               	movlw	102
   937   0027CA  6E29               	movwf	(___flge@ff1+1)^0,c
   938   0027CC  0E86               	movlw	134
   939   0027CE  6E2A               	movwf	(___flge@ff1+2)^0,c
   940   0027D0  0E40               	movlw	64
   941   0027D2  6E2B               	movwf	(___flge@ff1+3)^0,c
   942   0027D4  C0B4  F02C         	movff	_voltaje,___flge@ff2
   943   0027D8  C0B5  F02D         	movff	_voltaje+1,___flge@ff2+1
   944   0027DC  C0B6  F02E         	movff	_voltaje+2,___flge@ff2+2
   945   0027E0  C0B7  F02F         	movff	_voltaje+3,___flge@ff2+3
   946   0027E4  EC86  F014         	call	___flge	;wreg free
   947   0027E8  B0D8               	btfsc	status,0,c
   948   0027EA  EFF9  F013         	goto	u5851
   949   0027EE  EFFB  F013         	goto	u5850
   950   0027F2                     u5851:
   951   0027F2  EFFE  F013         	goto	l30
   952   0027F6                     u5850:
   953   0027F6                     
   954                           ;adc_lcd.c: 45:             LATBbits.LB0 = 1;
   955   0027F6  808A               	bsf	138,0,c	;volatile
   956                           
   957                           ;adc_lcd.c: 46:         } else {
   958   0027F8  EF77  F013         	goto	l5069
   959   0027FC                     l30:
   960                           
   961                           ;adc_lcd.c: 47:             LATBbits.LB0 = 0;
   962   0027FC  908A               	bcf	138,0,c	;volatile
   963   0027FE  EF77  F013         	goto	l5069
   964   002802  EF00  F000         	goto	start
   965   002806                     __end_of_main:
   966                           	callstack 0
   967                           
   968 ;; *************** function _sprintf *****************
   969 ;; Defined at:
   970 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  s               1   57[BANK0 ] PTR unsigned char 
   973 ;;		 -> buffer(20), 
   974 ;;  fmt             1   58[BANK0 ] PTR const unsigned char 
   975 ;;		 -> STR_2(15), STR_1(8), 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  f              12   64[BANK0 ] struct _IO_FILE
   978 ;;  ret             2    0        int 
   979 ;;  ap              1   63[BANK0 ] PTR void [1]
   980 ;;		 -> ?_sprintf(2), 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2   57[BANK0 ] int 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0       6       0       0       0       0       0       0       0
   991 ;;      Locals:         0      13       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0      19       0       0       0       0       0       0       0
   994 ;;Total ram usage:       19 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 7
   997 ;; This function calls:
   998 ;;		_vfprintf
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text1
  1005   0031EC                     __ptext1:
  1006                           	callstack 0
  1007   0031EC                     _sprintf:
  1008                           	callstack 23
  1009   0031EC  0E9B               	movlw	low (?_sprintf+2)
  1010   0031EE  0100               	movlb	0	; () banked
  1011   0031F0  6F9F               	movwf	sprintf@ap& (0+255),b
  1012   0031F2  C099  F0A0         	movff	sprintf@s,sprintf@f
  1013   0031F6                     
  1014                           ; BSR set to: 0
  1015   0031F6  0E00               	movlw	0
  1016   0031F8  6FA4               	movwf	(sprintf@f+4)& (0+255),b
  1017   0031FA  0E00               	movlw	0
  1018   0031FC  6FA3               	movwf	(sprintf@f+3)& (0+255),b
  1019   0031FE                     
  1020                           ; BSR set to: 0
  1021   0031FE  0E00               	movlw	0
  1022   003200  6FAB               	movwf	(sprintf@f+11)& (0+255),b
  1023   003202  0E00               	movlw	0
  1024   003204  6FAA               	movwf	(sprintf@f+10)& (0+255),b
  1025   003206                     
  1026                           ; BSR set to: 0
  1027   003206  0EA0               	movlw	low sprintf@f
  1028   003208  6F95               	movwf	vfprintf@fp& (0+255),b
  1029   00320A  C09A  F096         	movff	sprintf@fmt,vfprintf@fmt
  1030   00320E  0E9F               	movlw	low sprintf@ap
  1031   003210  6F97               	movwf	vfprintf@ap& (0+255),b
  1032   003212  EC99  F018         	call	_vfprintf	;wreg free
  1033   003216  0100               	movlb	0	; () banked
  1034   003218  5199               	movf	sprintf@s& (0+255),w,b
  1035   00321A  25A3               	addwf	(sprintf@f+3)& (0+255),w,b
  1036   00321C  6ED9               	movwf	fsr2l,c
  1037   00321E  6ADA               	clrf	fsr2h,c
  1038   003220  6ADF               	clrf	indf2,c
  1039   003222                     
  1040                           ; BSR set to: 0
  1041   003222  0012               	return		;funcret
  1042   003224                     __end_of_sprintf:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _vfprintf *****************
  1046 ;; Defined at:
  1047 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  fp              1   53[BANK0 ] PTR struct _IO_FILE
  1050 ;;		 -> sprintf@f(12), 
  1051 ;;  fmt             1   54[BANK0 ] PTR const unsigned char 
  1052 ;;		 -> STR_2(15), STR_1(8), 
  1053 ;;  ap              1   55[BANK0 ] PTR PTR void 
  1054 ;;		 -> sprintf@ap(1), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  cfmt            1   56[BANK0 ] PTR unsigned char 
  1057 ;;		 -> STR_2(15), STR_1(8), 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  2   53[BANK0 ] int 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1067 ;;      Params:         0       3       0       0       0       0       0       0       0
  1068 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1070 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1071 ;;Total ram usage:        4 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 6
  1074 ;; This function calls:
  1075 ;;		_vfpfcnvrt
  1076 ;; This function is called by:
  1077 ;;		_sprintf
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text2
  1082   003132                     __ptext2:
  1083                           	callstack 0
  1084   003132                     _vfprintf:
  1085                           	callstack 23
  1086   003132                     
  1087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1088   003132  C096  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  1089                           
  1090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1091   003136  EFA5  F018         	goto	l5045
  1092   00313A                     l5043:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1095   00313A  C095  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1096   00313E  0E98               	movlw	low vfprintf@cfmt
  1097   003140  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  1098   003142  C097  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1099   003146  EC7C  F00F         	call	_vfpfcnvrt	;wreg free
  1100   00314A                     l5045:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1103   00314A  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  1104   00314E                     	if	1	;There is more than 1 active tblptr byte
  1105   00314E  0E08               	movlw	high __smallconst
  1106   003150  6EF7               	movwf	tblptrh,c
  1107   003152                     	endif
  1108   003152                     	if	0	;tblptru may be non-zero
  1109   003152                     	endif
  1110   003152                     	if	0	;tblptru may be non-zero
  1111   003152                     	endif
  1112   003152  0008               	tblrd		*
  1113   003154  50F5               	movf	tablat,w,c
  1114   003156  0900               	iorlw	0
  1115   003158  A4D8               	btfss	status,2,c
  1116   00315A  EFB1  F018         	goto	u5841
  1117   00315E  EFB3  F018         	goto	u5840
  1118   003162                     u5841:
  1119   003162  EF9D  F018         	goto	l5043
  1120   003166                     u5840:
  1121   003166                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1123   003166  0E00               	movlw	0
  1124   003168  0100               	movlb	0	; () banked
  1125   00316A  6F96               	movwf	(?_vfprintf+1)& (0+255),b
  1126   00316C  0E00               	movlw	0
  1127   00316E  6F95               	movwf	?_vfprintf& (0+255),b
  1128   003170                     
  1129                           ; BSR set to: 0
  1130   003170  0012               	return		;funcret
  1131   003172                     __end_of_vfprintf:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _vfpfcnvrt *****************
  1135 ;; Defined at:
  1136 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  1139 ;;		 -> sprintf@f(12), 
  1140 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  1141 ;;		 -> vfprintf@cfmt(1), 
  1142 ;;  ap              1   94[COMRAM] PTR PTR void 
  1143 ;;		 -> sprintf@ap(1), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  convarg         4   47[BANK0 ] struct .
  1146 ;;  cp              1   52[BANK0 ] PTR unsigned char 
  1147 ;;		 -> STR_2(15), STR_1(8), 
  1148 ;;  c               1   51[BANK0 ] unsigned char 
  1149 ;;  done            1   46[BANK0 ] _Bool 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1159 ;;      Params:         3       0       0       0       0       0       0       0       0
  1160 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1161 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1162 ;;      Totals:         3       9       0       0       0       0       0       0       0
  1163 ;;Total ram usage:       12 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 5
  1166 ;; This function calls:
  1167 ;;		_efgtoa
  1168 ;;		_fputc
  1169 ;;		_read_prec_or_width
  1170 ;;		_utoa
  1171 ;; This function is called by:
  1172 ;;		_vfprintf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text3
  1177   001EF8                     __ptext3:
  1178                           	callstack 0
  1179   001EF8                     _vfpfcnvrt:
  1180                           	callstack 23
  1181   001EF8                     
  1182                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1183   001EF8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1184   001EFA  6ED9               	movwf	fsr2l,c
  1185   001EFC  6ADA               	clrf	fsr2h,c
  1186   001EFE  CFDF FFF6          	movff	indf2,tblptrl
  1187   001F02                     	if	1	;There is more than 1 active tblptr byte
  1188   001F02  0E08               	movlw	high __smallconst
  1189   001F04  6EF7               	movwf	tblptrh,c
  1190   001F06                     	endif
  1191   001F06                     	if	0	;tblptru may be non-zero
  1192   001F06                     	endif
  1193   001F06                     	if	0	;tblptru may be non-zero
  1194   001F06                     	endif
  1195   001F06  0008               	tblrd		*
  1196   001F08  50F5               	movf	tablat,w,c
  1197   001F0A  0A25               	xorlw	37
  1198   001F0C  A4D8               	btfss	status,2,c
  1199   001F0E  EF8B  F00F         	goto	u5791
  1200   001F12  EF8D  F00F         	goto	u5790
  1201   001F16                     u5791:
  1202   001F16  EFE7  F010         	goto	l5015
  1203   001F1A                     u5790:
  1204   001F1A                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1206   001F1A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1207   001F1C  6ED9               	movwf	fsr2l,c
  1208   001F1E  6ADA               	clrf	fsr2h,c
  1209   001F20  2ADF               	incf	indf2,f,c
  1210   001F22                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1212   001F22  0E00               	movlw	0
  1213   001F24  0100               	movlb	0	; () banked
  1214   001F26  6FB9               	movwf	(_width+1)& (0+255),b
  1215   001F28  0E00               	movlw	0
  1216   001F2A  6FB8               	movwf	_width& (0+255),b
  1217   001F2C  C0B8  F0BE         	movff	_width,_flags
  1218   001F30                     
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1221   001F30  69BA               	setf	_prec& (0+255),b
  1222   001F32  69BB               	setf	(_prec+1)& (0+255),b
  1223   001F34                     
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1226   001F34  0E00               	movlw	0
  1227   001F36  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1230   001F38  EFC2  F00F         	goto	l4953
  1231   001F3C                     l4943:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1235   001F3C  83BE               	bsf	_flags& (0+255),1,b
  1236   001F3E                     
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1239   001F3E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1240   001F40  6ED9               	movwf	fsr2l,c
  1241   001F42  6ADA               	clrf	fsr2h,c
  1242   001F44  2ADF               	incf	indf2,f,c
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1245   001F46  EFC2  F00F         	goto	l4953
  1246   001F4A                     l4947:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1250   001F4A  0E01               	movlw	1
  1251   001F4C  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1254   001F4E  EFC2  F00F         	goto	l4953
  1255   001F52                     l4951:
  1256                           
  1257                           ; BSR set to: 0
  1258   001F52  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1259   001F54  6ED9               	movwf	fsr2l,c
  1260   001F56  6ADA               	clrf	fsr2h,c
  1261   001F58  CFDF FFF6          	movff	indf2,tblptrl
  1262   001F5C                     	if	1	;There is more than 1 active tblptr byte
  1263   001F5C  0E08               	movlw	high __smallconst
  1264   001F5E  6EF7               	movwf	tblptrh,c
  1265   001F60                     	endif
  1266   001F60                     	if	0	;tblptru may be non-zero
  1267   001F60                     	endif
  1268   001F60                     	if	0	;tblptru may be non-zero
  1269   001F60                     	endif
  1270   001F60  0008               	tblrd		*
  1271   001F62  50F5               	movf	tablat,w,c
  1272   001F64  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
  1273   001F66  6B8D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1274                           
  1275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1276                           ; Switch size 1, requested type "simple"
  1277                           ; Number of cases is 1, Range of values is 0 to 0
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte            4     3 (average)
  1281                           ;	Chosen strategy is simple_byte
  1282   001F68  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1283   001F6A  0A00               	xorlw	0	; case 0
  1284   001F6C  B4D8               	btfsc	status,2,c
  1285   001F6E  EFBB  F00F         	goto	l5191
  1286   001F72  EFA5  F00F         	goto	l4947
  1287   001F76                     l5191:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 1, Range of values is 48 to 48
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            4     3 (average)
  1295                           ;	Chosen strategy is simple_byte
  1296   001F76  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1297   001F78  0A30               	xorlw	48	; case 48
  1298   001F7A  B4D8               	btfsc	status,2,c
  1299   001F7C  EF9E  F00F         	goto	l4943
  1300   001F80  EFA5  F00F         	goto	l4947
  1301   001F84                     l4953:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1305   001F84  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  1306   001F86  B4D8               	btfsc	status,2,c
  1307   001F88  EFC8  F00F         	goto	u5801
  1308   001F8C  EFCA  F00F         	goto	u5800
  1309   001F90                     u5801:
  1310   001F90  EFA9  F00F         	goto	l4951
  1311   001F94                     u5800:
  1312   001F94                     
  1313                           ; BSR set to: 0
  1314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1315   001F94  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1316   001F96  6ED9               	movwf	fsr2l,c
  1317   001F98  6ADA               	clrf	fsr2h,c
  1318   001F9A  CFDF FFF6          	movff	indf2,tblptrl
  1319   001F9E                     	if	1	;There is more than 1 active tblptr byte
  1320   001F9E  0E08               	movlw	high __smallconst
  1321   001FA0  6EF7               	movwf	tblptrh,c
  1322   001FA2                     	endif
  1323   001FA2                     	if	0	;tblptru may be non-zero
  1324   001FA2                     	endif
  1325   001FA2                     	if	0	;tblptru may be non-zero
  1326   001FA2                     	endif
  1327   001FA2  0008               	tblrd		*
  1328   001FA4  50F5               	movf	tablat,w,c
  1329   001FA6  0A2E               	xorlw	46
  1330   001FA8  A4D8               	btfss	status,2,c
  1331   001FAA  EFD9  F00F         	goto	u5811
  1332   001FAE  EFDB  F00F         	goto	u5810
  1333   001FB2                     u5811:
  1334   001FB2  EFE9  F00F         	goto	l4961
  1335   001FB6                     u5810:
  1336   001FB6                     
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1339   001FB6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1340   001FB8  6ED9               	movwf	fsr2l,c
  1341   001FBA  6ADA               	clrf	fsr2h,c
  1342   001FBC  2ADF               	incf	indf2,f,c
  1343   001FBE                     
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1346   001FBE  C05E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1347   001FC2  C05F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1348   001FC6  EC9A  F016         	call	_read_prec_or_width	;wreg free
  1349   001FCA  C007  F0BA         	movff	?_read_prec_or_width,_prec
  1350   001FCE  C008  F0BB         	movff	?_read_prec_or_width+1,_prec+1
  1351   001FD2                     l4961:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1354   001FD2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1355   001FD4  6ED9               	movwf	fsr2l,c
  1356   001FD6  6ADA               	clrf	fsr2h,c
  1357   001FD8  50DF               	movf	indf2,w,c
  1358   001FDA  0100               	movlb	0	; () banked
  1359   001FDC  6F94               	movwf	vfpfcnvrt@cp& (0+255),b
  1360   001FDE                     
  1361                           ; BSR set to: 0
  1362   001FDE  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1363   001FE2                     	if	1	;There is more than 1 active tblptr byte
  1364   001FE2  0E08               	movlw	high __smallconst
  1365   001FE4  6EF7               	movwf	tblptrh,c
  1366   001FE6                     	endif
  1367   001FE6                     	if	0	;tblptru may be non-zero
  1368   001FE6                     	endif
  1369   001FE6                     	if	0	;tblptru may be non-zero
  1370   001FE6                     	endif
  1371   001FE6  0008               	tblrd		*
  1372   001FE8  50F5               	movf	tablat,w,c
  1373   001FEA  0A75               	xorlw	117
  1374   001FEC  A4D8               	btfss	status,2,c
  1375   001FEE  EFFB  F00F         	goto	u5821
  1376   001FF2  EFFD  F00F         	goto	u5820
  1377   001FF6                     u5821:
  1378   001FF6  EF30  F010         	goto	l4977
  1379   001FFA                     u5820:
  1380   001FFA                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1383   001FFA  505F               	movf	vfpfcnvrt@ap^0,w,c
  1384   001FFC  6ED9               	movwf	fsr2l,c
  1385   001FFE  6ADA               	clrf	fsr2h,c
  1386   002000  0E02               	movlw	2
  1387   002002  26DF               	addwf	indf2,f,c
  1388   002004  5CDF               	subwf	indf2,w,c
  1389   002006  6ED9               	movwf	fsr2l,c
  1390   002008  6ADA               	clrf	fsr2h,c
  1391   00200A  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  1392   00200E  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  1393   002012                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1396   002012  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1397   002014  6ED9               	movwf	fsr2l,c
  1398   002016  6ADA               	clrf	fsr2h,c
  1399   002018  2994               	incf	vfpfcnvrt@cp& (0+255),w,b
  1400   00201A  6EDF               	movwf	indf2,c
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1403   00201C  EF1A  F010         	goto	l4975
  1404   002020                     l4969:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1408   002020  C05D  F017         	movff	vfpfcnvrt@fp,utoa@fp
  1409   002024  C08F  F018         	movff	vfpfcnvrt@convarg,utoa@d
  1410   002028  C090  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1411   00202C  ECDC  F012         	call	_utoa	;wreg free
  1412   002030  EFF8  F010         	goto	l930
  1413   002034                     l4975:
  1414                           
  1415                           ; BSR set to: 0
  1416   002034  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1417   002038                     	if	1	;There is more than 1 active tblptr byte
  1418   002038  0E08               	movlw	high __smallconst
  1419   00203A  6EF7               	movwf	tblptrh,c
  1420   00203C                     	endif
  1421   00203C                     	if	0	;tblptru may be non-zero
  1422   00203C                     	endif
  1423   00203C                     	if	0	;tblptru may be non-zero
  1424   00203C                     	endif
  1425   00203C  0008               	tblrd		*
  1426   00203E  50F5               	movf	tablat,w,c
  1427   002040  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
  1428   002042  6B8D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1429                           
  1430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1431                           ; Switch size 1, requested type "simple"
  1432                           ; Number of cases is 1, Range of values is 0 to 0
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte            4     3 (average)
  1436                           ;	Chosen strategy is simple_byte
  1437   002044  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1438   002046  0A00               	xorlw	0	; case 0
  1439   002048  B4D8               	btfsc	status,2,c
  1440   00204A  EF29  F010         	goto	l5193
  1441   00204E  EF30  F010         	goto	l4977
  1442   002052                     l5193:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 1, Range of values is 117 to 117
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte            4     3 (average)
  1450                           ;	Chosen strategy is simple_byte
  1451   002052  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1452   002054  0A75               	xorlw	117	; case 117
  1453   002056  B4D8               	btfsc	status,2,c
  1454   002058  EF10  F010         	goto	l4969
  1455   00205C  EF30  F010         	goto	l4977
  1456   002060                     l4977:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1460   002060  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1461   002062  6ED9               	movwf	fsr2l,c
  1462   002064  6ADA               	clrf	fsr2h,c
  1463   002066  50DF               	movf	indf2,w,c
  1464   002068  6F94               	movwf	vfpfcnvrt@cp& (0+255),b
  1465   00206A                     
  1466                           ; BSR set to: 0
  1467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1468   00206A  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1469   00206E                     	if	1	;There is more than 1 active tblptr byte
  1470   00206E  0E08               	movlw	high __smallconst
  1471   002070  6EF7               	movwf	tblptrh,c
  1472   002072                     	endif
  1473   002072                     	if	0	;tblptru may be non-zero
  1474   002072                     	endif
  1475   002072                     	if	0	;tblptru may be non-zero
  1476   002072                     	endif
  1477   002072  0008               	tblrd		*
  1478   002074  CFF5 F093          	movff	tablat,vfpfcnvrt@c
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1481   002078  EF49  F010         	goto	l4989
  1482   00207C                     l4981:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1486   00207C  2B94               	incf	vfpfcnvrt@cp& (0+255),f,b
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1489   00207E  EF62  F010         	goto	l4991
  1490   002082                     l4983:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1494   002082  0E6C               	movlw	108
  1495   002084  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  1498   002086  EF62  F010         	goto	l4991
  1499   00208A                     l4985:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1503   00208A  0E00               	movlw	0
  1504   00208C  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  1507   00208E  EF62  F010         	goto	l4991
  1508   002092                     l4989:
  1509                           
  1510                           ; BSR set to: 0
  1511   002092  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  1512   002094  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
  1513   002096  6B8D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1514                           
  1515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 1, Range of values is 0 to 0
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte            4     3 (average)
  1521                           ;	Chosen strategy is simple_byte
  1522   002098  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1523   00209A  0A00               	xorlw	0	; case 0
  1524   00209C  B4D8               	btfsc	status,2,c
  1525   00209E  EF53  F010         	goto	l5195
  1526   0020A2  EF45  F010         	goto	l4985
  1527   0020A6                     l5195:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 3, Range of values is 76 to 108
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte           10     6 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536   0020A6  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1537   0020A8  0A4C               	xorlw	76	; case 76
  1538   0020AA  B4D8               	btfsc	status,2,c
  1539   0020AC  EF3E  F010         	goto	l4981
  1540   0020B0  0A2A               	xorlw	42	; case 102
  1541   0020B2  B4D8               	btfsc	status,2,c
  1542   0020B4  EF41  F010         	goto	l4983
  1543   0020B8  0A0A               	xorlw	10	; case 108
  1544   0020BA  B4D8               	btfsc	status,2,c
  1545   0020BC  EF3E  F010         	goto	l4981
  1546   0020C0  EF45  F010         	goto	l4985
  1547   0020C4                     l4991:
  1548                           
  1549                           ; BSR set to: 0
  1550   0020C4  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1551   0020C8                     	if	1	;There is more than 1 active tblptr byte
  1552   0020C8  0E08               	movlw	high __smallconst
  1553   0020CA  6EF7               	movwf	tblptrh,c
  1554   0020CC                     	endif
  1555   0020CC                     	if	0	;tblptru may be non-zero
  1556   0020CC                     	endif
  1557   0020CC                     	if	0	;tblptru may be non-zero
  1558   0020CC                     	endif
  1559   0020CC  0008               	tblrd		*
  1560   0020CE  50F5               	movf	tablat,w,c
  1561   0020D0  0A66               	xorlw	102
  1562   0020D2  A4D8               	btfss	status,2,c
  1563   0020D4  EF6E  F010         	goto	u5831
  1564   0020D8  EF70  F010         	goto	u5830
  1565   0020DC                     u5831:
  1566   0020DC  EFE1  F010         	goto	l5011
  1567   0020E0                     u5830:
  1568   0020E0  EF9A  F010         	goto	l4999
  1569   0020E4                     l4993:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1573   0020E4  505F               	movf	vfpfcnvrt@ap^0,w,c
  1574   0020E6  6ED9               	movwf	fsr2l,c
  1575   0020E8  6ADA               	clrf	fsr2h,c
  1576   0020EA  CFDF F08C          	movff	indf2,??_vfpfcnvrt
  1577   0020EE  0E04               	movlw	4
  1578   0020F0  26DF               	addwf	indf2,f,c
  1579   0020F2  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1580   0020F4  6ED9               	movwf	fsr2l,c
  1581   0020F6  6ADA               	clrf	fsr2h,c
  1582   0020F8  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  1583   0020FC  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  1584   002100  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  1585   002104  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  1588   002108  EFAF  F010         	goto	l5001
  1589   00210C                     l4995:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1593   00210C  505F               	movf	vfpfcnvrt@ap^0,w,c
  1594   00210E  6ED9               	movwf	fsr2l,c
  1595   002110  6ADA               	clrf	fsr2h,c
  1596   002112  CFDF F08C          	movff	indf2,??_vfpfcnvrt
  1597   002116  0E04               	movlw	4
  1598   002118  26DF               	addwf	indf2,f,c
  1599   00211A  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1600   00211C  6ED9               	movwf	fsr2l,c
  1601   00211E  6ADA               	clrf	fsr2h,c
  1602   002120  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  1603   002124  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  1604   002128  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  1605   00212C  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  1608   002130  EFAF  F010         	goto	l5001
  1609   002134                     l4999:
  1610                           
  1611                           ; BSR set to: 0
  1612   002134  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  1613   002136  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
  1614   002138  6B8D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1615                           
  1616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1617                           ; Switch size 1, requested type "simple"
  1618                           ; Number of cases is 1, Range of values is 0 to 0
  1619                           ; switch strategies available:
  1620                           ; Name         Instructions Cycles
  1621                           ; simple_byte            4     3 (average)
  1622                           ;	Chosen strategy is simple_byte
  1623   00213A  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1624   00213C  0A00               	xorlw	0	; case 0
  1625   00213E  B4D8               	btfsc	status,2,c
  1626   002140  EFA4  F010         	goto	l5197
  1627   002144  EFAF  F010         	goto	l5001
  1628   002148                     l5197:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 2, Range of values is 76 to 108
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte            7     4 (average)
  1636                           ;	Chosen strategy is simple_byte
  1637   002148  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1638   00214A  0A4C               	xorlw	76	; case 76
  1639   00214C  B4D8               	btfsc	status,2,c
  1640   00214E  EF86  F010         	goto	l4995
  1641   002152  0A20               	xorlw	32	; case 108
  1642   002154  B4D8               	btfsc	status,2,c
  1643   002156  EF72  F010         	goto	l4993
  1644   00215A  EFAF  F010         	goto	l5001
  1645   00215E                     l5001:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1649   00215E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1650   002160  6ED9               	movwf	fsr2l,c
  1651   002162  6ADA               	clrf	fsr2h,c
  1652   002164  2994               	incf	vfpfcnvrt@cp& (0+255),w,b
  1653   002166  6EDF               	movwf	indf2,c
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1656   002168  EFCB  F010         	goto	l5009
  1657   00216C                     l5003:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1661   00216C  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1662   002170  C08F  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  1663   002174  C090  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1664   002178  C091  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1665   00217C  C092  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1666   002180  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1667   002184                     	if	1	;There is more than 1 active tblptr byte
  1668   002184  0E08               	movlw	high __smallconst
  1669   002186  6EF7               	movwf	tblptrh,c
  1670   002188                     	endif
  1671   002188                     	if	0	;tblptru may be non-zero
  1672   002188                     	endif
  1673   002188                     	if	0	;tblptru may be non-zero
  1674   002188                     	endif
  1675   002188  0008               	tblrd		*
  1676   00218A  CFF5 F05A          	movff	tablat,efgtoa@c
  1677   00218E  EC11  F004         	call	_efgtoa	;wreg free
  1678   002192  EFF8  F010         	goto	l930
  1679   002196                     l5009:
  1680                           
  1681                           ; BSR set to: 0
  1682   002196  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1683   00219A                     	if	1	;There is more than 1 active tblptr byte
  1684   00219A  0E08               	movlw	high __smallconst
  1685   00219C  6EF7               	movwf	tblptrh,c
  1686   00219E                     	endif
  1687   00219E                     	if	0	;tblptru may be non-zero
  1688   00219E                     	endif
  1689   00219E                     	if	0	;tblptru may be non-zero
  1690   00219E                     	endif
  1691   00219E  0008               	tblrd		*
  1692   0021A0  50F5               	movf	tablat,w,c
  1693   0021A2  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
  1694   0021A4  6B8D               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1695                           
  1696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1697                           ; Switch size 1, requested type "simple"
  1698                           ; Number of cases is 1, Range of values is 0 to 0
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte            4     3 (average)
  1702                           ;	Chosen strategy is simple_byte
  1703   0021A6  518D               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1704   0021A8  0A00               	xorlw	0	; case 0
  1705   0021AA  B4D8               	btfsc	status,2,c
  1706   0021AC  EFDA  F010         	goto	l5199
  1707   0021B0  EFE1  F010         	goto	l5011
  1708   0021B4                     l5199:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 1, Range of values is 102 to 102
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ;	Chosen strategy is simple_byte
  1717   0021B4  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  1718   0021B6  0A66               	xorlw	102	; case 102
  1719   0021B8  B4D8               	btfsc	status,2,c
  1720   0021BA  EFB6  F010         	goto	l5003
  1721   0021BE  EFE1  F010         	goto	l5011
  1722   0021C2                     l5011:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1725   0021C2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1726   0021C4  6ED9               	movwf	fsr2l,c
  1727   0021C6  6ADA               	clrf	fsr2h,c
  1728   0021C8  2ADF               	incf	indf2,f,c
  1729   0021CA  EFF8  F010         	goto	l930
  1730   0021CE                     l5015:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1733   0021CE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1734   0021D0  6ED9               	movwf	fsr2l,c
  1735   0021D2  6ADA               	clrf	fsr2h,c
  1736   0021D4  CFDF FFF6          	movff	indf2,tblptrl
  1737   0021D8                     	if	1	;There is more than 1 active tblptr byte
  1738   0021D8  0E08               	movlw	high __smallconst
  1739   0021DA  6EF7               	movwf	tblptrh,c
  1740   0021DC                     	endif
  1741   0021DC                     	if	0	;tblptru may be non-zero
  1742   0021DC                     	endif
  1743   0021DC                     	if	0	;tblptru may be non-zero
  1744   0021DC                     	endif
  1745   0021DC  0008               	tblrd		*
  1746   0021DE  50F5               	movf	tablat,w,c
  1747   0021E0  6E01               	movwf	fputc@c^0,c
  1748   0021E2  6A02               	clrf	(fputc@c+1)^0,c
  1749   0021E4  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1750   0021E8  ECF0  F015         	call	_fputc	;wreg free
  1751   0021EC  EFE1  F010         	goto	l5011
  1752   0021F0                     l930:
  1753   0021F0  0012               	return		;funcret
  1754   0021F2                     __end_of_vfpfcnvrt:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _utoa *****************
  1758 ;; Defined at:
  1759 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1762 ;;		 -> sprintf@f(12), 
  1763 ;;  d               2   23[COMRAM] unsigned int 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  i               2   29[COMRAM] int 
  1766 ;;  w               2   27[COMRAM] int 
  1767 ;;  p               2   25[COMRAM] int 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         3       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        9 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		___lwdiv
  1786 ;;		___lwmod
  1787 ;;		_pad
  1788 ;; This function is called by:
  1789 ;;		_vfpfcnvrt
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text4
  1794   0025B8                     __ptext4:
  1795                           	callstack 0
  1796   0025B8                     _utoa:
  1797                           	callstack 23
  1798   0025B8                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           1013:     if (!(prec < 0)) {
  1800   0025B8  0100               	movlb	0	; () banked
  1801   0025BA  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  1802   0025BC  EFE2  F012         	goto	u5701
  1803   0025C0  EFE4  F012         	goto	u5700
  1804   0025C4                     u5701:
  1805   0025C4  EFE5  F012         	goto	l4887
  1806   0025C8                     u5700:
  1807   0025C8                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  1810   0025C8  93BE               	bcf	_flags& (0+255),1,b
  1811   0025CA                     l4887:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  1815   0025CA  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  1816   0025CC  EFEC  F012         	goto	u5710
  1817   0025D0  EFEA  F012         	goto	u5711
  1818   0025D4                     u5711:
  1819   0025D4  EFF2  F012         	goto	l895
  1820   0025D8                     u5710:
  1821   0025D8                     
  1822                           ; BSR set to: 0
  1823   0025D8  0E00               	movlw	0
  1824   0025DA  6E1B               	movwf	(utoa@p+1)^0,c
  1825   0025DC  0E01               	movlw	1
  1826   0025DE  6E1A               	movwf	utoa@p^0,c
  1827   0025E0  EFF6  F012         	goto	l897
  1828   0025E4                     l895:
  1829                           
  1830                           ; BSR set to: 0
  1831   0025E4  C0BA  F01A         	movff	_prec,utoa@p
  1832   0025E8  C0BB  F01B         	movff	_prec+1,utoa@p+1
  1833   0025EC                     l897:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  1837   0025EC  C0B8  F01C         	movff	_width,utoa@w
  1838   0025F0  C0B9  F01D         	movff	_width+1,utoa@w+1
  1839   0025F4                     
  1840                           ; BSR set to: 0
  1841                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  1842   0025F4  0E00               	movlw	0
  1843   0025F6  6E1F               	movwf	(utoa@i+1)^0,c
  1844   0025F8  0E4F               	movlw	79
  1845   0025FA  6E1E               	movwf	utoa@i^0,c
  1846   0025FC                     
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  1849   0025FC  0E00               	movlw	0
  1850   0025FE  0101               	movlb	1	; () banked
  1851   002600  6F4F               	movwf	(_dbuf+79)& (0+255),b
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1854   002602  EF2D  F013         	goto	l4905
  1855   002606                     l4895:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  1858   002606  061E               	decf	utoa@i^0,f,c
  1859   002608  A0D8               	btfss	status,0,c
  1860   00260A  061F               	decf	(utoa@i+1)^0,f,c
  1861   00260C                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  1863   00260C  0E00               	movlw	low _dbuf
  1864   00260E  241E               	addwf	utoa@i^0,w,c
  1865   002610  6ED9               	movwf	fsr2l,c
  1866   002612  0E01               	movlw	high _dbuf
  1867   002614  201F               	addwfc	(utoa@i+1)^0,w,c
  1868   002616  6EDA               	movwf	fsr2h,c
  1869   002618  C018  F001         	movff	utoa@d,___lwmod@dividend
  1870   00261C  C019  F002         	movff	utoa@d+1,___lwmod@dividend+1
  1871   002620  0E00               	movlw	0
  1872   002622  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1873   002624  0E0A               	movlw	10
  1874   002626  6E03               	movwf	___lwmod@divisor^0,c
  1875   002628  ECA0  F017         	call	___lwmod	;wreg free
  1876   00262C  5001               	movf	?___lwmod^0,w,c
  1877   00262E  0F30               	addlw	48
  1878   002630  6EDF               	movwf	indf2,c
  1879   002632                     
  1880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  1881   002632  061A               	decf	utoa@p^0,f,c
  1882   002634  A0D8               	btfss	status,0,c
  1883   002636  061B               	decf	(utoa@p+1)^0,f,c
  1884   002638                     
  1885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  1886   002638  061C               	decf	utoa@w^0,f,c
  1887   00263A  A0D8               	btfss	status,0,c
  1888   00263C  061D               	decf	(utoa@w+1)^0,f,c
  1889   00263E                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  1891   00263E  C018  F001         	movff	utoa@d,___lwdiv@dividend
  1892   002642  C019  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  1893   002646  0E00               	movlw	0
  1894   002648  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1895   00264A  0E0A               	movlw	10
  1896   00264C  6E03               	movwf	___lwdiv@divisor^0,c
  1897   00264E  EC33  F017         	call	___lwdiv	;wreg free
  1898   002652  C001  F018         	movff	?___lwdiv,utoa@d
  1899   002656  C002  F019         	movff	?___lwdiv+1,utoa@d+1
  1900   00265A                     l4905:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1903   00265A  501E               	movf	utoa@i^0,w,c
  1904   00265C  101F               	iorwf	(utoa@i+1)^0,w,c
  1905   00265E  B4D8               	btfsc	status,2,c
  1906   002660  EF34  F013         	goto	u5721
  1907   002664  EF36  F013         	goto	u5720
  1908   002668                     u5721:
  1909   002668  EF61  F013         	goto	l4915
  1910   00266C                     u5720:
  1911   00266C  5018               	movf	utoa@d^0,w,c
  1912   00266E  1019               	iorwf	(utoa@d+1)^0,w,c
  1913   002670  A4D8               	btfss	status,2,c
  1914   002672  EF3D  F013         	goto	u5731
  1915   002676  EF3F  F013         	goto	u5730
  1916   00267A                     u5731:
  1917   00267A  EF03  F013         	goto	l4895
  1918   00267E                     u5730:
  1919   00267E  BE1B               	btfsc	(utoa@p+1)^0,7,c
  1920   002680  EF4C  F013         	goto	u5740
  1921   002684  501B               	movf	(utoa@p+1)^0,w,c
  1922   002686  E106               	bnz	u5741
  1923   002688  041A               	decf	utoa@p^0,w,c
  1924   00268A  B0D8               	btfsc	status,0,c
  1925   00268C  EF4A  F013         	goto	u5741
  1926   002690  EF4C  F013         	goto	u5740
  1927   002694                     u5741:
  1928   002694  EF03  F013         	goto	l4895
  1929   002698                     u5740:
  1930   002698  BE1D               	btfsc	(utoa@w+1)^0,7,c
  1931   00269A  EF57  F013         	goto	u5751
  1932   00269E  501D               	movf	(utoa@w+1)^0,w,c
  1933   0026A0  E108               	bnz	u5750
  1934   0026A2  041C               	decf	utoa@w^0,w,c
  1935   0026A4  A0D8               	btfss	status,0,c
  1936   0026A6  EF57  F013         	goto	u5751
  1937   0026AA  EF59  F013         	goto	u5750
  1938   0026AE                     u5751:
  1939   0026AE  EF61  F013         	goto	l4915
  1940   0026B2                     u5750:
  1941   0026B2  0100               	movlb	0	; () banked
  1942   0026B4  B3BE               	btfsc	_flags& (0+255),1,b
  1943   0026B6  EF5F  F013         	goto	u5761
  1944   0026BA  EF61  F013         	goto	u5760
  1945   0026BE                     u5761:
  1946   0026BE  EF03  F013         	goto	l4895
  1947   0026C2                     u5760:
  1948   0026C2                     l4915:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  1951   0026C2  C017  F00F         	movff	utoa@fp,pad@fp
  1952   0026C6  0E00               	movlw	low _dbuf
  1953   0026C8  241E               	addwf	utoa@i^0,w,c
  1954   0026CA  6E10               	movwf	pad@buf^0,c
  1955   0026CC  0E01               	movlw	high _dbuf
  1956   0026CE  201F               	addwfc	(utoa@i+1)^0,w,c
  1957   0026D0  6E11               	movwf	(pad@buf+1)^0,c
  1958   0026D2  C01C  F012         	movff	utoa@w,pad@p
  1959   0026D6  C01D  F013         	movff	utoa@w+1,pad@p+1
  1960   0026DA  EC6D  F017         	call	_pad	;wreg free
  1961   0026DE  0012               	return		;funcret
  1962   0026E0                     __end_of_utoa:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function ___lwmod *****************
  1966 ;; Defined at:
  1967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dividend        2    0[COMRAM] unsigned int 
  1970 ;;  divisor         2    2[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  counter         1    4[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[COMRAM] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1982 ;;      Params:         4       0       0       0       0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1985 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        5 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_utoa
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text5
  1996   002F40                     __ptext5:
  1997                           	callstack 0
  1998   002F40                     ___lwmod:
  1999                           	callstack 26
  2000   002F40  5003               	movf	___lwmod@divisor^0,w,c
  2001   002F42  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2002   002F44  B4D8               	btfsc	status,2,c
  2003   002F46  EFA7  F017         	goto	u5101
  2004   002F4A  EFA9  F017         	goto	u5100
  2005   002F4E                     u5101:
  2006   002F4E  EFCD  F017         	goto	l624
  2007   002F52                     u5100:
  2008   002F52  0E01               	movlw	1
  2009   002F54  6E05               	movwf	___lwmod@counter^0,c
  2010   002F56  EFB1  F017         	goto	l4553
  2011   002F5A                     l4551:
  2012   002F5A  90D8               	bcf	status,0,c
  2013   002F5C  3603               	rlcf	___lwmod@divisor^0,f,c
  2014   002F5E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2015   002F60  2A05               	incf	___lwmod@counter^0,f,c
  2016   002F62                     l4553:
  2017   002F62  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2018   002F64  EFB6  F017         	goto	u5111
  2019   002F68  EFB8  F017         	goto	u5110
  2020   002F6C                     u5111:
  2021   002F6C  EFAD  F017         	goto	l4551
  2022   002F70                     u5110:
  2023   002F70                     l4555:
  2024   002F70  5003               	movf	___lwmod@divisor^0,w,c
  2025   002F72  5C01               	subwf	___lwmod@dividend^0,w,c
  2026   002F74  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2027   002F76  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2028   002F78  A0D8               	btfss	status,0,c
  2029   002F7A  EFC1  F017         	goto	u5121
  2030   002F7E  EFC3  F017         	goto	u5120
  2031   002F82                     u5121:
  2032   002F82  EFC7  F017         	goto	l4559
  2033   002F86                     u5120:
  2034   002F86  5003               	movf	___lwmod@divisor^0,w,c
  2035   002F88  5E01               	subwf	___lwmod@dividend^0,f,c
  2036   002F8A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2037   002F8C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2038   002F8E                     l4559:
  2039   002F8E  90D8               	bcf	status,0,c
  2040   002F90  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2041   002F92  3203               	rrcf	___lwmod@divisor^0,f,c
  2042   002F94  2E05               	decfsz	___lwmod@counter^0,f,c
  2043   002F96  EFB8  F017         	goto	l4555
  2044   002F9A                     l624:
  2045   002F9A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2046   002F9E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2047   002FA2  0012               	return		;funcret
  2048   002FA4                     __end_of___lwmod:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function ___lwdiv *****************
  2052 ;; Defined at:
  2053 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  dividend        2    0[COMRAM] unsigned int 
  2056 ;;  divisor         2    2[COMRAM] unsigned int 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  quotient        2    5[COMRAM] unsigned int 
  2059 ;;  counter         1    4[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2    0[COMRAM] unsigned int 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         4       0       0       0       0       0       0       0       0
  2070 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2072 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2073 ;;Total ram usage:        7 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_utoa
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text6
  2083   002E66                     __ptext6:
  2084                           	callstack 0
  2085   002E66                     ___lwdiv:
  2086                           	callstack 26
  2087   002E66  0E00               	movlw	0
  2088   002E68  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  2089   002E6A  0E00               	movlw	0
  2090   002E6C  6E06               	movwf	___lwdiv@quotient^0,c
  2091   002E6E  5003               	movf	___lwdiv@divisor^0,w,c
  2092   002E70  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2093   002E72  B4D8               	btfsc	status,2,c
  2094   002E74  EF3E  F017         	goto	u5071
  2095   002E78  EF40  F017         	goto	u5070
  2096   002E7C                     u5071:
  2097   002E7C  EF68  F017         	goto	l614
  2098   002E80                     u5070:
  2099   002E80  0E01               	movlw	1
  2100   002E82  6E05               	movwf	___lwdiv@counter^0,c
  2101   002E84  EF48  F017         	goto	l4533
  2102   002E88                     l4531:
  2103   002E88  90D8               	bcf	status,0,c
  2104   002E8A  3603               	rlcf	___lwdiv@divisor^0,f,c
  2105   002E8C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2106   002E8E  2A05               	incf	___lwdiv@counter^0,f,c
  2107   002E90                     l4533:
  2108   002E90  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2109   002E92  EF4D  F017         	goto	u5081
  2110   002E96  EF4F  F017         	goto	u5080
  2111   002E9A                     u5081:
  2112   002E9A  EF44  F017         	goto	l4531
  2113   002E9E                     u5080:
  2114   002E9E                     l4535:
  2115   002E9E  90D8               	bcf	status,0,c
  2116   002EA0  3606               	rlcf	___lwdiv@quotient^0,f,c
  2117   002EA2  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2118   002EA4  5003               	movf	___lwdiv@divisor^0,w,c
  2119   002EA6  5C01               	subwf	___lwdiv@dividend^0,w,c
  2120   002EA8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2121   002EAA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2122   002EAC  A0D8               	btfss	status,0,c
  2123   002EAE  EF5B  F017         	goto	u5091
  2124   002EB2  EF5D  F017         	goto	u5090
  2125   002EB6                     u5091:
  2126   002EB6  EF62  F017         	goto	l4543
  2127   002EBA                     u5090:
  2128   002EBA  5003               	movf	___lwdiv@divisor^0,w,c
  2129   002EBC  5E01               	subwf	___lwdiv@dividend^0,f,c
  2130   002EBE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2131   002EC0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2132   002EC2  8006               	bsf	___lwdiv@quotient^0,0,c
  2133   002EC4                     l4543:
  2134   002EC4  90D8               	bcf	status,0,c
  2135   002EC6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2136   002EC8  3203               	rrcf	___lwdiv@divisor^0,f,c
  2137   002ECA  2E05               	decfsz	___lwdiv@counter^0,f,c
  2138   002ECC  EF4F  F017         	goto	l4535
  2139   002ED0                     l614:
  2140   002ED0  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  2141   002ED4  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2142   002ED8  0012               	return		;funcret
  2143   002EDA                     __end_of___lwdiv:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _read_prec_or_width *****************
  2147 ;; Defined at:
  2148 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2151 ;;		 -> vfprintf@cfmt(1), 
  2152 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2153 ;;		 -> sprintf@ap(1), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  c               1    8[COMRAM] unsigned char 
  2156 ;;  n               2    9[COMRAM] int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    6[COMRAM] int 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2166 ;;      Params:         2       0       0       0       0       0       0       0       0
  2167 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2169 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2170 ;;Total ram usage:        5 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		___wmul
  2175 ;; This function is called by:
  2176 ;;		_vfpfcnvrt
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text7
  2181   002D34                     __ptext7:
  2182                           	callstack 0
  2183   002D34                     _read_prec_or_width:
  2184                           	callstack 26
  2185   002D34                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2187   002D34  0E00               	movlw	0
  2188   002D36  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2189   002D38  0E00               	movlw	0
  2190   002D3A  6E0A               	movwf	read_prec_or_width@n^0,c
  2191   002D3C                     
  2192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2193   002D3C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2194   002D3E  6ED9               	movwf	fsr2l,c
  2195   002D40  6ADA               	clrf	fsr2h,c
  2196   002D42  CFDF FFF6          	movff	indf2,tblptrl
  2197   002D46                     	if	1	;There is more than 1 active tblptr byte
  2198   002D46  0E08               	movlw	high __smallconst
  2199   002D48  6EF7               	movwf	tblptrh,c
  2200   002D4A                     	endif
  2201   002D4A                     	if	0	;tblptru may be non-zero
  2202   002D4A                     	endif
  2203   002D4A                     	if	0	;tblptru may be non-zero
  2204   002D4A                     	endif
  2205   002D4A  0008               	tblrd		*
  2206   002D4C  50F5               	movf	tablat,w,c
  2207   002D4E  0A2A               	xorlw	42
  2208   002D50  A4D8               	btfss	status,2,c
  2209   002D52  EFAD  F016         	goto	u5771
  2210   002D56  EFAF  F016         	goto	u5770
  2211   002D5A                     u5771:
  2212   002D5A  EFD5  F016         	goto	l4931
  2213   002D5E                     u5770:
  2214   002D5E                     
  2215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2216   002D5E  5007               	movf	read_prec_or_width@fmt^0,w,c
  2217   002D60  6ED9               	movwf	fsr2l,c
  2218   002D62  6ADA               	clrf	fsr2h,c
  2219   002D64  2ADF               	incf	indf2,f,c
  2220   002D66                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2222   002D66  5008               	movf	read_prec_or_width@ap^0,w,c
  2223   002D68  6ED9               	movwf	fsr2l,c
  2224   002D6A  6ADA               	clrf	fsr2h,c
  2225   002D6C  0E02               	movlw	2
  2226   002D6E  26DF               	addwf	indf2,f,c
  2227   002D70  5CDF               	subwf	indf2,w,c
  2228   002D72  6ED9               	movwf	fsr2l,c
  2229   002D74  6ADA               	clrf	fsr2h,c
  2230   002D76  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2231   002D7A  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2234   002D7E  EFE8  F016         	goto	l909
  2235   002D82                     l4927:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2238   002D82  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2239   002D86  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2240   002D8A  0E00               	movlw	0
  2241   002D8C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2242   002D8E  0E0A               	movlw	10
  2243   002D90  6E03               	movwf	___wmul@multiplicand^0,c
  2244   002D92  EC64  F019         	call	___wmul	;wreg free
  2245   002D96  5009               	movf	read_prec_or_width@c^0,w,c
  2246   002D98  2401               	addwf	?___wmul^0,w,c
  2247   002D9A  6E0A               	movwf	read_prec_or_width@n^0,c
  2248   002D9C  0E00               	movlw	0
  2249   002D9E  2002               	addwfc	(?___wmul+1)^0,w,c
  2250   002DA0  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2251   002DA2                     
  2252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2253   002DA2  5007               	movf	read_prec_or_width@fmt^0,w,c
  2254   002DA4  6ED9               	movwf	fsr2l,c
  2255   002DA6  6ADA               	clrf	fsr2h,c
  2256   002DA8  2ADF               	incf	indf2,f,c
  2257   002DAA                     l4931:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2260   002DAA  5007               	movf	read_prec_or_width@fmt^0,w,c
  2261   002DAC  6ED9               	movwf	fsr2l,c
  2262   002DAE  6ADA               	clrf	fsr2h,c
  2263   002DB0  CFDF FFF6          	movff	indf2,tblptrl
  2264   002DB4                     	if	1	;There is more than 1 active tblptr byte
  2265   002DB4  0E08               	movlw	high __smallconst
  2266   002DB6  6EF7               	movwf	tblptrh,c
  2267   002DB8                     	endif
  2268   002DB8                     	if	0	;tblptru may be non-zero
  2269   002DB8                     	endif
  2270   002DB8                     	if	0	;tblptru may be non-zero
  2271   002DB8                     	endif
  2272   002DB8  0008               	tblrd		*
  2273   002DBA  50F5               	movf	tablat,w,c
  2274   002DBC  0FD0               	addlw	208
  2275   002DBE  6E09               	movwf	read_prec_or_width@c^0,c
  2276   002DC0  0E09               	movlw	9
  2277   002DC2  6409               	cpfsgt	read_prec_or_width@c^0,c
  2278   002DC4  EFE6  F016         	goto	u5781
  2279   002DC8  EFE8  F016         	goto	u5780
  2280   002DCC                     u5781:
  2281   002DCC  EFC1  F016         	goto	l4927
  2282   002DD0                     u5780:
  2283   002DD0                     l909:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2286   002DD0  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2287   002DD4  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2288   002DD8  0012               	return		;funcret
  2289   002DDA                     __end_of_read_prec_or_width:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function ___wmul *****************
  2293 ;; Defined at:
  2294 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  multiplier      2    0[COMRAM] unsigned int 
  2297 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  product         2    4[COMRAM] unsigned int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  2    0[COMRAM] unsigned int 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, prodl, prodh
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         4       0       0       0       0       0       0       0       0
  2310 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2312 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        6 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_read_prec_or_width
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text8
  2323   0032C8                     __ptext8:
  2324                           	callstack 0
  2325   0032C8                     ___wmul:
  2326                           	callstack 26
  2327   0032C8  5001               	movf	___wmul@multiplier^0,w,c
  2328   0032CA  0203               	mulwf	___wmul@multiplicand^0,c
  2329   0032CC  CFF3 F005          	movff	prodl,___wmul@product
  2330   0032D0  CFF4 F006          	movff	prodh,___wmul@product+1
  2331   0032D4  5001               	movf	___wmul@multiplier^0,w,c
  2332   0032D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2333   0032D8  50F3               	movf	243,w,c
  2334   0032DA  2606               	addwf	(___wmul@product+1)^0,f,c
  2335   0032DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2336   0032DE  0203               	mulwf	___wmul@multiplicand^0,c
  2337   0032E0  50F3               	movf	243,w,c
  2338   0032E2  2606               	addwf	(___wmul@product+1)^0,f,c
  2339   0032E4  C005  F001         	movff	___wmul@product,?___wmul
  2340   0032E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2341   0032EC  0012               	return		;funcret
  2342   0032EE                     __end_of___wmul:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _efgtoa *****************
  2346 ;; Defined at:
  2347 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  2350 ;;		 -> sprintf@f(12), 
  2351 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  2352 ;;  c               1   89[COMRAM] unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  u               4   40[BANK0 ] struct flui
  2355 ;;  g               4   34[BANK0 ] struct flui
  2356 ;;  l               4   27[BANK0 ] struct flui
  2357 ;;  h               4   23[BANK0 ] struct flui
  2358 ;;  ou              4   17[BANK0 ] struct flui
  2359 ;;  n               2   38[BANK0 ] int 
  2360 ;;  i               2   31[BANK0 ] int 
  2361 ;;  w               2   21[BANK0 ] int 
  2362 ;;  e               2   15[BANK0 ] int 
  2363 ;;  m               2   13[BANK0 ] int 
  2364 ;;  d               2   11[BANK0 ] int 
  2365 ;;  t               2    4[BANK0 ] int 
  2366 ;;  p               2    2[BANK0 ] int 
  2367 ;;  ne              2    0[BANK0 ] int 
  2368 ;;  sign            1   33[BANK0 ] unsigned char 
  2369 ;;  nmode           1   10[BANK0 ] unsigned char 
  2370 ;;  mode            1    9[BANK0 ] unsigned char 
  2371 ;;  pp              1    8[BANK0 ] unsigned char 
  2372 ;;  esign           1    0        unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         6       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2384 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         8      44       0       0       0       0       0       0       0
  2386 ;;Total ram usage:       52 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 4
  2389 ;; This function calls:
  2390 ;;		___fladd
  2391 ;;		___fldiv
  2392 ;;		___fleq
  2393 ;;		___flge
  2394 ;;		___flmul
  2395 ;;		___flneg
  2396 ;;		___flsub
  2397 ;;		___fltol
  2398 ;;		___fpclassifyf
  2399 ;;		_floorf
  2400 ;;		_labs
  2401 ;;		_memcpy
  2402 ;;		_pad
  2403 ;;		_strcpy
  2404 ;; This function is called by:
  2405 ;;		_vfpfcnvrt
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text9
  2410   000822                     __ptext9:
  2411                           	callstack 0
  2412   000822                     _efgtoa:
  2413                           	callstack 23
  2414   000822                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2416   000822  0E00               	movlw	0
  2417   000824  0100               	movlb	0	; () banked
  2418   000826  6F81               	movwf	efgtoa@sign& (0+255),b
  2419   000828                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2422   000828  C056  F082         	movff	efgtoa@f,efgtoa@g
  2423   00082C  C057  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2424   000830  C058  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2425   000834  C059  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2426   000838                     
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2429   000838  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2430   00083A  EF23  F004         	goto	u5350
  2431   00083E  EF21  F004         	goto	u5351
  2432   000842                     u5351:
  2433   000842  EF37  F004         	goto	l4659
  2434   000846                     u5350:
  2435   000846                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2438   000846  0E01               	movlw	1
  2439   000848  6F81               	movwf	efgtoa@sign& (0+255),b
  2440   00084A                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2443   00084A  C082  F001         	movff	efgtoa@g,___flneg@f1
  2444   00084E  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2445   000852  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2446   000856  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2447   00085A  EC12  F019         	call	___flneg	;wreg free
  2448   00085E  C001  F082         	movff	?___flneg,efgtoa@g
  2449   000862  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2450   000866  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2451   00086A  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2452   00086E                     l4659:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2455   00086E  0E00               	movlw	0
  2456   000870  0100               	movlb	0	; () banked
  2457   000872  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2458   000874  0E00               	movlw	0
  2459   000876  6F86               	movwf	efgtoa@n& (0+255),b
  2460   000878                     
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2463   000878  C0B8  F075         	movff	_width,efgtoa@w
  2464   00087C  C0B9  F076         	movff	_width+1,efgtoa@w+1
  2465   000880                     
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2468   000880  5181               	movf	efgtoa@sign& (0+255),w,b
  2469   000882  B4D8               	btfsc	status,2,c
  2470   000884  EF46  F004         	goto	u5361
  2471   000888  EF48  F004         	goto	u5360
  2472   00088C                     u5361:
  2473   00088C  EF5C  F004         	goto	l4673
  2474   000890                     u5360:
  2475   000890                     
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2478   000890  5181               	movf	efgtoa@sign& (0+255),w,b
  2479   000892  A4D8               	btfss	status,2,c
  2480   000894  EF4E  F004         	goto	u5371
  2481   000898  EF50  F004         	goto	u5370
  2482   00089C                     u5371:
  2483   00089C  EF56  F004         	goto	l4669
  2484   0008A0                     u5370:
  2485   0008A0                     
  2486                           ; BSR set to: 0
  2487   0008A0  0E00               	movlw	0
  2488   0008A2  6F67               	movwf	(_efgtoa$941+1)& (0+255),b
  2489   0008A4  0E2B               	movlw	43
  2490   0008A6  6F66               	movwf	_efgtoa$941& (0+255),b
  2491   0008A8  EF5A  F004         	goto	l4671
  2492   0008AC                     l4669:
  2493                           
  2494                           ; BSR set to: 0
  2495   0008AC  0E00               	movlw	0
  2496   0008AE  6F67               	movwf	(_efgtoa$941+1)& (0+255),b
  2497   0008B0  0E2D               	movlw	45
  2498   0008B2  6F66               	movwf	_efgtoa$941& (0+255),b
  2499   0008B4                     l4671:
  2500                           
  2501                           ; BSR set to: 0
  2502   0008B4  C066  F081         	movff	_efgtoa$941,efgtoa@sign
  2503   0008B8                     l4673:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2507   0008B8  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2508   0008BC  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2509   0008C0  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2510   0008C4  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2511   0008C8  EC08  F015         	call	___fpclassifyf	;wreg free
  2512   0008CC  0401               	decf	?___fpclassifyf^0,w,c
  2513   0008CE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2514   0008D0  A4D8               	btfss	status,2,c
  2515   0008D2  EF6D  F004         	goto	u5381
  2516   0008D6  EF6F  F004         	goto	u5380
  2517   0008DA                     u5381:
  2518   0008DA  EF9E  F004         	goto	l4691
  2519   0008DE                     u5380:
  2520   0008DE                     
  2521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2522   0008DE  0100               	movlb	0	; () banked
  2523   0008E0  5181               	movf	efgtoa@sign& (0+255),w,b
  2524   0008E2  B4D8               	btfsc	status,2,c
  2525   0008E4  EF76  F004         	goto	u5391
  2526   0008E8  EF78  F004         	goto	u5390
  2527   0008EC                     u5391:
  2528   0008EC  EF81  F004         	goto	l4683
  2529   0008F0                     u5390:
  2530   0008F0                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2533   0008F0  C081  F100         	movff	efgtoa@sign,_dbuf
  2534   0008F4                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2537   0008F4  0775               	decf	efgtoa@w& (0+255),f,b
  2538   0008F6  A0D8               	btfss	status,0,c
  2539   0008F8  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2540   0008FA                     
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2543   0008FA  0E00               	movlw	0
  2544   0008FC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2545   0008FE  0E01               	movlw	1
  2546   000900  6F86               	movwf	efgtoa@n& (0+255),b
  2547   000902                     l4683:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2551   000902  0E00               	movlw	low _dbuf
  2552   000904  2586               	addwf	efgtoa@n& (0+255),w,b
  2553   000906  6E01               	movwf	strcpy@dest^0,c
  2554   000908  0E01               	movlw	high _dbuf
  2555   00090A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2556   00090C  6E02               	movwf	(strcpy@dest+1)^0,c
  2557   00090E  0E18               	movlw	low STR_3
  2558   000910  6E03               	movwf	strcpy@src^0,c
  2559   000912  ECD9  F018         	call	_strcpy	;wreg free
  2560   000916                     l4685:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2563   000916  0100               	movlb	0	; () banked
  2564   000918  0EFD               	movlw	253
  2565   00091A  2775               	addwf	efgtoa@w& (0+255),f,b
  2566   00091C  0EFF               	movlw	255
  2567   00091E  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2568   000920                     
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2571   000920  C055  F00F         	movff	efgtoa@fp,pad@fp
  2572   000924  0E00               	movlw	low _dbuf
  2573   000926  6E10               	movwf	pad@buf^0,c
  2574   000928  0E01               	movlw	high _dbuf
  2575   00092A  6E11               	movwf	(pad@buf+1)^0,c
  2576   00092C  C075  F012         	movff	efgtoa@w,pad@p
  2577   000930  C076  F013         	movff	efgtoa@w+1,pad@p+1
  2578   000934  EC6D  F017         	call	_pad	;wreg free
  2579   000938  EF39  F009         	goto	l843
  2580   00093C                     l4691:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2583   00093C  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2584   000940  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2585   000944  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2586   000948  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2587   00094C  EC08  F015         	call	___fpclassifyf	;wreg free
  2588   000950  5001               	movf	?___fpclassifyf^0,w,c
  2589   000952  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2590   000954  A4D8               	btfss	status,2,c
  2591   000956  EFAF  F004         	goto	u5401
  2592   00095A  EFB1  F004         	goto	u5400
  2593   00095E                     u5401:
  2594   00095E  EFCF  F004         	goto	l4709
  2595   000962                     u5400:
  2596   000962                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2598   000962  0100               	movlb	0	; () banked
  2599   000964  5181               	movf	efgtoa@sign& (0+255),w,b
  2600   000966  B4D8               	btfsc	status,2,c
  2601   000968  EFB8  F004         	goto	u5411
  2602   00096C  EFBA  F004         	goto	u5410
  2603   000970                     u5411:
  2604   000970  EFC3  F004         	goto	l4701
  2605   000974                     u5410:
  2606   000974                     
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2609   000974  C081  F100         	movff	efgtoa@sign,_dbuf
  2610   000978                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2613   000978  0775               	decf	efgtoa@w& (0+255),f,b
  2614   00097A  A0D8               	btfss	status,0,c
  2615   00097C  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2616   00097E                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2619   00097E  0E00               	movlw	0
  2620   000980  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2621   000982  0E01               	movlw	1
  2622   000984  6F86               	movwf	efgtoa@n& (0+255),b
  2623   000986                     l4701:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2627   000986  0E00               	movlw	low _dbuf
  2628   000988  2586               	addwf	efgtoa@n& (0+255),w,b
  2629   00098A  6E01               	movwf	strcpy@dest^0,c
  2630   00098C  0E01               	movlw	high _dbuf
  2631   00098E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2632   000990  6E02               	movwf	(strcpy@dest+1)^0,c
  2633   000992  0E1C               	movlw	low STR_6
  2634   000994  6E03               	movwf	strcpy@src^0,c
  2635   000996  ECD9  F018         	call	_strcpy	;wreg free
  2636   00099A  EF8B  F004         	goto	l4685
  2637   00099E                     l4709:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2640   00099E  0E00               	movlw	0
  2641   0009A0  0100               	movlb	0	; () banked
  2642   0009A2  6F88               	movwf	efgtoa@u& (0+255),b
  2643   0009A4  0E00               	movlw	0
  2644   0009A6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2645   0009A8  0E80               	movlw	128
  2646   0009AA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2647   0009AC  0E3F               	movlw	63
  2648   0009AE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2651   0009B0  0E00               	movlw	0
  2652   0009B2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2653   0009B4  0E00               	movlw	0
  2654   0009B6  6F6F               	movwf	efgtoa@e& (0+255),b
  2655   0009B8                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2658   0009B8  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2659   0009BC  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2660   0009C0  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2661   0009C4  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2662   0009C8  0E00               	movlw	0
  2663   0009CA  6E05               	movwf	___fleq@ff2^0,c
  2664   0009CC  0E00               	movlw	0
  2665   0009CE  6E06               	movwf	(___fleq@ff2+1)^0,c
  2666   0009D0  0E00               	movlw	0
  2667   0009D2  6E07               	movwf	(___fleq@ff2+2)^0,c
  2668   0009D4  0E00               	movlw	0
  2669   0009D6  6E08               	movwf	(___fleq@ff2+3)^0,c
  2670   0009D8  EC45  F016         	call	___fleq	;wreg free
  2671   0009DC  B0D8               	btfsc	status,0,c
  2672   0009DE  EFF3  F004         	goto	u5421
  2673   0009E2  EFF5  F004         	goto	u5420
  2674   0009E6                     u5421:
  2675   0009E6  EFD4  F005         	goto	l846
  2676   0009EA                     u5420:
  2677   0009EA  EF02  F005         	goto	l4717
  2678   0009EE                     l848:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2681   0009EE  C071  F088         	movff	efgtoa@ou,efgtoa@u
  2682   0009F2  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2683   0009F6  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2684   0009FA  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2685   0009FE                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2687   0009FE  0100               	movlb	0	; () banked
  2688   000A00  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2689   000A02  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2690   000A04                     l4717:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2693   000A04  C088  F00F         	movff	efgtoa@u,___flmul@b
  2694   000A08  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2695   000A0C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2696   000A10  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2697   000A14  0E00               	movlw	0
  2698   000A16  6E13               	movwf	___flmul@a^0,c
  2699   000A18  0E00               	movlw	0
  2700   000A1A  6E14               	movwf	(___flmul@a+1)^0,c
  2701   000A1C  0E20               	movlw	32
  2702   000A1E  6E15               	movwf	(___flmul@a+2)^0,c
  2703   000A20  0E41               	movlw	65
  2704   000A22  6E16               	movwf	(___flmul@a+3)^0,c
  2705   000A24  EC9A  F00B         	call	___flmul	;wreg free
  2706   000A28  C00F  F071         	movff	?___flmul,efgtoa@ou
  2707   000A2C  C010  F072         	movff	?___flmul+1,efgtoa@ou+1
  2708   000A30  C011  F073         	movff	?___flmul+2,efgtoa@ou+2
  2709   000A34  C012  F074         	movff	?___flmul+3,efgtoa@ou+3
  2710   000A38  0100               	movlb	0	; () banked
  2711   000A3A  5171               	movf	efgtoa@ou& (0+255),w,b
  2712   000A3C  5D82               	subwf	efgtoa@g& (0+255),w,b
  2713   000A3E  6E01               	movwf	labs@a^0,c
  2714   000A40  5172               	movf	(efgtoa@ou+1)& (0+255),w,b
  2715   000A42  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2716   000A44  6E02               	movwf	(labs@a+1)^0,c
  2717   000A46  5173               	movf	(efgtoa@ou+2)& (0+255),w,b
  2718   000A48  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2719   000A4A  6E03               	movwf	(labs@a+2)^0,c
  2720   000A4C  5174               	movf	(efgtoa@ou+3)& (0+255),w,b
  2721   000A4E  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2722   000A50  6E04               	movwf	(labs@a+3)^0,c
  2723   000A52  EC00  F018         	call	_labs	;wreg free
  2724   000A56  BE04               	btfsc	(?_labs+3)^0,7,c
  2725   000A58  EF39  F005         	goto	u5431
  2726   000A5C  5004               	movf	(?_labs+3)^0,w,c
  2727   000A5E  1003               	iorwf	(?_labs+2)^0,w,c
  2728   000A60  1002               	iorwf	(?_labs+1)^0,w,c
  2729   000A62  E109               	bnz	u5430
  2730   000A64  0E02               	movlw	2
  2731   000A66  5C01               	subwf	?_labs^0,w,c
  2732   000A68  A0D8               	btfss	status,0,c
  2733   000A6A  EF39  F005         	goto	u5431
  2734   000A6E  EF3B  F005         	goto	u5430
  2735   000A72                     u5431:
  2736   000A72  EFF7  F004         	goto	l848
  2737   000A76                     u5430:
  2738   000A76  C071  F028         	movff	efgtoa@ou,___flge@ff1
  2739   000A7A  C072  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2740   000A7E  C073  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2741   000A82  C074  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2742   000A86  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2743   000A8A  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2744   000A8E  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2745   000A92  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2746   000A96  EC86  F014         	call	___flge	;wreg free
  2747   000A9A  A0D8               	btfss	status,0,c
  2748   000A9C  EF52  F005         	goto	u5441
  2749   000AA0  EF54  F005         	goto	u5440
  2750   000AA4                     u5441:
  2751   000AA4  EFF7  F004         	goto	l848
  2752   000AA8                     u5440:
  2753   000AA8                     
  2754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2755   000AA8  0100               	movlb	0	; () banked
  2756   000AAA  5188               	movf	efgtoa@u& (0+255),w,b
  2757   000AAC  5D82               	subwf	efgtoa@g& (0+255),w,b
  2758   000AAE  6E01               	movwf	labs@a^0,c
  2759   000AB0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2760   000AB2  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2761   000AB4  6E02               	movwf	(labs@a+1)^0,c
  2762   000AB6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2763   000AB8  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2764   000ABA  6E03               	movwf	(labs@a+2)^0,c
  2765   000ABC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2766   000ABE  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2767   000AC0  6E04               	movwf	(labs@a+3)^0,c
  2768   000AC2  EC00  F018         	call	_labs	;wreg free
  2769   000AC6  BE04               	btfsc	(?_labs+3)^0,7,c
  2770   000AC8  EF73  F005         	goto	u5450
  2771   000ACC  5004               	movf	(?_labs+3)^0,w,c
  2772   000ACE  1003               	iorwf	(?_labs+2)^0,w,c
  2773   000AD0  1002               	iorwf	(?_labs+1)^0,w,c
  2774   000AD2  E107               	bnz	u5451
  2775   000AD4  0E02               	movlw	2
  2776   000AD6  5C01               	subwf	?_labs^0,w,c
  2777   000AD8  B0D8               	btfsc	status,0,c
  2778   000ADA  EF71  F005         	goto	u5451
  2779   000ADE  EF73  F005         	goto	u5450
  2780   000AE2                     u5451:
  2781   000AE2  EFBB  F005         	goto	l4735
  2782   000AE6                     u5450:
  2783   000AE6                     l4725:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2786   000AE6  C088  F082         	movff	efgtoa@u,efgtoa@g
  2787   000AEA  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2788   000AEE  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2789   000AF2  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2792   000AF6  EFD4  F005         	goto	l846
  2793   000AFA                     l4727:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2796   000AFA  C088  F028         	movff	efgtoa@u,___fldiv@b
  2797   000AFE  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2798   000B02  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2799   000B06  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2800   000B0A  0E00               	movlw	0
  2801   000B0C  6E2C               	movwf	___fldiv@a^0,c
  2802   000B0E  0E00               	movlw	0
  2803   000B10  6E2D               	movwf	(___fldiv@a+1)^0,c
  2804   000B12  0E20               	movlw	32
  2805   000B14  6E2E               	movwf	(___fldiv@a+2)^0,c
  2806   000B16  0E41               	movlw	65
  2807   000B18  6E2F               	movwf	(___fldiv@a+3)^0,c
  2808   000B1A  ECAF  F00D         	call	___fldiv	;wreg free
  2809   000B1E  C028  F088         	movff	?___fldiv,efgtoa@u
  2810   000B22  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2811   000B26  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2812   000B2A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2813   000B2E                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2815   000B2E  0100               	movlb	0	; () banked
  2816   000B30  076F               	decf	efgtoa@e& (0+255),f,b
  2817   000B32  A0D8               	btfss	status,0,c
  2818   000B34  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2819   000B36                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2822   000B36  5188               	movf	efgtoa@u& (0+255),w,b
  2823   000B38  5D82               	subwf	efgtoa@g& (0+255),w,b
  2824   000B3A  6E01               	movwf	labs@a^0,c
  2825   000B3C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2826   000B3E  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2827   000B40  6E02               	movwf	(labs@a+1)^0,c
  2828   000B42  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2829   000B44  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2830   000B46  6E03               	movwf	(labs@a+2)^0,c
  2831   000B48  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2832   000B4A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2833   000B4C  6E04               	movwf	(labs@a+3)^0,c
  2834   000B4E  EC00  F018         	call	_labs	;wreg free
  2835   000B52  BE04               	btfsc	(?_labs+3)^0,7,c
  2836   000B54  EFB9  F005         	goto	u5460
  2837   000B58  5004               	movf	(?_labs+3)^0,w,c
  2838   000B5A  1003               	iorwf	(?_labs+2)^0,w,c
  2839   000B5C  1002               	iorwf	(?_labs+1)^0,w,c
  2840   000B5E  E107               	bnz	u5461
  2841   000B60  0E02               	movlw	2
  2842   000B62  5C01               	subwf	?_labs^0,w,c
  2843   000B64  B0D8               	btfsc	status,0,c
  2844   000B66  EFB7  F005         	goto	u5461
  2845   000B6A  EFB9  F005         	goto	u5460
  2846   000B6E                     u5461:
  2847   000B6E  EFBB  F005         	goto	l4735
  2848   000B72                     u5460:
  2849   000B72  EF73  F005         	goto	l4725
  2850   000B76                     l4735:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2853   000B76  C082  F028         	movff	efgtoa@g,___flge@ff1
  2854   000B7A  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2855   000B7E  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2856   000B82  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2857   000B86  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2858   000B8A  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2859   000B8E  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2860   000B92  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2861   000B96  EC86  F014         	call	___flge	;wreg free
  2862   000B9A  A0D8               	btfss	status,0,c
  2863   000B9C  EFD2  F005         	goto	u5471
  2864   000BA0  EFD4  F005         	goto	u5470
  2865   000BA4                     u5471:
  2866   000BA4  EF7D  F005         	goto	l4727
  2867   000BA8                     u5470:
  2868   000BA8                     l846:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2871   000BA8  C05A  F069         	movff	efgtoa@c,efgtoa@mode
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2874   000BAC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2875   000BB0                     
  2876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2877   000BB0  0100               	movlb	0	; () banked
  2878   000BB2  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  2879   000BB4  EFDE  F005         	goto	u5481
  2880   000BB8  EFE0  F005         	goto	u5480
  2881   000BBC                     u5481:
  2882   000BBC  EFE6  F005         	goto	l4741
  2883   000BC0                     u5480:
  2884   000BC0                     
  2885                           ; BSR set to: 0
  2886   000BC0  C0BA  F062         	movff	_prec,efgtoa@p
  2887   000BC4  C0BB  F063         	movff	_prec+1,efgtoa@p+1
  2888   000BC8  EFEA  F005         	goto	l4743
  2889   000BCC                     l4741:
  2890                           
  2891                           ; BSR set to: 0
  2892   000BCC  0E00               	movlw	0
  2893   000BCE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2894   000BD0  0E06               	movlw	6
  2895   000BD2  6F62               	movwf	efgtoa@p& (0+255),b
  2896   000BD4                     l4743:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2900   000BD4  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2901   000BD8  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2902   000BDC                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2905   000BDC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2906   000BDE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2907   000BE0                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2910   000BE0  0E66               	movlw	102
  2911   000BE2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2912   000BE4  A4D8               	btfss	status,2,c
  2913   000BE6  EFF7  F005         	goto	u5491
  2914   000BEA  EFF9  F005         	goto	u5490
  2915   000BEE                     u5491:
  2916   000BEE  EF19  F006         	goto	l4757
  2917   000BF2                     u5490:
  2918   000BF2                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2921   000BF2  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2922   000BF4  EF00  F006         	goto	u5500
  2923   000BF8  EFFE  F005         	goto	u5501
  2924   000BFC                     u5501:
  2925   000BFC  EF0C  F006         	goto	l4753
  2926   000C00                     u5500:
  2927   000C00                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2930   000C00  0E00               	movlw	0
  2931   000C02  6F88               	movwf	efgtoa@u& (0+255),b
  2932   000C04  0E00               	movlw	0
  2933   000C06  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2934   000C08  0E80               	movlw	128
  2935   000C0A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2936   000C0C  0E3F               	movlw	63
  2937   000C0E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2940   000C10  0E00               	movlw	0
  2941   000C12  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2942   000C14  0E00               	movlw	0
  2943   000C16  6F6F               	movwf	efgtoa@e& (0+255),b
  2944   000C18                     l4753:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2948   000C18  0E67               	movlw	103
  2949   000C1A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2950   000C1C  B4D8               	btfsc	status,2,c
  2951   000C1E  EF13  F006         	goto	u5511
  2952   000C22  EF15  F006         	goto	u5510
  2953   000C26                     u5511:
  2954   000C26  EF19  F006         	goto	l4757
  2955   000C2A                     u5510:
  2956   000C2A                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2959   000C2A  516F               	movf	efgtoa@e& (0+255),w,b
  2960   000C2C  276D               	addwf	efgtoa@m& (0+255),f,b
  2961   000C2E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2962   000C30  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2963   000C32                     l4757:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  2967   000C32  0E00               	movlw	0
  2968   000C34  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2969   000C36  0E00               	movlw	0
  2970   000C38  6F7F               	movwf	efgtoa@i& (0+255),b
  2971   000C3A                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  2974   000C3A  C082  F077         	movff	efgtoa@g,efgtoa@h
  2975   000C3E  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2976   000C42  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2977   000C46  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2978   000C4A                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  2981   000C4A  C088  F071         	movff	efgtoa@u,efgtoa@ou
  2982   000C4E  C089  F072         	movff	efgtoa@u+1,efgtoa@ou+1
  2983   000C52  C08A  F073         	movff	efgtoa@u+2,efgtoa@ou+2
  2984   000C56  C08B  F074         	movff	efgtoa@u+3,efgtoa@ou+3
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  2987   000C5A  EFAA  F006         	goto	l4771
  2988   000C5E                     l4763:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  2992   000C5E  C077  F028         	movff	efgtoa@h,___fldiv@b
  2993   000C62  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2994   000C66  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2995   000C6A  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2996   000C6E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2997   000C72  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2998   000C76  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2999   000C7A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3000   000C7E  ECAF  F00D         	call	___fldiv	;wreg free
  3001   000C82  C028  F041         	movff	?___fldiv,floorf@x
  3002   000C86  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3003   000C8A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3004   000C8E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3005   000C92  ECF9  F010         	call	_floorf	;wreg free
  3006   000C96  C041  F07B         	movff	?_floorf,efgtoa@l
  3007   000C9A  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  3008   000C9E  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  3009   000CA2  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3012   000CA6  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3013   000CAA  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3014   000CAE  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3015   000CB2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3016   000CB6  EC03  F014         	call	___fltol	;wreg free
  3017   000CBA  C001  F06B         	movff	?___fltol,efgtoa@d
  3018   000CBE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3019   000CC2                     
  3020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3021   000CC2  C077  F028         	movff	efgtoa@h,___flsub@b
  3022   000CC6  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3023   000CCA  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3024   000CCE  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3025   000CD2  C07B  F013         	movff	efgtoa@l,___flmul@a
  3026   000CD6  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3027   000CDA  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3028   000CDE  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3029   000CE2  C088  F00F         	movff	efgtoa@u,___flmul@b
  3030   000CE6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3031   000CEA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3032   000CEE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3033   000CF2  EC9A  F00B         	call	___flmul	;wreg free
  3034   000CF6  C00F  F02C         	movff	?___flmul,___flsub@a
  3035   000CFA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3036   000CFE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3037   000D02  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3038   000D06  EC53  F018         	call	___flsub	;wreg free
  3039   000D0A  C028  F077         	movff	?___flsub,efgtoa@h
  3040   000D0E  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3041   000D12  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3042   000D16  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3043   000D1A                     
  3044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3045   000D1A  C088  F028         	movff	efgtoa@u,___fldiv@b
  3046   000D1E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3047   000D22  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3048   000D26  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3049   000D2A  0E00               	movlw	0
  3050   000D2C  6E2C               	movwf	___fldiv@a^0,c
  3051   000D2E  0E00               	movlw	0
  3052   000D30  6E2D               	movwf	(___fldiv@a+1)^0,c
  3053   000D32  0E20               	movlw	32
  3054   000D34  6E2E               	movwf	(___fldiv@a+2)^0,c
  3055   000D36  0E41               	movlw	65
  3056   000D38  6E2F               	movwf	(___fldiv@a+3)^0,c
  3057   000D3A  ECAF  F00D         	call	___fldiv	;wreg free
  3058   000D3E  C028  F088         	movff	?___fldiv,efgtoa@u
  3059   000D42  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3060   000D46  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3061   000D4A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3062   000D4E                     
  3063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3064   000D4E  0100               	movlb	0	; () banked
  3065   000D50  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3066   000D52  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3067   000D54                     l4771:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3071   000D54  516D               	movf	efgtoa@m& (0+255),w,b
  3072   000D56  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3073   000D58  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3074   000D5A  0A80               	xorlw	128
  3075   000D5C  6E5B               	movwf	??_efgtoa^0,c
  3076   000D5E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3077   000D60  0A80               	xorlw	128
  3078   000D62  585B               	subwfb	??_efgtoa^0,w,c
  3079   000D64  A0D8               	btfss	status,0,c
  3080   000D66  EFB7  F006         	goto	u5521
  3081   000D6A  EFB9  F006         	goto	u5520
  3082   000D6E                     u5521:
  3083   000D6E  EF2F  F006         	goto	l4763
  3084   000D72                     u5520:
  3085   000D72                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3088   000D72  C088  F00F         	movff	efgtoa@u,___flmul@b
  3089   000D76  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3090   000D7A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3091   000D7E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3092   000D82  0E00               	movlw	0
  3093   000D84  6E13               	movwf	___flmul@a^0,c
  3094   000D86  0E00               	movlw	0
  3095   000D88  6E14               	movwf	(___flmul@a+1)^0,c
  3096   000D8A  0EA0               	movlw	160
  3097   000D8C  6E15               	movwf	(___flmul@a+2)^0,c
  3098   000D8E  0E40               	movlw	64
  3099   000D90  6E16               	movwf	(___flmul@a+3)^0,c
  3100   000D92  EC9A  F00B         	call	___flmul	;wreg free
  3101   000D96  C00F  F07B         	movff	?___flmul,efgtoa@l
  3102   000D9A  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  3103   000D9E  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  3104   000DA2  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  3105   000DA6                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3107   000DA6  C077  F028         	movff	efgtoa@h,___flge@ff1
  3108   000DAA  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3109   000DAE  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3110   000DB2  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3111   000DB6  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  3112   000DBA  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3113   000DBE  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3114   000DC2  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3115   000DC6  EC86  F014         	call	___flge	;wreg free
  3116   000DCA  B0D8               	btfsc	status,0,c
  3117   000DCC  EFEA  F006         	goto	u5531
  3118   000DD0  EFEC  F006         	goto	u5530
  3119   000DD4                     u5531:
  3120   000DD4  EFF7  F006         	goto	l4779
  3121   000DD8                     u5530:
  3122   000DD8                     
  3123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3124   000DD8  0E00               	movlw	0
  3125   000DDA  0100               	movlb	0	; () banked
  3126   000DDC  6F7B               	movwf	efgtoa@l& (0+255),b
  3127   000DDE  0E00               	movlw	0
  3128   000DE0  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3129   000DE2  0E00               	movlw	0
  3130   000DE4  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3131   000DE6  0E00               	movlw	0
  3132   000DE8  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3135   000DEA  EF20  F007         	goto	l4785
  3136   000DEE                     l4779:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3139   000DEE  C077  F001         	movff	efgtoa@h,___fleq@ff1
  3140   000DF2  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3141   000DF6  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3142   000DFA  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3143   000DFE  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  3144   000E02  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3145   000E06  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3146   000E0A  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3147   000E0E  EC45  F016         	call	___fleq	;wreg free
  3148   000E12  A0D8               	btfss	status,0,c
  3149   000E14  EF0E  F007         	goto	u5541
  3150   000E18  EF10  F007         	goto	u5540
  3151   000E1C                     u5541:
  3152   000E1C  EF20  F007         	goto	l4785
  3153   000E20                     u5540:
  3154   000E20  0100               	movlb	0	; () banked
  3155   000E22  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3156   000E24  EF16  F007         	goto	u5551
  3157   000E28  EF18  F007         	goto	u5550
  3158   000E2C                     u5551:
  3159   000E2C  EF20  F007         	goto	l4785
  3160   000E30                     u5550:
  3161   000E30                     
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3164   000E30  0E00               	movlw	0
  3165   000E32  6F7B               	movwf	efgtoa@l& (0+255),b
  3166   000E34  0E00               	movlw	0
  3167   000E36  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3168   000E38  0E00               	movlw	0
  3169   000E3A  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3170   000E3C  0E00               	movlw	0
  3171   000E3E  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3172   000E40                     l4785:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3175   000E40  C082  F001         	movff	efgtoa@g,___fladd@b
  3176   000E44  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3177   000E48  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3178   000E4C  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3179   000E50  C07B  F005         	movff	efgtoa@l,___fladd@a
  3180   000E54  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3181   000E58  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3182   000E5C  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3183   000E60  EC3A  F009         	call	___fladd	;wreg free
  3184   000E64  C001  F077         	movff	?___fladd,efgtoa@h
  3185   000E68  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  3186   000E6C  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  3187   000E70  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  3188   000E74                     
  3189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3190   000E74  C077  F028         	movff	efgtoa@h,___flge@ff1
  3191   000E78  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3192   000E7C  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3193   000E80  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3194   000E84  0E00               	movlw	0
  3195   000E86  6E13               	movwf	___flmul@a^0,c
  3196   000E88  0E00               	movlw	0
  3197   000E8A  6E14               	movwf	(___flmul@a+1)^0,c
  3198   000E8C  0E20               	movlw	32
  3199   000E8E  6E15               	movwf	(___flmul@a+2)^0,c
  3200   000E90  0E41               	movlw	65
  3201   000E92  6E16               	movwf	(___flmul@a+3)^0,c
  3202   000E94  C071  F00F         	movff	efgtoa@ou,___flmul@b
  3203   000E98  C072  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3204   000E9C  C073  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3205   000EA0  C074  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3206   000EA4  EC9A  F00B         	call	___flmul	;wreg free
  3207   000EA8  C00F  F02C         	movff	?___flmul,___flge@ff2
  3208   000EAC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3209   000EB0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3210   000EB4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3211   000EB8  EC86  F014         	call	___flge	;wreg free
  3212   000EBC  A0D8               	btfss	status,0,c
  3213   000EBE  EF63  F007         	goto	u5561
  3214   000EC2  EF65  F007         	goto	u5560
  3215   000EC6                     u5561:
  3216   000EC6  EF8E  F007         	goto	l4797
  3217   000ECA                     u5560:
  3218   000ECA                     
  3219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3220   000ECA  0100               	movlb	0	; () banked
  3221   000ECC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3222   000ECE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3223   000ED0                     
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3226   000ED0  C071  F00F         	movff	efgtoa@ou,___flmul@b
  3227   000ED4  C072  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3228   000ED8  C073  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3229   000EDC  C074  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3230   000EE0  0E00               	movlw	0
  3231   000EE2  6E13               	movwf	___flmul@a^0,c
  3232   000EE4  0E00               	movlw	0
  3233   000EE6  6E14               	movwf	(___flmul@a+1)^0,c
  3234   000EE8  0E20               	movlw	32
  3235   000EEA  6E15               	movwf	(___flmul@a+2)^0,c
  3236   000EEC  0E41               	movlw	65
  3237   000EEE  6E16               	movwf	(___flmul@a+3)^0,c
  3238   000EF0  EC9A  F00B         	call	___flmul	;wreg free
  3239   000EF4  C00F  F071         	movff	?___flmul,efgtoa@ou
  3240   000EF8  C010  F072         	movff	?___flmul+1,efgtoa@ou+1
  3241   000EFC  C011  F073         	movff	?___flmul+2,efgtoa@ou+2
  3242   000F00  C012  F074         	movff	?___flmul+3,efgtoa@ou+3
  3243   000F04                     
  3244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3245   000F04  0E66               	movlw	102
  3246   000F06  0100               	movlb	0	; () banked
  3247   000F08  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3248   000F0A  A4D8               	btfss	status,2,c
  3249   000F0C  EF8A  F007         	goto	u5571
  3250   000F10  EF8C  F007         	goto	u5570
  3251   000F14                     u5571:
  3252   000F14  EF8E  F007         	goto	l4797
  3253   000F18                     u5570:
  3254   000F18                     
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3257   000F18  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3258   000F1A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3259   000F1C                     l4797:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3262   000F1C  C071  F088         	movff	efgtoa@ou,efgtoa@u
  3263   000F20  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3264   000F24  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3265   000F28  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3266   000F2C                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3268   000F2C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3269   000F30  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3270   000F34                     
  3271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3272   000F34  0E00               	movlw	0
  3273   000F36  0100               	movlb	0	; () banked
  3274   000F38  6F68               	movwf	efgtoa@pp& (0+255),b
  3275   000F3A                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3278   000F3A  0E00               	movlw	0
  3279   000F3C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3280   000F3E  0E00               	movlw	0
  3281   000F40  6F64               	movwf	efgtoa@t& (0+255),b
  3282   000F42                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3285   000F42  0E00               	movlw	0
  3286   000F44  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3287   000F46  0E00               	movlw	0
  3288   000F48  6F7F               	movwf	efgtoa@i& (0+255),b
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3291   000F4A  EF8C  F008         	goto	l4847
  3292   000F4E                     l4807:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3296   000F4E  C077  F028         	movff	efgtoa@h,___fldiv@b
  3297   000F52  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3298   000F56  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3299   000F5A  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3300   000F5E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  3301   000F62  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3302   000F66  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3303   000F6A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3304   000F6E  ECAF  F00D         	call	___fldiv	;wreg free
  3305   000F72  C028  F041         	movff	?___fldiv,floorf@x
  3306   000F76  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3307   000F7A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3308   000F7E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3309   000F82  ECF9  F010         	call	_floorf	;wreg free
  3310   000F86  C041  F07B         	movff	?_floorf,efgtoa@l
  3311   000F8A  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  3312   000F8E  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  3313   000F92  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3316   000F96  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3317   000F9A  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3318   000F9E  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3319   000FA2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3320   000FA6  EC03  F014         	call	___fltol	;wreg free
  3321   000FAA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3322   000FAC  EFE3  F007         	goto	u5580
  3323   000FB0  5002               	movf	(?___fltol+1)^0,w,c
  3324   000FB2  E107               	bnz	u5581
  3325   000FB4  0E0A               	movlw	10
  3326   000FB6  5C01               	subwf	?___fltol^0,w,c
  3327   000FB8  B0D8               	btfsc	status,0,c
  3328   000FBA  EFE1  F007         	goto	u5581
  3329   000FBE  EFE3  F007         	goto	u5580
  3330   000FC2                     u5581:
  3331   000FC2  EFF3  F007         	goto	l4811
  3332   000FC6                     u5580:
  3333   000FC6  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3334   000FCA  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3335   000FCE  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3336   000FD2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3337   000FD6  EC03  F014         	call	___fltol	;wreg free
  3338   000FDA  C001  F06B         	movff	?___fltol,efgtoa@d
  3339   000FDE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3340   000FE2  EFF8  F007         	goto	l876
  3341   000FE6                     l4811:
  3342   000FE6  0E00               	movlw	0
  3343   000FE8  0100               	movlb	0	; () banked
  3344   000FEA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3345   000FEC  0E09               	movlw	9
  3346   000FEE  6F6B               	movwf	efgtoa@d& (0+255),b
  3347   000FF0                     l876:
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3350   000FF0  0100               	movlb	0	; () banked
  3351   000FF2  5168               	movf	efgtoa@pp& (0+255),w,b
  3352   000FF4  A4D8               	btfss	status,2,c
  3353   000FF6  EFFF  F007         	goto	u5591
  3354   000FFA  EF01  F008         	goto	u5590
  3355   000FFE                     u5591:
  3356   000FFE  EF29  F008         	goto	l4831
  3357   001002                     u5590:
  3358   001002                     
  3359                           ; BSR set to: 0
  3360   001002  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3361   001004  EF08  F008         	goto	u5600
  3362   001008  EF06  F008         	goto	u5601
  3363   00100C                     u5601:
  3364   00100C  EF29  F008         	goto	l4831
  3365   001010                     u5600:
  3366   001010                     
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3369   001010  0E00               	movlw	low _dbuf
  3370   001012  2586               	addwf	efgtoa@n& (0+255),w,b
  3371   001014  6ED9               	movwf	fsr2l,c
  3372   001016  0E01               	movlw	high _dbuf
  3373   001018  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3374   00101A  6EDA               	movwf	fsr2h,c
  3375   00101C  0E2E               	movlw	46
  3376   00101E  6EDF               	movwf	indf2,c
  3377   001020                     
  3378                           ; BSR set to: 0
  3379   001020  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3380   001022  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3381   001024                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3384   001024  0775               	decf	efgtoa@w& (0+255),f,b
  3385   001026  A0D8               	btfss	status,0,c
  3386   001028  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3387   00102A                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3390   00102A  0E01               	movlw	1
  3391   00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  3392   00102E  EF29  F008         	goto	l4831
  3393   001032                     l4823:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3397   001032  0E00               	movlw	low _dbuf
  3398   001034  2586               	addwf	efgtoa@n& (0+255),w,b
  3399   001036  6ED9               	movwf	fsr2l,c
  3400   001038  0E01               	movlw	high _dbuf
  3401   00103A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3402   00103C  6EDA               	movwf	fsr2h,c
  3403   00103E  0E30               	movlw	48
  3404   001040  6EDF               	movwf	indf2,c
  3405   001042                     
  3406                           ; BSR set to: 0
  3407   001042  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3408   001044  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3409   001046                     
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3412   001046  0775               	decf	efgtoa@w& (0+255),f,b
  3413   001048  A0D8               	btfss	status,0,c
  3414   00104A  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3415   00104C                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3418   00104C  0764               	decf	efgtoa@t& (0+255),f,b
  3419   00104E  A0D8               	btfss	status,0,c
  3420   001050  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3421   001052                     l4831:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3425   001052  5164               	movf	efgtoa@t& (0+255),w,b
  3426   001054  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3427   001056  A4D8               	btfss	status,2,c
  3428   001058  EF30  F008         	goto	u5611
  3429   00105C  EF32  F008         	goto	u5610
  3430   001060                     u5611:
  3431   001060  EF19  F008         	goto	l4823
  3432   001064                     u5610:
  3433   001064                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3436   001064  0E00               	movlw	low _dbuf
  3437   001066  2586               	addwf	efgtoa@n& (0+255),w,b
  3438   001068  6ED9               	movwf	fsr2l,c
  3439   00106A  0E01               	movlw	high _dbuf
  3440   00106C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3441   00106E  6EDA               	movwf	fsr2h,c
  3442   001070  516B               	movf	efgtoa@d& (0+255),w,b
  3443   001072  0F30               	addlw	48
  3444   001074  6EDF               	movwf	indf2,c
  3445   001076                     
  3446                           ; BSR set to: 0
  3447   001076  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3448   001078  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3449   00107A                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3452   00107A  0775               	decf	efgtoa@w& (0+255),f,b
  3453   00107C  A0D8               	btfss	status,0,c
  3454   00107E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3455   001080                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3458   001080  C077  F028         	movff	efgtoa@h,___flsub@b
  3459   001084  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3460   001088  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3461   00108C  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3462   001090  C07B  F013         	movff	efgtoa@l,___flmul@a
  3463   001094  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3464   001098  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3465   00109C  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3466   0010A0  C088  F00F         	movff	efgtoa@u,___flmul@b
  3467   0010A4  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3468   0010A8  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3469   0010AC  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3470   0010B0  EC9A  F00B         	call	___flmul	;wreg free
  3471   0010B4  C00F  F02C         	movff	?___flmul,___flsub@a
  3472   0010B8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3473   0010BC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3474   0010C0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3475   0010C4  EC53  F018         	call	___flsub	;wreg free
  3476   0010C8  C028  F077         	movff	?___flsub,efgtoa@h
  3477   0010CC  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3478   0010D0  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3479   0010D4  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3480   0010D8                     
  3481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3482   0010D8  C088  F028         	movff	efgtoa@u,___fldiv@b
  3483   0010DC  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3484   0010E0  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3485   0010E4  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3486   0010E8  0E00               	movlw	0
  3487   0010EA  6E2C               	movwf	___fldiv@a^0,c
  3488   0010EC  0E00               	movlw	0
  3489   0010EE  6E2D               	movwf	(___fldiv@a+1)^0,c
  3490   0010F0  0E20               	movlw	32
  3491   0010F2  6E2E               	movwf	(___fldiv@a+2)^0,c
  3492   0010F4  0E41               	movlw	65
  3493   0010F6  6E2F               	movwf	(___fldiv@a+3)^0,c
  3494   0010F8  ECAF  F00D         	call	___fldiv	;wreg free
  3495   0010FC  C028  F088         	movff	?___fldiv,efgtoa@u
  3496   001100  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3497   001104  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3498   001108  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3499   00110C                     
  3500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3501   00110C  0100               	movlb	0	; () banked
  3502   00110E  0760               	decf	efgtoa@ne& (0+255),f,b
  3503   001110  A0D8               	btfss	status,0,c
  3504   001112  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3505   001114                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3508   001114  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3509   001116  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3510   001118                     l4847:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3514   001118  516D               	movf	efgtoa@m& (0+255),w,b
  3515   00111A  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3516   00111C  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3517   00111E  0A80               	xorlw	128
  3518   001120  6E5B               	movwf	??_efgtoa^0,c
  3519   001122  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3520   001124  0A80               	xorlw	128
  3521   001126  585B               	subwfb	??_efgtoa^0,w,c
  3522   001128  B0D8               	btfsc	status,0,c
  3523   00112A  EF99  F008         	goto	u5621
  3524   00112E  EF9B  F008         	goto	u5620
  3525   001132                     u5621:
  3526   001132  EFA9  F008         	goto	l4851
  3527   001136                     u5620:
  3528   001136                     
  3529                           ; BSR set to: 0
  3530   001136  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3531   001138  EFA7  F008         	goto	u5631
  3532   00113C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3533   00113E  E109               	bnz	u5630
  3534   001140  0E4B               	movlw	75
  3535   001142  5D86               	subwf	efgtoa@n& (0+255),w,b
  3536   001144  A0D8               	btfss	status,0,c
  3537   001146  EFA7  F008         	goto	u5631
  3538   00114A  EFA9  F008         	goto	u5630
  3539   00114E                     u5631:
  3540   00114E  EFA7  F007         	goto	l4807
  3541   001152                     u5630:
  3542   001152                     l4851:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3546   001152  0E00               	movlw	0
  3547   001154  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3548   001156  0E4F               	movlw	79
  3549   001158  6F7F               	movwf	efgtoa@i& (0+255),b
  3550   00115A                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3553   00115A  0E00               	movlw	low _dbuf
  3554   00115C  257F               	addwf	efgtoa@i& (0+255),w,b
  3555   00115E  6ED9               	movwf	fsr2l,c
  3556   001160  0E01               	movlw	high _dbuf
  3557   001162  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3558   001164  6EDA               	movwf	fsr2h,c
  3559   001166  6ADF               	clrf	indf2,c
  3560   001168                     
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3563   001168  0E00               	movlw	low _dbuf
  3564   00116A  6E5B               	movwf	??_efgtoa^0,c
  3565   00116C  0E01               	movlw	high _dbuf
  3566   00116E  6E5C               	movwf	(??_efgtoa+1)^0,c
  3567   001170  5186               	movf	efgtoa@n& (0+255),w,b
  3568   001172  5E5B               	subwf	??_efgtoa^0,f,c
  3569   001174  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3570   001176  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  3571   001178  517F               	movf	efgtoa@i& (0+255),w,b
  3572   00117A  245B               	addwf	??_efgtoa^0,w,c
  3573   00117C  6E01               	movwf	memcpy@d1^0,c
  3574   00117E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3575   001180  205C               	addwfc	(??_efgtoa+1)^0,w,c
  3576   001182  6E02               	movwf	(memcpy@d1+1)^0,c
  3577   001184  0E00               	movlw	low _dbuf
  3578   001186  6E03               	movwf	memcpy@s1^0,c
  3579   001188  0E01               	movlw	high _dbuf
  3580   00118A  6E04               	movwf	(memcpy@s1+1)^0,c
  3581   00118C  C086  F005         	movff	efgtoa@n,memcpy@n
  3582   001190  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3583   001194  EC2B  F018         	call	_memcpy	;wreg free
  3584   001198                     
  3585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3586   001198  0100               	movlb	0	; () banked
  3587   00119A  5186               	movf	efgtoa@n& (0+255),w,b
  3588   00119C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3589   00119E  6F86               	movwf	efgtoa@n& (0+255),b
  3590   0011A0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3591   0011A2  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3592   0011A4  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3593   0011A6                     
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3596   0011A6  5181               	movf	efgtoa@sign& (0+255),w,b
  3597   0011A8  A4D8               	btfss	status,2,c
  3598   0011AA  EFD9  F008         	goto	u5641
  3599   0011AE  EFDC  F008         	goto	u5640
  3600   0011B2                     u5641:
  3601   0011B2  0E01               	movlw	1
  3602   0011B4  EFDD  F008         	goto	u5650
  3603   0011B8                     u5640:
  3604   0011B8  0E00               	movlw	0
  3605   0011BA                     u5650:
  3606   0011BA  6F7F               	movwf	efgtoa@i& (0+255),b
  3607   0011BC  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3608   0011BE                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  3611   0011BE  A3BE               	btfss	_flags& (0+255),1,b
  3612   0011C0  EFE4  F008         	goto	u5661
  3613   0011C4  EFE6  F008         	goto	u5660
  3614   0011C8                     u5661:
  3615   0011C8  EF14  F009         	goto	l4873
  3616   0011CC                     u5660:
  3617   0011CC  EFF6  F008         	goto	l4869
  3618   0011D0                     l4865:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  3622   0011D0  0786               	decf	efgtoa@n& (0+255),f,b
  3623   0011D2  A0D8               	btfss	status,0,c
  3624   0011D4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3625   0011D6  0E00               	movlw	low _dbuf
  3626   0011D8  2586               	addwf	efgtoa@n& (0+255),w,b
  3627   0011DA  6ED9               	movwf	fsr2l,c
  3628   0011DC  0E01               	movlw	high _dbuf
  3629   0011DE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3630   0011E0  6EDA               	movwf	fsr2h,c
  3631   0011E2  0E30               	movlw	48
  3632   0011E4  6EDF               	movwf	indf2,c
  3633   0011E6                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  3636   0011E6  0775               	decf	efgtoa@w& (0+255),f,b
  3637   0011E8  A0D8               	btfss	status,0,c
  3638   0011EA  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3639   0011EC                     l4869:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  3643   0011EC  5175               	movf	efgtoa@w& (0+255),w,b
  3644   0011EE  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3645   0011F0  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3646   0011F2  0A80               	xorlw	128
  3647   0011F4  6E5B               	movwf	??_efgtoa^0,c
  3648   0011F6  5176               	movf	(efgtoa@w+1)& (0+255),w,b
  3649   0011F8  0A80               	xorlw	128
  3650   0011FA  585B               	subwfb	??_efgtoa^0,w,c
  3651   0011FC  B0D8               	btfsc	status,0,c
  3652   0011FE  EF03  F009         	goto	u5671
  3653   001202  EF05  F009         	goto	u5670
  3654   001206                     u5671:
  3655   001206  EF14  F009         	goto	l4873
  3656   00120A                     u5670:
  3657   00120A                     
  3658                           ; BSR set to: 0
  3659   00120A  5186               	movf	efgtoa@n& (0+255),w,b
  3660   00120C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3661   00120E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3662   001210  0A80               	xorlw	128
  3663   001212  6E5B               	movwf	??_efgtoa^0,c
  3664   001214  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3665   001216  0A80               	xorlw	128
  3666   001218  585B               	subwfb	??_efgtoa^0,w,c
  3667   00121A  A0D8               	btfss	status,0,c
  3668   00121C  EF12  F009         	goto	u5681
  3669   001220  EF14  F009         	goto	u5680
  3670   001224                     u5681:
  3671   001224  EFE8  F008         	goto	l4865
  3672   001228                     u5680:
  3673   001228                     l4873:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3677   001228  5181               	movf	efgtoa@sign& (0+255),w,b
  3678   00122A  B4D8               	btfsc	status,2,c
  3679   00122C  EF1A  F009         	goto	u5691
  3680   001230  EF1C  F009         	goto	u5690
  3681   001234                     u5691:
  3682   001234  EF27  F009         	goto	l4877
  3683   001238                     u5690:
  3684   001238                     
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3687   001238  0786               	decf	efgtoa@n& (0+255),f,b
  3688   00123A  A0D8               	btfss	status,0,c
  3689   00123C  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3690   00123E  0E00               	movlw	low _dbuf
  3691   001240  2586               	addwf	efgtoa@n& (0+255),w,b
  3692   001242  6ED9               	movwf	fsr2l,c
  3693   001244  0E01               	movlw	high _dbuf
  3694   001246  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3695   001248  6EDA               	movwf	fsr2h,c
  3696   00124A  C081  FFDF         	movff	efgtoa@sign,indf2
  3697   00124E                     l4877:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3701   00124E  517F               	movf	efgtoa@i& (0+255),w,b
  3702   001250  5F75               	subwf	efgtoa@w& (0+255),f,b
  3703   001252  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3704   001254  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3705   001256                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3708   001256  C055  F00F         	movff	efgtoa@fp,pad@fp
  3709   00125A  0E00               	movlw	low _dbuf
  3710   00125C  2586               	addwf	efgtoa@n& (0+255),w,b
  3711   00125E  6E10               	movwf	pad@buf^0,c
  3712   001260  0E01               	movlw	high _dbuf
  3713   001262  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3714   001264  6E11               	movwf	(pad@buf+1)^0,c
  3715   001266  C075  F012         	movff	efgtoa@w,pad@p
  3716   00126A  C076  F013         	movff	efgtoa@w+1,pad@p+1
  3717   00126E  EC6D  F017         	call	_pad	;wreg free
  3718   001272                     l843:
  3719   001272  0012               	return		;funcret
  3720   001274                     __end_of_efgtoa:
  3721                           	callstack 0
  3722                           
  3723 ;; *************** function _strcpy *****************
  3724 ;; Defined at:
  3725 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3728 ;;		 -> dbuf(80), 
  3729 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3730 ;;		 -> STR_6(4), STR_3(4), 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  d               2    4[COMRAM] PTR unsigned char 
  3733 ;;		 -> dbuf(80), 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2    0[COMRAM] PTR unsigned char 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         3       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3746 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:        6 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_efgtoa
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text10
  3757   0031B2                     __ptext10:
  3758                           	callstack 0
  3759   0031B2                     _strcpy:
  3760                           	callstack 26
  3761   0031B2  C001  F005         	movff	strcpy@dest,strcpy@d
  3762   0031B6  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3763   0031BA                     l4599:
  3764   0031BA  2A03               	incf	strcpy@src^0,f,c
  3765   0031BC  0403               	decf	strcpy@src^0,w,c
  3766   0031BE  6E04               	movwf	??_strcpy^0,c
  3767   0031C0  C004  FFF6         	movff	??_strcpy,tblptrl
  3768   0031C4                     	if	1	;There is more than 1 active tblptr byte
  3769   0031C4  0E08               	movlw	high __smallconst
  3770   0031C6  6EF7               	movwf	tblptrh,c
  3771   0031C8                     	endif
  3772   0031C8                     	if	0	;tblptru may be non-zero
  3773   0031C8                     	endif
  3774   0031C8                     	if	0	;tblptru may be non-zero
  3775   0031C8                     	endif
  3776   0031C8  C005  FFD9         	movff	strcpy@d,fsr2l
  3777   0031CC  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3778   0031D0  4A05               	infsnz	strcpy@d^0,f,c
  3779   0031D2  2A06               	incf	(strcpy@d+1)^0,f,c
  3780   0031D4  0008               	tblrd		*
  3781   0031D6  CFF5 FFDF          	movff	tablat,indf2
  3782   0031DA  50DF               	movf	indf2,w,c
  3783   0031DC  A4D8               	btfss	status,2,c
  3784   0031DE  EFF3  F018         	goto	u5221
  3785   0031E2  EFF5  F018         	goto	u5220
  3786   0031E6                     u5221:
  3787   0031E6  EFDD  F018         	goto	l4599
  3788   0031EA                     u5220:
  3789   0031EA  0012               	return		;funcret
  3790   0031EC                     __end_of_strcpy:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _pad *****************
  3794 ;; Defined at:
  3795 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3798 ;;		 -> sprintf@f(12), 
  3799 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3800 ;;		 -> dbuf(80), 
  3801 ;;  p               2   17[COMRAM] int 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  i               2   20[COMRAM] int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         5       0       0       0       0       0       0       0       0
  3814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3816 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        8 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 3
  3820 ;; This function calls:
  3821 ;;		_fputc
  3822 ;;		_fputs
  3823 ;; This function is called by:
  3824 ;;		_efgtoa
  3825 ;;		_utoa
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text11
  3830   002EDA                     __ptext11:
  3831                           	callstack 0
  3832   002EDA                     _pad:
  3833                           	callstack 23
  3834   002EDA                     
  3835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3836   002EDA  BE13               	btfsc	(pad@p+1)^0,7,c
  3837   002EDC  EF74  F017         	goto	u5130
  3838   002EE0  EF72  F017         	goto	u5131
  3839   002EE4                     u5131:
  3840   002EE4  EF78  F017         	goto	l828
  3841   002EE8                     u5130:
  3842   002EE8                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3844   002EE8  0E00               	movlw	0
  3845   002EEA  6E13               	movwf	(pad@p+1)^0,c
  3846   002EEC  0E00               	movlw	0
  3847   002EEE  6E12               	movwf	pad@p^0,c
  3848   002EF0                     l828:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3851   002EF0  0E00               	movlw	0
  3852   002EF2  6E16               	movwf	(pad@i+1)^0,c
  3853   002EF4  0E00               	movlw	0
  3854   002EF6  6E15               	movwf	pad@i^0,c
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3857   002EF8  EF88  F017         	goto	l4571
  3858   002EFC                     l4567:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3861   002EFC  0E00               	movlw	0
  3862   002EFE  6E02               	movwf	(fputc@c+1)^0,c
  3863   002F00  0E20               	movlw	32
  3864   002F02  6E01               	movwf	fputc@c^0,c
  3865   002F04  C00F  F003         	movff	pad@fp,fputc@fp
  3866   002F08  ECF0  F015         	call	_fputc	;wreg free
  3867   002F0C                     
  3868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3869   002F0C  4A15               	infsnz	pad@i^0,f,c
  3870   002F0E  2A16               	incf	(pad@i+1)^0,f,c
  3871   002F10                     l4571:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3874   002F10  5012               	movf	pad@p^0,w,c
  3875   002F12  5C15               	subwf	pad@i^0,w,c
  3876   002F14  5016               	movf	(pad@i+1)^0,w,c
  3877   002F16  0A80               	xorlw	128
  3878   002F18  6E14               	movwf	??_pad^0,c
  3879   002F1A  5013               	movf	(pad@p+1)^0,w,c
  3880   002F1C  0A80               	xorlw	128
  3881   002F1E  5814               	subwfb	??_pad^0,w,c
  3882   002F20  A0D8               	btfss	status,0,c
  3883   002F22  EF95  F017         	goto	u5141
  3884   002F26  EF97  F017         	goto	u5140
  3885   002F2A                     u5141:
  3886   002F2A  EF7E  F017         	goto	l4567
  3887   002F2E                     u5140:
  3888   002F2E                     
  3889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3890   002F2E  C010  F009         	movff	pad@buf,fputs@s
  3891   002F32  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3892   002F36  C00F  F00B         	movff	pad@fp,fputs@fp
  3893   002F3A  ECB9  F018         	call	_fputs	;wreg free
  3894   002F3E  0012               	return		;funcret
  3895   002F40                     __end_of_pad:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _fputs *****************
  3899 ;; Defined at:
  3900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3903 ;;		 -> dbuf(80), 
  3904 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3905 ;;		 -> sprintf@f(12), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2   12[COMRAM] int 
  3908 ;;  c               1   11[COMRAM] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2    8[COMRAM] int 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3918 ;;      Params:         3       0       0       0       0       0       0       0       0
  3919 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3921 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3922 ;;Total ram usage:        6 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 2
  3925 ;; This function calls:
  3926 ;;		_fputc
  3927 ;; This function is called by:
  3928 ;;		_pad
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text12
  3933   003172                     __ptext12:
  3934                           	callstack 0
  3935   003172                     _fputs:
  3936                           	callstack 23
  3937   003172  0E00               	movlw	0
  3938   003174  6E0E               	movwf	(fputs@i+1)^0,c
  3939   003176  0E00               	movlw	0
  3940   003178  6E0D               	movwf	fputs@i^0,c
  3941   00317A  EFC8  F018         	goto	l4153
  3942   00317E                     l4149:
  3943   00317E  C00C  F001         	movff	fputs@c,fputc@c
  3944   003182  6A02               	clrf	(fputc@c+1)^0,c
  3945   003184  C00B  F003         	movff	fputs@fp,fputc@fp
  3946   003188  ECF0  F015         	call	_fputc	;wreg free
  3947   00318C  4A0D               	infsnz	fputs@i^0,f,c
  3948   00318E  2A0E               	incf	(fputs@i+1)^0,f,c
  3949   003190                     l4153:
  3950   003190  500D               	movf	fputs@i^0,w,c
  3951   003192  2409               	addwf	fputs@s^0,w,c
  3952   003194  6ED9               	movwf	fsr2l,c
  3953   003196  500E               	movf	(fputs@i+1)^0,w,c
  3954   003198  200A               	addwfc	(fputs@s+1)^0,w,c
  3955   00319A  6EDA               	movwf	fsr2h,c
  3956   00319C  50DF               	movf	indf2,w,c
  3957   00319E  6E0C               	movwf	fputs@c^0,c
  3958   0031A0  500C               	movf	fputs@c^0,w,c
  3959   0031A2  A4D8               	btfss	status,2,c
  3960   0031A4  EFD6  F018         	goto	u4481
  3961   0031A8  EFD8  F018         	goto	u4480
  3962   0031AC                     u4481:
  3963   0031AC  EFBF  F018         	goto	l4149
  3964   0031B0                     u4480:
  3965   0031B0  0012               	return		;funcret
  3966   0031B2                     __end_of_fputs:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _fputc *****************
  3970 ;; Defined at:
  3971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  c               2    0[COMRAM] int 
  3974 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3975 ;;		 -> sprintf@f(12), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  2    0[COMRAM] int 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3987 ;;      Params:         3       0       0       0       0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3989 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3990 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3991 ;;Total ram usage:        8 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 1
  3994 ;; This function calls:
  3995 ;;		_putch
  3996 ;; This function is called by:
  3997 ;;		_pad
  3998 ;;		_vfpfcnvrt
  3999 ;;		_fputs
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text13
  4004   002BE0                     __ptext13:
  4005                           	callstack 0
  4006   002BE0                     _fputc:
  4007                           	callstack 23
  4008   002BE0  5003               	movf	fputc@fp^0,w,c
  4009   002BE2  B4D8               	btfsc	status,2,c
  4010   002BE4  EFF6  F015         	goto	u4051
  4011   002BE8  EFF8  F015         	goto	u4050
  4012   002BEC                     u4051:
  4013   002BEC  EF00  F016         	goto	l3935
  4014   002BF0                     u4050:
  4015   002BF0  5003               	movf	fputc@fp^0,w,c
  4016   002BF2  A4D8               	btfss	status,2,c
  4017   002BF4  EFFE  F015         	goto	u4061
  4018   002BF8  EF00  F016         	goto	u4060
  4019   002BFC                     u4061:
  4020   002BFC  EF05  F016         	goto	l3937
  4021   002C00                     u4060:
  4022   002C00                     l3935:
  4023   002C00  5001               	movf	fputc@c^0,w,c
  4024   002C02  ECA7  F019         	call	_putch
  4025   002C06  EF44  F016         	goto	l1002
  4026   002C0A                     l3937:
  4027   002C0A  5003               	movf	fputc@fp^0,w,c
  4028   002C0C  6ED9               	movwf	fsr2l,c
  4029   002C0E  6ADA               	clrf	fsr2h,c
  4030   002C10  0E0A               	movlw	10
  4031   002C12  26D9               	addwf	fsr2l,f,c
  4032   002C14  50DE               	movf	postinc2,w,c
  4033   002C16  10DE               	iorwf	postinc2,w,c
  4034   002C18  B4D8               	btfsc	status,2,c
  4035   002C1A  EF11  F016         	goto	u4071
  4036   002C1E  EF13  F016         	goto	u4070
  4037   002C22                     u4071:
  4038   002C22  EF2C  F016         	goto	l3941
  4039   002C26                     u4070:
  4040   002C26  5003               	movf	fputc@fp^0,w,c
  4041   002C28  6ED9               	movwf	fsr2l,c
  4042   002C2A  6ADA               	clrf	fsr2h,c
  4043   002C2C  0E0A               	movlw	10
  4044   002C2E  26D9               	addwf	fsr2l,f,c
  4045   002C30  5003               	movf	fputc@fp^0,w,c
  4046   002C32  6EE1               	movwf	fsr1l,c
  4047   002C34  6AE2               	clrf	fsr1h,c
  4048   002C36  0E03               	movlw	3
  4049   002C38  26E1               	addwf	fsr1l,f,c
  4050   002C3A  50DE               	movf	postinc2,w,c
  4051   002C3C  5CE6               	subwf	postinc1,w,c
  4052   002C3E  50E6               	movf	postinc1,w,c
  4053   002C40  0A80               	xorlw	128
  4054   002C42  6E08               	movwf	(??_fputc+4)^0,c
  4055   002C44  50DE               	movf	postinc2,w,c
  4056   002C46  0A80               	xorlw	128
  4057   002C48  5808               	subwfb	(??_fputc+4)^0,w,c
  4058   002C4A  B0D8               	btfsc	status,0,c
  4059   002C4C  EF2A  F016         	goto	u4081
  4060   002C50  EF2C  F016         	goto	u4080
  4061   002C54                     u4081:
  4062   002C54  EF44  F016         	goto	l1002
  4063   002C58                     u4080:
  4064   002C58                     l3941:
  4065   002C58  5003               	movf	fputc@fp^0,w,c
  4066   002C5A  6ED9               	movwf	fsr2l,c
  4067   002C5C  6ADA               	clrf	fsr2h,c
  4068   002C5E  0E03               	movlw	3
  4069   002C60  26D9               	addwf	fsr2l,f,c
  4070   002C62  50DF               	movf	indf2,w,c
  4071   002C64  6E04               	movwf	??_fputc^0,c
  4072   002C66  5003               	movf	fputc@fp^0,w,c
  4073   002C68  6ED9               	movwf	fsr2l,c
  4074   002C6A  6ADA               	clrf	fsr2h,c
  4075   002C6C  50DF               	movf	indf2,w,c
  4076   002C6E  2404               	addwf	??_fputc^0,w,c
  4077   002C70  6ED9               	movwf	fsr2l,c
  4078   002C72  6ADA               	clrf	fsr2h,c
  4079   002C74  C001  FFDF         	movff	fputc@c,indf2
  4080   002C78  5003               	movf	fputc@fp^0,w,c
  4081   002C7A  6ED9               	movwf	fsr2l,c
  4082   002C7C  6ADA               	clrf	fsr2h,c
  4083   002C7E  0E03               	movlw	3
  4084   002C80  26D9               	addwf	fsr2l,f,c
  4085   002C82  2ADE               	incf	postinc2,f,c
  4086   002C84  0E00               	movlw	0
  4087   002C86  22DD               	addwfc	postdec2,f,c
  4088   002C88                     l1002:
  4089   002C88  0012               	return		;funcret
  4090   002C8A                     __end_of_fputc:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _putch *****************
  4094 ;; Defined at:
  4095 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  c               1    wreg     unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  c               1    0[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_fputc
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text14
  4123   00334E                     __ptext14:
  4124                           	callstack 0
  4125   00334E                     _putch:
  4126                           	callstack 23
  4127   00334E  0012               	return		;funcret
  4128   003350                     __end_of_putch:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function _memcpy *****************
  4132 ;; Defined at:
  4133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  d1              2    0[COMRAM] PTR void 
  4136 ;;		 -> dbuf(80), 
  4137 ;;  s1              2    2[COMRAM] PTR const void 
  4138 ;;		 -> dbuf(80), 
  4139 ;;  n               2    4[COMRAM] unsigned int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4142 ;;		 -> dbuf(80), 
  4143 ;;  d               2    7[COMRAM] PTR unsigned char 
  4144 ;;		 -> dbuf(80), 
  4145 ;;  tmp             1    6[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2    0[COMRAM] PTR void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4155 ;;      Params:         6       0       0       0       0       0       0       0       0
  4156 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4158 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4159 ;;Total ram usage:       11 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_efgtoa
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text15
  4169   003056                     __ptext15:
  4170                           	callstack 0
  4171   003056                     _memcpy:
  4172                           	callstack 26
  4173   003056  C003  F00A         	movff	memcpy@s1,memcpy@s
  4174   00305A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4175   00305E  C001  F008         	movff	memcpy@d1,memcpy@d
  4176   003062  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4177   003066  EF45  F018         	goto	l4647
  4178   00306A                     l4639:
  4179   00306A  C00A  FFD9         	movff	memcpy@s,fsr2l
  4180   00306E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4181   003072  50DF               	movf	indf2,w,c
  4182   003074  6E07               	movwf	memcpy@tmp^0,c
  4183   003076  4A0A               	infsnz	memcpy@s^0,f,c
  4184   003078  2A0B               	incf	(memcpy@s+1)^0,f,c
  4185   00307A  C008  FFD9         	movff	memcpy@d,fsr2l
  4186   00307E  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4187   003082  C007  FFDF         	movff	memcpy@tmp,indf2
  4188   003086  4A08               	infsnz	memcpy@d^0,f,c
  4189   003088  2A09               	incf	(memcpy@d+1)^0,f,c
  4190   00308A                     l4647:
  4191   00308A  0605               	decf	memcpy@n^0,f,c
  4192   00308C  A0D8               	btfss	status,0,c
  4193   00308E  0606               	decf	(memcpy@n+1)^0,f,c
  4194   003090  2805               	incf	memcpy@n^0,w,c
  4195   003092  E106               	bnz	u5341
  4196   003094  2806               	incf	(memcpy@n+1)^0,w,c
  4197   003096  A4D8               	btfss	status,2,c
  4198   003098  EF50  F018         	goto	u5341
  4199   00309C  EF52  F018         	goto	u5340
  4200   0030A0                     u5341:
  4201   0030A0  EF35  F018         	goto	l4639
  4202   0030A4                     u5340:
  4203   0030A4  0012               	return		;funcret
  4204   0030A6                     __end_of_memcpy:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _labs *****************
  4208 ;; Defined at:
  4209 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  a               4    0[COMRAM] long 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  4    0[COMRAM] long 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         4       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4225 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4226 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:        8 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_efgtoa
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text16
  4237   003000                     __ptext16:
  4238                           	callstack 0
  4239   003000                     _labs:
  4240                           	callstack 26
  4241   003000  BE04               	btfsc	(labs@a+3)^0,7,c
  4242   003002  EF05  F018         	goto	u5231
  4243   003006  EF07  F018         	goto	u5230
  4244   00300A                     u5231:
  4245   00300A  EF11  F018         	goto	l4605
  4246   00300E                     u5230:
  4247   00300E  C001  F001         	movff	labs@a,?_labs
  4248   003012  C002  F002         	movff	labs@a+1,?_labs+1
  4249   003016  C003  F003         	movff	labs@a+2,?_labs+2
  4250   00301A  C004  F004         	movff	labs@a+3,?_labs+3
  4251   00301E  EF2A  F018         	goto	l984
  4252   003022                     l4605:
  4253   003022  C001  F005         	movff	labs@a,??_labs
  4254   003026  C002  F006         	movff	labs@a+1,??_labs+1
  4255   00302A  C003  F007         	movff	labs@a+2,??_labs+2
  4256   00302E  C004  F008         	movff	labs@a+3,??_labs+3
  4257   003032  1E05               	comf	??_labs^0,f,c
  4258   003034  1E06               	comf	(??_labs+1)^0,f,c
  4259   003036  1E07               	comf	(??_labs+2)^0,f,c
  4260   003038  1E08               	comf	(??_labs+3)^0,f,c
  4261   00303A  2A05               	incf	??_labs^0,f,c
  4262   00303C  0E00               	movlw	0
  4263   00303E  2206               	addwfc	(??_labs+1)^0,f,c
  4264   003040  2207               	addwfc	(??_labs+2)^0,f,c
  4265   003042  2208               	addwfc	(??_labs+3)^0,f,c
  4266   003044  C005  F001         	movff	??_labs,?_labs
  4267   003048  C006  F002         	movff	??_labs+1,?_labs+1
  4268   00304C  C007  F003         	movff	??_labs+2,?_labs+2
  4269   003050  C008  F004         	movff	??_labs+3,?_labs+3
  4270   003054                     l984:
  4271   003054  0012               	return		;funcret
  4272   003056                     __end_of_labs:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _floorf *****************
  4276 ;; Defined at:
  4277 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  x               4   64[COMRAM] float 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  u               4   80[COMRAM] struct .
  4282 ;;  m               4   74[COMRAM] unsigned long 
  4283 ;;  e               2   78[COMRAM] int 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  4   64[COMRAM] float 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4293 ;;      Params:         4       0       0       0       0       0       0       0       0
  4294 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4295 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4296 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4297 ;;Total ram usage:       20 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_efgtoa
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text17
  4307   0021F2                     __ptext17:
  4308                           	callstack 0
  4309   0021F2                     _floorf:
  4310                           	callstack 26
  4311   0021F2  C0AC  F051         	movff	floorf@F521,floorf@u
  4312   0021F6  C0AD  F052         	movff	floorf@F521+1,floorf@u+1
  4313   0021FA  C0AE  F053         	movff	floorf@F521+2,floorf@u+2
  4314   0021FE  C0AF  F054         	movff	floorf@F521+3,floorf@u+3
  4315   002202  C041  F051         	movff	floorf@x,floorf@u
  4316   002206  C042  F052         	movff	floorf@x+1,floorf@u+1
  4317   00220A  C043  F053         	movff	floorf@x+2,floorf@u+2
  4318   00220E  C044  F054         	movff	floorf@x+3,floorf@u+3
  4319   002212  0E81               	movlw	129
  4320   002214  6E45               	movwf	??_floorf^0,c
  4321   002216  0EFF               	movlw	255
  4322   002218  6E46               	movwf	(??_floorf+1)^0,c
  4323   00221A  C051  F047         	movff	floorf@u,??_floorf+2
  4324   00221E  C052  F048         	movff	floorf@u+1,??_floorf+3
  4325   002222  C053  F049         	movff	floorf@u+2,??_floorf+4
  4326   002226  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4327   00222A  0E18               	movlw	24
  4328   00222C  EF1D  F011         	goto	u5240
  4329   002230                     u5245:
  4330   002230  90D8               	bcf	status,0,c
  4331   002232  324A               	rrcf	(??_floorf+5)^0,f,c
  4332   002234  3249               	rrcf	(??_floorf+4)^0,f,c
  4333   002236  3248               	rrcf	(??_floorf+3)^0,f,c
  4334   002238  3247               	rrcf	(??_floorf+2)^0,f,c
  4335   00223A                     u5240:
  4336   00223A  2EE8               	decfsz	wreg,f,c
  4337   00223C  EF18  F011         	goto	u5245
  4338   002240  5047               	movf	(??_floorf+2)^0,w,c
  4339   002242  2445               	addwf	??_floorf^0,w,c
  4340   002244  6E4F               	movwf	floorf@e^0,c
  4341   002246  0E00               	movlw	0
  4342   002248  2046               	addwfc	(??_floorf+1)^0,w,c
  4343   00224A  6E50               	movwf	(floorf@e+1)^0,c
  4344   00224C  BE50               	btfsc	(floorf@e+1)^0,7,c
  4345   00224E  EF32  F011         	goto	u5251
  4346   002252  5050               	movf	(floorf@e+1)^0,w,c
  4347   002254  E109               	bnz	u5250
  4348   002256  0E17               	movlw	23
  4349   002258  5C4F               	subwf	floorf@e^0,w,c
  4350   00225A  A0D8               	btfss	status,0,c
  4351   00225C  EF32  F011         	goto	u5251
  4352   002260  EF34  F011         	goto	u5250
  4353   002264                     u5251:
  4354   002264  EF3E  F011         	goto	l4615
  4355   002268                     u5250:
  4356   002268                     l4613:
  4357   002268  C041  F041         	movff	floorf@x,?_floorf
  4358   00226C  C042  F042         	movff	floorf@x+1,?_floorf+1
  4359   002270  C043  F043         	movff	floorf@x+2,?_floorf+2
  4360   002274  C044  F044         	movff	floorf@x+3,?_floorf+3
  4361   002278  EF01  F012         	goto	l970
  4362   00227C                     l4615:
  4363   00227C  BE50               	btfsc	(floorf@e+1)^0,7,c
  4364   00227E  EF43  F011         	goto	u5261
  4365   002282  EF45  F011         	goto	u5260
  4366   002286                     u5261:
  4367   002286  EFB5  F011         	goto	l4625
  4368   00228A                     u5260:
  4369   00228A  C04F  F045         	movff	floorf@e,??_floorf
  4370   00228E  0EFF               	movlw	255
  4371   002290  6E46               	movwf	(??_floorf+1)^0,c
  4372   002292  0EFF               	movlw	255
  4373   002294  6E47               	movwf	(??_floorf+2)^0,c
  4374   002296  0E7F               	movlw	127
  4375   002298  6E48               	movwf	(??_floorf+3)^0,c
  4376   00229A  0E00               	movlw	0
  4377   00229C  6E49               	movwf	(??_floorf+4)^0,c
  4378   00229E                     u5275:
  4379   00229E  6645               	tstfsz	??_floorf^0,c
  4380   0022A0  EF54  F011         	goto	u5276
  4381   0022A4  EF5C  F011         	goto	u5277
  4382   0022A8                     u5276:
  4383   0022A8  3449               	rlcf	(??_floorf+4)^0,w,c
  4384   0022AA  3249               	rrcf	(??_floorf+4)^0,f,c
  4385   0022AC  3248               	rrcf	(??_floorf+3)^0,f,c
  4386   0022AE  3247               	rrcf	(??_floorf+2)^0,f,c
  4387   0022B0  3246               	rrcf	(??_floorf+1)^0,f,c
  4388   0022B2  2E45               	decfsz	??_floorf^0,f,c
  4389   0022B4  EF4F  F011         	goto	u5275
  4390   0022B8                     u5277:
  4391   0022B8  C046  F04B         	movff	??_floorf+1,floorf@m
  4392   0022BC  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4393   0022C0  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4394   0022C4  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4395   0022C8  504B               	movf	floorf@m^0,w,c
  4396   0022CA  1451               	andwf	floorf@u^0,w,c
  4397   0022CC  6E45               	movwf	??_floorf^0,c
  4398   0022CE  504C               	movf	(floorf@m+1)^0,w,c
  4399   0022D0  1452               	andwf	(floorf@u+1)^0,w,c
  4400   0022D2  6E46               	movwf	(??_floorf+1)^0,c
  4401   0022D4  504D               	movf	(floorf@m+2)^0,w,c
  4402   0022D6  1453               	andwf	(floorf@u+2)^0,w,c
  4403   0022D8  6E47               	movwf	(??_floorf+2)^0,c
  4404   0022DA  504E               	movf	(floorf@m+3)^0,w,c
  4405   0022DC  1454               	andwf	(floorf@u+3)^0,w,c
  4406   0022DE  6E48               	movwf	(??_floorf+3)^0,c
  4407   0022E0  5045               	movf	??_floorf^0,w,c
  4408   0022E2  1046               	iorwf	(??_floorf+1)^0,w,c
  4409   0022E4  1047               	iorwf	(??_floorf+2)^0,w,c
  4410   0022E6  1048               	iorwf	(??_floorf+3)^0,w,c
  4411   0022E8  A4D8               	btfss	status,2,c
  4412   0022EA  EF79  F011         	goto	u5281
  4413   0022EE  EF7B  F011         	goto	u5280
  4414   0022F2                     u5281:
  4415   0022F2  EF7D  F011         	goto	l4621
  4416   0022F6                     u5280:
  4417   0022F6  EF34  F011         	goto	l4613
  4418   0022FA                     l4621:
  4419   0022FA  C051  F045         	movff	floorf@u,??_floorf
  4420   0022FE  C052  F046         	movff	floorf@u+1,??_floorf+1
  4421   002302  C053  F047         	movff	floorf@u+2,??_floorf+2
  4422   002306  C054  F048         	movff	floorf@u+3,??_floorf+3
  4423   00230A  0E20               	movlw	32
  4424   00230C  EF8D  F011         	goto	u5290
  4425   002310                     u5295:
  4426   002310  90D8               	bcf	status,0,c
  4427   002312  3248               	rrcf	(??_floorf+3)^0,f,c
  4428   002314  3247               	rrcf	(??_floorf+2)^0,f,c
  4429   002316  3246               	rrcf	(??_floorf+1)^0,f,c
  4430   002318  3245               	rrcf	??_floorf^0,f,c
  4431   00231A                     u5290:
  4432   00231A  2EE8               	decfsz	wreg,f,c
  4433   00231C  EF88  F011         	goto	u5295
  4434   002320  5045               	movf	??_floorf^0,w,c
  4435   002322  1046               	iorwf	(??_floorf+1)^0,w,c
  4436   002324  1047               	iorwf	(??_floorf+2)^0,w,c
  4437   002326  1048               	iorwf	(??_floorf+3)^0,w,c
  4438   002328  B4D8               	btfsc	status,2,c
  4439   00232A  EF99  F011         	goto	u5301
  4440   00232E  EF9B  F011         	goto	u5300
  4441   002332                     u5301:
  4442   002332  EFA3  F011         	goto	l973
  4443   002336                     u5300:
  4444   002336  504B               	movf	floorf@m^0,w,c
  4445   002338  2651               	addwf	floorf@u^0,f,c
  4446   00233A  504C               	movf	(floorf@m+1)^0,w,c
  4447   00233C  2252               	addwfc	(floorf@u+1)^0,f,c
  4448   00233E  504D               	movf	(floorf@m+2)^0,w,c
  4449   002340  2253               	addwfc	(floorf@u+2)^0,f,c
  4450   002342  504E               	movf	(floorf@m+3)^0,w,c
  4451   002344  2254               	addwfc	(floorf@u+3)^0,f,c
  4452   002346                     l973:
  4453   002346  1C4B               	comf	floorf@m^0,w,c
  4454   002348  6E45               	movwf	??_floorf^0,c
  4455   00234A  1C4C               	comf	(floorf@m+1)^0,w,c
  4456   00234C  6E46               	movwf	(??_floorf+1)^0,c
  4457   00234E  1C4D               	comf	(floorf@m+2)^0,w,c
  4458   002350  6E47               	movwf	(??_floorf+2)^0,c
  4459   002352  1C4E               	comf	(floorf@m+3)^0,w,c
  4460   002354  6E48               	movwf	(??_floorf+3)^0,c
  4461   002356  5045               	movf	??_floorf^0,w,c
  4462   002358  1651               	andwf	floorf@u^0,f,c
  4463   00235A  5046               	movf	(??_floorf+1)^0,w,c
  4464   00235C  1652               	andwf	(floorf@u+1)^0,f,c
  4465   00235E  5047               	movf	(??_floorf+2)^0,w,c
  4466   002360  1653               	andwf	(floorf@u+2)^0,f,c
  4467   002362  5048               	movf	(??_floorf+3)^0,w,c
  4468   002364  1654               	andwf	(floorf@u+3)^0,f,c
  4469   002366  EFF9  F011         	goto	l4633
  4470   00236A                     l4625:
  4471   00236A  C051  F045         	movff	floorf@u,??_floorf
  4472   00236E  C052  F046         	movff	floorf@u+1,??_floorf+1
  4473   002372  C053  F047         	movff	floorf@u+2,??_floorf+2
  4474   002376  C054  F048         	movff	floorf@u+3,??_floorf+3
  4475   00237A  0E20               	movlw	32
  4476   00237C  EFC5  F011         	goto	u5310
  4477   002380                     u5315:
  4478   002380  90D8               	bcf	status,0,c
  4479   002382  3248               	rrcf	(??_floorf+3)^0,f,c
  4480   002384  3247               	rrcf	(??_floorf+2)^0,f,c
  4481   002386  3246               	rrcf	(??_floorf+1)^0,f,c
  4482   002388  3245               	rrcf	??_floorf^0,f,c
  4483   00238A                     u5310:
  4484   00238A  2EE8               	decfsz	wreg,f,c
  4485   00238C  EFC0  F011         	goto	u5315
  4486   002390  5045               	movf	??_floorf^0,w,c
  4487   002392  1046               	iorwf	(??_floorf+1)^0,w,c
  4488   002394  1047               	iorwf	(??_floorf+2)^0,w,c
  4489   002396  1048               	iorwf	(??_floorf+3)^0,w,c
  4490   002398  A4D8               	btfss	status,2,c
  4491   00239A  EFD1  F011         	goto	u5321
  4492   00239E  EFD3  F011         	goto	u5320
  4493   0023A2                     u5321:
  4494   0023A2  EFDD  F011         	goto	l4629
  4495   0023A6                     u5320:
  4496   0023A6  0E00               	movlw	0
  4497   0023A8  6E51               	movwf	floorf@u^0,c
  4498   0023AA  0E00               	movlw	0
  4499   0023AC  6E52               	movwf	(floorf@u+1)^0,c
  4500   0023AE  0E00               	movlw	0
  4501   0023B0  6E53               	movwf	(floorf@u+2)^0,c
  4502   0023B2  0E00               	movlw	0
  4503   0023B4  6E54               	movwf	(floorf@u+3)^0,c
  4504   0023B6  EFF9  F011         	goto	l4633
  4505   0023BA                     l4629:
  4506   0023BA  90D8               	bcf	status,0,c
  4507   0023BC  3451               	rlcf	floorf@u^0,w,c
  4508   0023BE  6E45               	movwf	??_floorf^0,c
  4509   0023C0  3452               	rlcf	(floorf@u+1)^0,w,c
  4510   0023C2  6E46               	movwf	(??_floorf+1)^0,c
  4511   0023C4  3453               	rlcf	(floorf@u+2)^0,w,c
  4512   0023C6  6E47               	movwf	(??_floorf+2)^0,c
  4513   0023C8  3454               	rlcf	(floorf@u+3)^0,w,c
  4514   0023CA  6E48               	movwf	(??_floorf+3)^0,c
  4515   0023CC  5045               	movf	??_floorf^0,w,c
  4516   0023CE  1046               	iorwf	(??_floorf+1)^0,w,c
  4517   0023D0  1047               	iorwf	(??_floorf+2)^0,w,c
  4518   0023D2  1048               	iorwf	(??_floorf+3)^0,w,c
  4519   0023D4  B4D8               	btfsc	status,2,c
  4520   0023D6  EFEF  F011         	goto	u5331
  4521   0023DA  EFF1  F011         	goto	u5330
  4522   0023DE                     u5331:
  4523   0023DE  EFF9  F011         	goto	l4633
  4524   0023E2                     u5330:
  4525   0023E2  0E00               	movlw	0
  4526   0023E4  6E51               	movwf	floorf@u^0,c
  4527   0023E6  0E00               	movlw	0
  4528   0023E8  6E52               	movwf	(floorf@u+1)^0,c
  4529   0023EA  0E80               	movlw	128
  4530   0023EC  6E53               	movwf	(floorf@u+2)^0,c
  4531   0023EE  0EBF               	movlw	191
  4532   0023F0  6E54               	movwf	(floorf@u+3)^0,c
  4533   0023F2                     l4633:
  4534   0023F2  C051  F041         	movff	floorf@u,?_floorf
  4535   0023F6  C052  F042         	movff	floorf@u+1,?_floorf+1
  4536   0023FA  C053  F043         	movff	floorf@u+2,?_floorf+2
  4537   0023FE  C054  F044         	movff	floorf@u+3,?_floorf+3
  4538   002402                     l970:
  4539   002402  0012               	return		;funcret
  4540   002404                     __end_of_floorf:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function ___fpclassifyf *****************
  4544 ;; Defined at:
  4545 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  x               4    0[COMRAM] float 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  u               4   10[COMRAM] struct .
  4550 ;;  e               2    8[COMRAM] int 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2    0[COMRAM] int 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4560 ;;      Params:         4       0       0       0       0       0       0       0       0
  4561 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4562 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4563 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4564 ;;Total ram usage:       14 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_efgtoa
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text18
  4574   002A10                     __ptext18:
  4575                           	callstack 0
  4576   002A10                     ___fpclassifyf:
  4577                           	callstack 26
  4578   002A10  C0B0  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4579   002A14  C0B1  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4580   002A18  C0B2  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4581   002A1C  C0B3  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4582   002A20  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4583   002A24  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4584   002A28  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4585   002A2C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4586   002A30  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4587   002A34  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4588   002A38  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4589   002A3C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4590   002A40  0E18               	movlw	24
  4591   002A42  EF28  F015         	goto	u5150
  4592   002A46                     u5155:
  4593   002A46  90D8               	bcf	status,0,c
  4594   002A48  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4595   002A4A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4596   002A4C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4597   002A4E  3205               	rrcf	??___fpclassifyf^0,f,c
  4598   002A50                     u5150:
  4599   002A50  2EE8               	decfsz	wreg,f,c
  4600   002A52  EF23  F015         	goto	u5155
  4601   002A56  5005               	movf	??___fpclassifyf^0,w,c
  4602   002A58  6E09               	movwf	___fpclassifyf@e^0,c
  4603   002A5A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4604   002A5C  5009               	movf	___fpclassifyf@e^0,w,c
  4605   002A5E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4606   002A60  A4D8               	btfss	status,2,c
  4607   002A62  EF35  F015         	goto	u5161
  4608   002A66  EF37  F015         	goto	u5160
  4609   002A6A                     u5161:
  4610   002A6A  EF57  F015         	goto	l4587
  4611   002A6E                     u5160:
  4612   002A6E  90D8               	bcf	status,0,c
  4613   002A70  340B               	rlcf	___fpclassifyf@u^0,w,c
  4614   002A72  6E05               	movwf	??___fpclassifyf^0,c
  4615   002A74  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4616   002A76  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4617   002A78  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4618   002A7A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4619   002A7C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4620   002A7E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4621   002A80  5005               	movf	??___fpclassifyf^0,w,c
  4622   002A82  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4623   002A84  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4624   002A86  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4625   002A88  A4D8               	btfss	status,2,c
  4626   002A8A  EF49  F015         	goto	u5171
  4627   002A8E  EF4B  F015         	goto	u5170
  4628   002A92                     u5171:
  4629   002A92  EF51  F015         	goto	l4583
  4630   002A96                     u5170:
  4631   002A96  0E00               	movlw	0
  4632   002A98  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4633   002A9A  0E02               	movlw	2
  4634   002A9C  6E01               	movwf	?___fpclassifyf^0,c
  4635   002A9E  EF86  F015         	goto	l963
  4636   002AA2                     l4583:
  4637   002AA2  0E00               	movlw	0
  4638   002AA4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4639   002AA6  0E03               	movlw	3
  4640   002AA8  6E01               	movwf	?___fpclassifyf^0,c
  4641   002AAA  EF86  F015         	goto	l963
  4642   002AAE                     l4587:
  4643   002AAE  2809               	incf	___fpclassifyf@e^0,w,c
  4644   002AB0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4645   002AB2  A4D8               	btfss	status,2,c
  4646   002AB4  EF5E  F015         	goto	u5181
  4647   002AB8  EF60  F015         	goto	u5180
  4648   002ABC                     u5181:
  4649   002ABC  EF82  F015         	goto	l4593
  4650   002AC0                     u5180:
  4651   002AC0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4652   002AC4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4653   002AC8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4654   002ACC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4655   002AD0  0E09               	movlw	9
  4656   002AD2                     u5195:
  4657   002AD2  90D8               	bcf	status,0,c
  4658   002AD4  3605               	rlcf	??___fpclassifyf^0,f,c
  4659   002AD6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4660   002AD8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4661   002ADA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4662   002ADC  2EE8               	decfsz	wreg,f,c
  4663   002ADE  EF69  F015         	goto	u5195
  4664   002AE2  5005               	movf	??___fpclassifyf^0,w,c
  4665   002AE4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4666   002AE6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4667   002AE8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4668   002AEA  B4D8               	btfsc	status,2,c
  4669   002AEC  EF7A  F015         	goto	u5201
  4670   002AF0  EF7D  F015         	goto	u5200
  4671   002AF4                     u5201:
  4672   002AF4  0E01               	movlw	1
  4673   002AF6  EF7E  F015         	goto	u5210
  4674   002AFA                     u5200:
  4675   002AFA  0E00               	movlw	0
  4676   002AFC                     u5210:
  4677   002AFC  6E01               	movwf	?___fpclassifyf^0,c
  4678   002AFE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4679   002B00  EF86  F015         	goto	l963
  4680   002B04                     l4593:
  4681   002B04  0E00               	movlw	0
  4682   002B06  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4683   002B08  0E04               	movlw	4
  4684   002B0A  6E01               	movwf	?___fpclassifyf^0,c
  4685   002B0C                     l963:
  4686   002B0C  0012               	return		;funcret
  4687   002B0E                     __end_of___fpclassifyf:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function ___fltol *****************
  4691 ;; Defined at:
  4692 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  f1              4    0[COMRAM] int 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  exp1            1    9[COMRAM] unsigned char 
  4697 ;;  sign1           1    8[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4    0[COMRAM] long 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4707 ;;      Params:         4       0       0       0       0       0       0       0       0
  4708 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4710 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4711 ;;Total ram usage:       10 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_efgtoa
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text19
  4721   002806                     __ptext19:
  4722                           	callstack 0
  4723   002806                     ___fltol:
  4724                           	callstack 26
  4725   002806  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4726   002808  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4727   00280A  6E0A               	movwf	___fltol@exp1^0,c
  4728   00280C  500A               	movf	___fltol@exp1^0,w,c
  4729   00280E  A4D8               	btfss	status,2,c
  4730   002810  EF0C  F014         	goto	u5001
  4731   002814  EF0E  F014         	goto	u5000
  4732   002818                     u5001:
  4733   002818  EF18  F014         	goto	l4487
  4734   00281C                     u5000:
  4735   00281C                     l4483:
  4736   00281C  0E00               	movlw	0
  4737   00281E  6E01               	movwf	?___fltol^0,c
  4738   002820  0E00               	movlw	0
  4739   002822  6E02               	movwf	(?___fltol+1)^0,c
  4740   002824  0E00               	movlw	0
  4741   002826  6E03               	movwf	(?___fltol+2)^0,c
  4742   002828  0E00               	movlw	0
  4743   00282A  6E04               	movwf	(?___fltol+3)^0,c
  4744   00282C  EF85  F014         	goto	l420
  4745   002830                     l4487:
  4746   002830  C001  F005         	movff	___fltol@f1,??___fltol
  4747   002834  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4748   002838  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4749   00283C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4750   002840  0E20               	movlw	32
  4751   002842  EF28  F014         	goto	u5010
  4752   002846                     u5015:
  4753   002846  90D8               	bcf	status,0,c
  4754   002848  3208               	rrcf	(??___fltol+3)^0,f,c
  4755   00284A  3207               	rrcf	(??___fltol+2)^0,f,c
  4756   00284C  3206               	rrcf	(??___fltol+1)^0,f,c
  4757   00284E  3205               	rrcf	??___fltol^0,f,c
  4758   002850                     u5010:
  4759   002850  2EE8               	decfsz	wreg,f,c
  4760   002852  EF23  F014         	goto	u5015
  4761   002856  5005               	movf	??___fltol^0,w,c
  4762   002858  6E09               	movwf	___fltol@sign1^0,c
  4763   00285A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4764   00285C  0EFF               	movlw	255
  4765   00285E  1601               	andwf	___fltol@f1^0,f,c
  4766   002860  0EFF               	movlw	255
  4767   002862  1602               	andwf	(___fltol@f1+1)^0,f,c
  4768   002864  0EFF               	movlw	255
  4769   002866  1603               	andwf	(___fltol@f1+2)^0,f,c
  4770   002868  0E00               	movlw	0
  4771   00286A  1604               	andwf	(___fltol@f1+3)^0,f,c
  4772   00286C  0E96               	movlw	150
  4773   00286E  5E0A               	subwf	___fltol@exp1^0,f,c
  4774   002870  BE0A               	btfsc	___fltol@exp1^0,7,c
  4775   002872  EF3F  F014         	goto	u5020
  4776   002876  EF3D  F014         	goto	u5021
  4777   00287A                     u5021:
  4778   00287A  EF55  F014         	goto	l4507
  4779   00287E                     u5020:
  4780   00287E  500A               	movf	___fltol@exp1^0,w,c
  4781   002880  0A80               	xorlw	128
  4782   002882  0F97               	addlw	151
  4783   002884  B0D8               	btfsc	status,0,c
  4784   002886  EF47  F014         	goto	u5031
  4785   00288A  EF49  F014         	goto	u5030
  4786   00288E                     u5031:
  4787   00288E  EF4B  F014         	goto	l4503
  4788   002892                     u5030:
  4789   002892  EF0E  F014         	goto	l4483
  4790   002896                     l4503:
  4791   002896  90D8               	bcf	status,0,c
  4792   002898  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4793   00289A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4794   00289C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4795   00289E  3201               	rrcf	___fltol@f1^0,f,c
  4796   0028A0  3E0A               	incfsz	___fltol@exp1^0,f,c
  4797   0028A2  EF4B  F014         	goto	l4503
  4798   0028A6  EF6D  F014         	goto	l4517
  4799   0028AA                     l4507:
  4800   0028AA  0E1F               	movlw	31
  4801   0028AC  640A               	cpfsgt	___fltol@exp1^0,c
  4802   0028AE  EF5B  F014         	goto	u5041
  4803   0028B2  EF5D  F014         	goto	u5040
  4804   0028B6                     u5041:
  4805   0028B6  EF65  F014         	goto	l4515
  4806   0028BA                     u5040:
  4807   0028BA  EF0E  F014         	goto	l4483
  4808   0028BE                     l4513:
  4809   0028BE  90D8               	bcf	status,0,c
  4810   0028C0  3601               	rlcf	___fltol@f1^0,f,c
  4811   0028C2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4812   0028C4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4813   0028C6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4814   0028C8  060A               	decf	___fltol@exp1^0,f,c
  4815   0028CA                     l4515:
  4816   0028CA  500A               	movf	___fltol@exp1^0,w,c
  4817   0028CC  A4D8               	btfss	status,2,c
  4818   0028CE  EF6B  F014         	goto	u5051
  4819   0028D2  EF6D  F014         	goto	u5050
  4820   0028D6                     u5051:
  4821   0028D6  EF5F  F014         	goto	l4513
  4822   0028DA                     u5050:
  4823   0028DA                     l4517:
  4824   0028DA  5009               	movf	___fltol@sign1^0,w,c
  4825   0028DC  B4D8               	btfsc	status,2,c
  4826   0028DE  EF73  F014         	goto	u5061
  4827   0028E2  EF75  F014         	goto	u5060
  4828   0028E6                     u5061:
  4829   0028E6  EF7D  F014         	goto	l4521
  4830   0028EA                     u5060:
  4831   0028EA  1E04               	comf	(___fltol@f1+3)^0,f,c
  4832   0028EC  1E03               	comf	(___fltol@f1+2)^0,f,c
  4833   0028EE  1E02               	comf	(___fltol@f1+1)^0,f,c
  4834   0028F0  6C01               	negf	___fltol@f1^0,c
  4835   0028F2  0E00               	movlw	0
  4836   0028F4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4837   0028F6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4838   0028F8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4839   0028FA                     l4521:
  4840   0028FA  C001  F001         	movff	___fltol@f1,?___fltol
  4841   0028FE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4842   002902  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4843   002906  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4844   00290A                     l420:
  4845   00290A  0012               	return		;funcret
  4846   00290C                     __end_of___fltol:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function ___flsub *****************
  4850 ;; Defined at:
  4851 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  b               4   39[COMRAM] long 
  4854 ;;  a               4   43[COMRAM] long 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  4   39[COMRAM] long 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4866 ;;      Params:         8       0       0       0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4869 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4870 ;;Total ram usage:        8 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 1
  4873 ;; This function calls:
  4874 ;;		___fladd
  4875 ;; This function is called by:
  4876 ;;		_efgtoa
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text20
  4881   0030A6                     __ptext20:
  4882                           	callstack 0
  4883   0030A6                     ___flsub:
  4884                           	callstack 25
  4885   0030A6  0E00               	movlw	0
  4886   0030A8  1A2C               	xorwf	___flsub@a^0,f,c
  4887   0030AA  0E00               	movlw	0
  4888   0030AC  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4889   0030AE  0E00               	movlw	0
  4890   0030B0  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4891   0030B2  0E80               	movlw	128
  4892   0030B4  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4893   0030B6  C028  F001         	movff	___flsub@b,___fladd@b
  4894   0030BA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4895   0030BE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4896   0030C2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4897   0030C6  C02C  F005         	movff	___flsub@a,___fladd@a
  4898   0030CA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4899   0030CE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4900   0030D2  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4901   0030D6  EC3A  F009         	call	___fladd	;wreg free
  4902   0030DA  C001  F028         	movff	?___fladd,?___flsub
  4903   0030DE  C002  F029         	movff	?___fladd+1,?___flsub+1
  4904   0030E2  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4905   0030E6  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4906   0030EA  0012               	return		;funcret
  4907   0030EC                     __end_of___flsub:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function ___fladd *****************
  4911 ;; Defined at:
  4912 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  b               4    0[COMRAM] long 
  4915 ;;  a               4    4[COMRAM] long 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  grs             1   15[COMRAM] unsigned char 
  4918 ;;  bexp            1   14[COMRAM] unsigned char 
  4919 ;;  aexp            1   13[COMRAM] unsigned char 
  4920 ;;  signs           1   12[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  4    0[COMRAM] unsigned char 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4930 ;;      Params:         8       0       0       0       0       0       0       0       0
  4931 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4933 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4934 ;;Total ram usage:       16 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		___flsub
  4940 ;;		_efgtoa
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text21
  4945   001274                     __ptext21:
  4946                           	callstack 0
  4947   001274                     ___fladd:
  4948                           	callstack 25
  4949   001274  5004               	movf	(___fladd@b+3)^0,w,c
  4950   001276  0B80               	andlw	128
  4951   001278  6E0D               	movwf	___fladd@signs^0,c
  4952   00127A  5004               	movf	(___fladd@b+3)^0,w,c
  4953   00127C  2404               	addwf	(___fladd@b+3)^0,w,c
  4954   00127E  6E0F               	movwf	___fladd@bexp^0,c
  4955   001280  AE03               	btfss	(___fladd@b+2)^0,7,c
  4956   001282  EF45  F009         	goto	u4091
  4957   001286  EF47  F009         	goto	u4090
  4958   00128A                     u4091:
  4959   00128A  EF48  F009         	goto	l3951
  4960   00128E                     u4090:
  4961   00128E  800F               	bsf	___fladd@bexp^0,0,c
  4962   001290                     l3951:
  4963   001290  500F               	movf	___fladd@bexp^0,w,c
  4964   001292  B4D8               	btfsc	status,2,c
  4965   001294  EF4E  F009         	goto	u4101
  4966   001298  EF50  F009         	goto	u4100
  4967   00129C                     u4101:
  4968   00129C  EF65  F009         	goto	l3961
  4969   0012A0                     u4100:
  4970   0012A0  280F               	incf	___fladd@bexp^0,w,c
  4971   0012A2  A4D8               	btfss	status,2,c
  4972   0012A4  EF56  F009         	goto	u4111
  4973   0012A8  EF58  F009         	goto	u4110
  4974   0012AC                     u4111:
  4975   0012AC  EF60  F009         	goto	l3957
  4976   0012B0                     u4110:
  4977   0012B0  0E00               	movlw	0
  4978   0012B2  6E01               	movwf	___fladd@b^0,c
  4979   0012B4  0E00               	movlw	0
  4980   0012B6  6E02               	movwf	(___fladd@b+1)^0,c
  4981   0012B8  0E00               	movlw	0
  4982   0012BA  6E03               	movwf	(___fladd@b+2)^0,c
  4983   0012BC  0E00               	movlw	0
  4984   0012BE  6E04               	movwf	(___fladd@b+3)^0,c
  4985   0012C0                     l3957:
  4986   0012C0  8E03               	bsf	(___fladd@b+2)^0,7,c
  4987   0012C2  0E00               	movlw	0
  4988   0012C4  6E04               	movwf	(___fladd@b+3)^0,c
  4989   0012C6  EF6D  F009         	goto	l3963
  4990   0012CA                     l3961:
  4991   0012CA  0E00               	movlw	0
  4992   0012CC  6E01               	movwf	___fladd@b^0,c
  4993   0012CE  0E00               	movlw	0
  4994   0012D0  6E02               	movwf	(___fladd@b+1)^0,c
  4995   0012D2  0E00               	movlw	0
  4996   0012D4  6E03               	movwf	(___fladd@b+2)^0,c
  4997   0012D6  0E00               	movlw	0
  4998   0012D8  6E04               	movwf	(___fladd@b+3)^0,c
  4999   0012DA                     l3963:
  5000   0012DA  5008               	movf	(___fladd@a+3)^0,w,c
  5001   0012DC  0B80               	andlw	128
  5002   0012DE  6E0E               	movwf	___fladd@aexp^0,c
  5003   0012E0  500D               	movf	___fladd@signs^0,w,c
  5004   0012E2  180E               	xorwf	___fladd@aexp^0,w,c
  5005   0012E4  B4D8               	btfsc	status,2,c
  5006   0012E6  EF77  F009         	goto	u4121
  5007   0012EA  EF79  F009         	goto	u4120
  5008   0012EE                     u4121:
  5009   0012EE  EF7A  F009         	goto	l3969
  5010   0012F2                     u4120:
  5011   0012F2  8C0D               	bsf	___fladd@signs^0,6,c
  5012   0012F4                     l3969:
  5013   0012F4  5008               	movf	(___fladd@a+3)^0,w,c
  5014   0012F6  2408               	addwf	(___fladd@a+3)^0,w,c
  5015   0012F8  6E0E               	movwf	___fladd@aexp^0,c
  5016   0012FA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5017   0012FC  EF82  F009         	goto	u4131
  5018   001300  EF84  F009         	goto	u4130
  5019   001304                     u4131:
  5020   001304  EF85  F009         	goto	l3975
  5021   001308                     u4130:
  5022   001308  800E               	bsf	___fladd@aexp^0,0,c
  5023   00130A                     l3975:
  5024   00130A  500E               	movf	___fladd@aexp^0,w,c
  5025   00130C  B4D8               	btfsc	status,2,c
  5026   00130E  EF8B  F009         	goto	u4141
  5027   001312  EF8D  F009         	goto	u4140
  5028   001316                     u4141:
  5029   001316  EFA2  F009         	goto	l3985
  5030   00131A                     u4140:
  5031   00131A  280E               	incf	___fladd@aexp^0,w,c
  5032   00131C  A4D8               	btfss	status,2,c
  5033   00131E  EF93  F009         	goto	u4151
  5034   001322  EF95  F009         	goto	u4150
  5035   001326                     u4151:
  5036   001326  EF9D  F009         	goto	l3981
  5037   00132A                     u4150:
  5038   00132A  0E00               	movlw	0
  5039   00132C  6E05               	movwf	___fladd@a^0,c
  5040   00132E  0E00               	movlw	0
  5041   001330  6E06               	movwf	(___fladd@a+1)^0,c
  5042   001332  0E00               	movlw	0
  5043   001334  6E07               	movwf	(___fladd@a+2)^0,c
  5044   001336  0E00               	movlw	0
  5045   001338  6E08               	movwf	(___fladd@a+3)^0,c
  5046   00133A                     l3981:
  5047   00133A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5048   00133C  0E00               	movlw	0
  5049   00133E  6E08               	movwf	(___fladd@a+3)^0,c
  5050   001340  EFAA  F009         	goto	l3987
  5051   001344                     l3985:
  5052   001344  0E00               	movlw	0
  5053   001346  6E05               	movwf	___fladd@a^0,c
  5054   001348  0E00               	movlw	0
  5055   00134A  6E06               	movwf	(___fladd@a+1)^0,c
  5056   00134C  0E00               	movlw	0
  5057   00134E  6E07               	movwf	(___fladd@a+2)^0,c
  5058   001350  0E00               	movlw	0
  5059   001352  6E08               	movwf	(___fladd@a+3)^0,c
  5060   001354                     l3987:
  5061   001354  500F               	movf	___fladd@bexp^0,w,c
  5062   001356  5C0E               	subwf	___fladd@aexp^0,w,c
  5063   001358  B0D8               	btfsc	status,0,c
  5064   00135A  EFB1  F009         	goto	u4161
  5065   00135E  EFB3  F009         	goto	u4160
  5066   001362                     u4161:
  5067   001362  EFDA  F009         	goto	l4023
  5068   001366                     u4160:
  5069   001366  AC0D               	btfss	___fladd@signs^0,6,c
  5070   001368  EFB8  F009         	goto	u4171
  5071   00136C  EFBA  F009         	goto	u4170
  5072   001370                     u4171:
  5073   001370  EFBC  F009         	goto	l3993
  5074   001374                     u4170:
  5075   001374  0E80               	movlw	128
  5076   001376  1A0D               	xorwf	___fladd@signs^0,f,c
  5077   001378                     l3993:
  5078   001378  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5079   00137C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5080   001380  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5081   001384  C001  F010         	movff	___fladd@b,___fladd@grs
  5082   001388  C005  F001         	movff	___fladd@a,___fladd@b
  5083   00138C  C010  F005         	movff	___fladd@grs,___fladd@a
  5084   001390  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5085   001394  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5086   001398  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5087   00139C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5088   0013A0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5089   0013A4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5090   0013A8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5091   0013AC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5092   0013B0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5093   0013B4                     l4023:
  5094   0013B4  0E00               	movlw	0
  5095   0013B6  6E10               	movwf	___fladd@grs^0,c
  5096   0013B8  500F               	movf	___fladd@bexp^0,w,c
  5097   0013BA  C00E  F009         	movff	___fladd@aexp,??___fladd
  5098   0013BE  6A0A               	clrf	(??___fladd+1)^0,c
  5099   0013C0  5E09               	subwf	??___fladd^0,f,c
  5100   0013C2  0E00               	movlw	0
  5101   0013C4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5102   0013C6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5103   0013C8  EFEF  F009         	goto	u4181
  5104   0013CC  500A               	movf	(??___fladd+1)^0,w,c
  5105   0013CE  E109               	bnz	u4180
  5106   0013D0  0E1A               	movlw	26
  5107   0013D2  5C09               	subwf	??___fladd^0,w,c
  5108   0013D4  A0D8               	btfss	status,0,c
  5109   0013D6  EFEF  F009         	goto	u4181
  5110   0013DA  EFF1  F009         	goto	u4180
  5111   0013DE                     u4181:
  5112   0013DE  EF28  F00A         	goto	l652
  5113   0013E2                     u4180:
  5114   0013E2  5001               	movf	___fladd@b^0,w,c
  5115   0013E4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5116   0013E6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5117   0013E8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5118   0013EA  A4D8               	btfss	status,2,c
  5119   0013EC  EFFA  F009         	goto	u4191
  5120   0013F0  EFFD  F009         	goto	u4190
  5121   0013F4                     u4191:
  5122   0013F4  0E01               	movlw	1
  5123   0013F6  EFFE  F009         	goto	u4200
  5124   0013FA                     u4190:
  5125   0013FA  0E00               	movlw	0
  5126   0013FC                     u4200:
  5127   0013FC  6E10               	movwf	___fladd@grs^0,c
  5128   0013FE  0E00               	movlw	0
  5129   001400  6E01               	movwf	___fladd@b^0,c
  5130   001402  0E00               	movlw	0
  5131   001404  6E02               	movwf	(___fladd@b+1)^0,c
  5132   001406  0E00               	movlw	0
  5133   001408  6E03               	movwf	(___fladd@b+2)^0,c
  5134   00140A  0E00               	movlw	0
  5135   00140C  6E04               	movwf	(___fladd@b+3)^0,c
  5136   00140E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5137   001412  EF31  F00A         	goto	l651
  5138   001416                     l653:
  5139   001416  A010               	btfss	___fladd@grs^0,0,c
  5140   001418  EF10  F00A         	goto	u4211
  5141   00141C  EF12  F00A         	goto	u4210
  5142   001420                     u4211:
  5143   001420  EF18  F00A         	goto	l4035
  5144   001424                     u4210:
  5145   001424  90D8               	bcf	status,0,c
  5146   001426  3010               	rrcf	___fladd@grs^0,w,c
  5147   001428  0901               	iorlw	1
  5148   00142A  6E10               	movwf	___fladd@grs^0,c
  5149   00142C  EF1A  F00A         	goto	l4037
  5150   001430                     l4035:
  5151   001430  90D8               	bcf	status,0,c
  5152   001432  3210               	rrcf	___fladd@grs^0,f,c
  5153   001434                     l4037:
  5154   001434  A001               	btfss	___fladd@b^0,0,c
  5155   001436  EF1F  F00A         	goto	u4221
  5156   00143A  EF21  F00A         	goto	u4220
  5157   00143E                     u4221:
  5158   00143E  EF22  F00A         	goto	l4041
  5159   001442                     u4220:
  5160   001442  8E10               	bsf	___fladd@grs^0,7,c
  5161   001444                     l4041:
  5162   001444  3404               	rlcf	(___fladd@b+3)^0,w,c
  5163   001446  3204               	rrcf	(___fladd@b+3)^0,f,c
  5164   001448  3203               	rrcf	(___fladd@b+2)^0,f,c
  5165   00144A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5166   00144C  3201               	rrcf	___fladd@b^0,f,c
  5167   00144E  2A0F               	incf	___fladd@bexp^0,f,c
  5168   001450                     l652:
  5169   001450  500E               	movf	___fladd@aexp^0,w,c
  5170   001452  5C0F               	subwf	___fladd@bexp^0,w,c
  5171   001454  A0D8               	btfss	status,0,c
  5172   001456  EF2F  F00A         	goto	u4231
  5173   00145A  EF31  F00A         	goto	u4230
  5174   00145E                     u4231:
  5175   00145E  EF0B  F00A         	goto	l653
  5176   001462                     u4230:
  5177   001462                     l651:
  5178   001462  BC0D               	btfsc	___fladd@signs^0,6,c
  5179   001464  EF36  F00A         	goto	u4241
  5180   001468  EF38  F00A         	goto	u4240
  5181   00146C                     u4241:
  5182   00146C  EF78  F00A         	goto	l4069
  5183   001470                     u4240:
  5184   001470  500F               	movf	___fladd@bexp^0,w,c
  5185   001472  A4D8               	btfss	status,2,c
  5186   001474  EF3E  F00A         	goto	u4251
  5187   001478  EF40  F00A         	goto	u4250
  5188   00147C                     u4251:
  5189   00147C  EF4A  F00A         	goto	l4051
  5190   001480                     u4250:
  5191   001480  0E00               	movlw	0
  5192   001482  6E01               	movwf	?___fladd^0,c
  5193   001484  0E00               	movlw	0
  5194   001486  6E02               	movwf	(?___fladd+1)^0,c
  5195   001488  0E00               	movlw	0
  5196   00148A  6E03               	movwf	(?___fladd+2)^0,c
  5197   00148C  0E00               	movlw	0
  5198   00148E  6E04               	movwf	(?___fladd+3)^0,c
  5199   001490  EF99  F00B         	goto	l660
  5200   001494                     l4051:
  5201   001494  5005               	movf	___fladd@a^0,w,c
  5202   001496  2601               	addwf	___fladd@b^0,f,c
  5203   001498  5006               	movf	(___fladd@a+1)^0,w,c
  5204   00149A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5205   00149C  5007               	movf	(___fladd@a+2)^0,w,c
  5206   00149E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5207   0014A0  5008               	movf	(___fladd@a+3)^0,w,c
  5208   0014A2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5209   0014A4  A004               	btfss	(___fladd@b+3)^0,0,c
  5210   0014A6  EF57  F00A         	goto	u4261
  5211   0014AA  EF59  F00A         	goto	u4260
  5212   0014AE                     u4261:
  5213   0014AE  EF05  F00B         	goto	l4105
  5214   0014B2                     u4260:
  5215   0014B2  A010               	btfss	___fladd@grs^0,0,c
  5216   0014B4  EF5E  F00A         	goto	u4271
  5217   0014B8  EF60  F00A         	goto	u4270
  5218   0014BC                     u4271:
  5219   0014BC  EF66  F00A         	goto	l4059
  5220   0014C0                     u4270:
  5221   0014C0  90D8               	bcf	status,0,c
  5222   0014C2  3010               	rrcf	___fladd@grs^0,w,c
  5223   0014C4  0901               	iorlw	1
  5224   0014C6  6E10               	movwf	___fladd@grs^0,c
  5225   0014C8  EF68  F00A         	goto	l4061
  5226   0014CC                     l4059:
  5227   0014CC  90D8               	bcf	status,0,c
  5228   0014CE  3210               	rrcf	___fladd@grs^0,f,c
  5229   0014D0                     l4061:
  5230   0014D0  A001               	btfss	___fladd@b^0,0,c
  5231   0014D2  EF6D  F00A         	goto	u4281
  5232   0014D6  EF6F  F00A         	goto	u4280
  5233   0014DA                     u4281:
  5234   0014DA  EF70  F00A         	goto	l4065
  5235   0014DE                     u4280:
  5236   0014DE  8E10               	bsf	___fladd@grs^0,7,c
  5237   0014E0                     l4065:
  5238   0014E0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5239   0014E2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5240   0014E4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5241   0014E6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5242   0014E8  3201               	rrcf	___fladd@b^0,f,c
  5243   0014EA  2A0F               	incf	___fladd@bexp^0,f,c
  5244   0014EC  EF05  F00B         	goto	l4105
  5245   0014F0                     l4069:
  5246   0014F0  5005               	movf	___fladd@a^0,w,c
  5247   0014F2  5C01               	subwf	___fladd@b^0,w,c
  5248   0014F4  5006               	movf	(___fladd@a+1)^0,w,c
  5249   0014F6  5802               	subwfb	(___fladd@b+1)^0,w,c
  5250   0014F8  5007               	movf	(___fladd@a+2)^0,w,c
  5251   0014FA  5803               	subwfb	(___fladd@b+2)^0,w,c
  5252   0014FC  5004               	movf	(___fladd@b+3)^0,w,c
  5253   0014FE  0A80               	xorlw	128
  5254   001500  6E09               	movwf	??___fladd^0,c
  5255   001502  5008               	movf	(___fladd@a+3)^0,w,c
  5256   001504  0A80               	xorlw	128
  5257   001506  5809               	subwfb	??___fladd^0,w,c
  5258   001508  B0D8               	btfsc	status,0,c
  5259   00150A  EF89  F00A         	goto	u4291
  5260   00150E  EF8B  F00A         	goto	u4290
  5261   001512                     u4291:
  5262   001512  EFB6  F00A         	goto	l4079
  5263   001516                     u4290:
  5264   001516  5001               	movf	___fladd@b^0,w,c
  5265   001518  5C05               	subwf	___fladd@a^0,w,c
  5266   00151A  6E09               	movwf	??___fladd^0,c
  5267   00151C  5002               	movf	(___fladd@b+1)^0,w,c
  5268   00151E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5269   001520  6E0A               	movwf	(??___fladd+1)^0,c
  5270   001522  5003               	movf	(___fladd@b+2)^0,w,c
  5271   001524  5807               	subwfb	(___fladd@a+2)^0,w,c
  5272   001526  6E0B               	movwf	(??___fladd+2)^0,c
  5273   001528  5004               	movf	(___fladd@b+3)^0,w,c
  5274   00152A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5275   00152C  6E0C               	movwf	(??___fladd+3)^0,c
  5276   00152E  0EFF               	movlw	255
  5277   001530  2409               	addwf	??___fladd^0,w,c
  5278   001532  6E01               	movwf	___fladd@b^0,c
  5279   001534  0EFF               	movlw	255
  5280   001536  200A               	addwfc	(??___fladd+1)^0,w,c
  5281   001538  6E02               	movwf	(___fladd@b+1)^0,c
  5282   00153A  0EFF               	movlw	255
  5283   00153C  200B               	addwfc	(??___fladd+2)^0,w,c
  5284   00153E  6E03               	movwf	(___fladd@b+2)^0,c
  5285   001540  0EFF               	movlw	255
  5286   001542  200C               	addwfc	(??___fladd+3)^0,w,c
  5287   001544  6E04               	movwf	(___fladd@b+3)^0,c
  5288   001546  0E80               	movlw	128
  5289   001548  1A0D               	xorwf	___fladd@signs^0,f,c
  5290   00154A  6C10               	negf	___fladd@grs^0,c
  5291   00154C  5010               	movf	___fladd@grs^0,w,c
  5292   00154E  A4D8               	btfss	status,2,c
  5293   001550  EFAC  F00A         	goto	u4301
  5294   001554  EFAE  F00A         	goto	u4300
  5295   001558                     u4301:
  5296   001558  EFBE  F00A         	goto	l668
  5297   00155C                     u4300:
  5298   00155C  0E01               	movlw	1
  5299   00155E  2601               	addwf	___fladd@b^0,f,c
  5300   001560  0E00               	movlw	0
  5301   001562  2202               	addwfc	(___fladd@b+1)^0,f,c
  5302   001564  2203               	addwfc	(___fladd@b+2)^0,f,c
  5303   001566  2204               	addwfc	(___fladd@b+3)^0,f,c
  5304   001568  EFBE  F00A         	goto	l668
  5305   00156C                     l4079:
  5306   00156C  5005               	movf	___fladd@a^0,w,c
  5307   00156E  5E01               	subwf	___fladd@b^0,f,c
  5308   001570  5006               	movf	(___fladd@a+1)^0,w,c
  5309   001572  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5310   001574  5007               	movf	(___fladd@a+2)^0,w,c
  5311   001576  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5312   001578  5008               	movf	(___fladd@a+3)^0,w,c
  5313   00157A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5314   00157C                     l668:
  5315   00157C  5001               	movf	___fladd@b^0,w,c
  5316   00157E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5317   001580  1003               	iorwf	(___fladd@b+2)^0,w,c
  5318   001582  1004               	iorwf	(___fladd@b+3)^0,w,c
  5319   001584  A4D8               	btfss	status,2,c
  5320   001586  EFC7  F00A         	goto	u4311
  5321   00158A  EFC9  F00A         	goto	u4310
  5322   00158E                     u4311:
  5323   00158E  EFFE  F00A         	goto	l4103
  5324   001592                     u4310:
  5325   001592  5010               	movf	___fladd@grs^0,w,c
  5326   001594  A4D8               	btfss	status,2,c
  5327   001596  EFCF  F00A         	goto	u4321
  5328   00159A  EFD1  F00A         	goto	u4320
  5329   00159E                     u4321:
  5330   00159E  EFFE  F00A         	goto	l4103
  5331   0015A2                     u4320:
  5332   0015A2  0E00               	movlw	0
  5333   0015A4  6E01               	movwf	?___fladd^0,c
  5334   0015A6  0E00               	movlw	0
  5335   0015A8  6E02               	movwf	(?___fladd+1)^0,c
  5336   0015AA  0E00               	movlw	0
  5337   0015AC  6E03               	movwf	(?___fladd+2)^0,c
  5338   0015AE  0E00               	movlw	0
  5339   0015B0  6E04               	movwf	(?___fladd+3)^0,c
  5340   0015B2  EF99  F00B         	goto	l660
  5341   0015B6                     l4087:
  5342   0015B6  90D8               	bcf	status,0,c
  5343   0015B8  3601               	rlcf	___fladd@b^0,f,c
  5344   0015BA  3602               	rlcf	(___fladd@b+1)^0,f,c
  5345   0015BC  3603               	rlcf	(___fladd@b+2)^0,f,c
  5346   0015BE  3604               	rlcf	(___fladd@b+3)^0,f,c
  5347   0015C0  AE10               	btfss	___fladd@grs^0,7,c
  5348   0015C2  EFE5  F00A         	goto	u4331
  5349   0015C6  EFE7  F00A         	goto	u4330
  5350   0015CA                     u4331:
  5351   0015CA  EFE8  F00A         	goto	l4093
  5352   0015CE                     u4330:
  5353   0015CE  8001               	bsf	___fladd@b^0,0,c
  5354   0015D0                     l4093:
  5355   0015D0  A010               	btfss	___fladd@grs^0,0,c
  5356   0015D2  EFED  F00A         	goto	u4341
  5357   0015D6  EFEF  F00A         	goto	u4340
  5358   0015DA                     u4341:
  5359   0015DA  EFF3  F00A         	goto	l4097
  5360   0015DE                     u4340:
  5361   0015DE  80D8               	bsf	status,0,c
  5362   0015E0  3610               	rlcf	___fladd@grs^0,f,c
  5363   0015E2  EFF5  F00A         	goto	l4099
  5364   0015E6                     l4097:
  5365   0015E6  90D8               	bcf	status,0,c
  5366   0015E8  3610               	rlcf	___fladd@grs^0,f,c
  5367   0015EA                     l4099:
  5368   0015EA  500F               	movf	___fladd@bexp^0,w,c
  5369   0015EC  B4D8               	btfsc	status,2,c
  5370   0015EE  EFFB  F00A         	goto	u4351
  5371   0015F2  EFFD  F00A         	goto	u4350
  5372   0015F6                     u4351:
  5373   0015F6  EFFE  F00A         	goto	l4103
  5374   0015FA                     u4350:
  5375   0015FA  060F               	decf	___fladd@bexp^0,f,c
  5376   0015FC                     l4103:
  5377   0015FC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5378   0015FE  EF03  F00B         	goto	u4361
  5379   001602  EF05  F00B         	goto	u4360
  5380   001606                     u4361:
  5381   001606  EFDB  F00A         	goto	l4087
  5382   00160A                     u4360:
  5383   00160A                     l4105:
  5384   00160A  0E00               	movlw	0
  5385   00160C  6E0E               	movwf	___fladd@aexp^0,c
  5386   00160E  AE10               	btfss	___fladd@grs^0,7,c
  5387   001610  EF0C  F00B         	goto	u4371
  5388   001614  EF0E  F00B         	goto	u4370
  5389   001618                     u4371:
  5390   001618  EF26  F00B         	goto	l677
  5391   00161C                     u4370:
  5392   00161C  C010  F009         	movff	___fladd@grs,??___fladd
  5393   001620  0E7F               	movlw	127
  5394   001622  1609               	andwf	??___fladd^0,f,c
  5395   001624  B4D8               	btfsc	status,2,c
  5396   001626  EF17  F00B         	goto	u4381
  5397   00162A  EF19  F00B         	goto	u4380
  5398   00162E                     u4381:
  5399   00162E  EF1D  F00B         	goto	l678
  5400   001632                     u4380:
  5401   001632                     l4111:
  5402   001632  0E01               	movlw	1
  5403   001634  6E0E               	movwf	___fladd@aexp^0,c
  5404   001636  EF26  F00B         	goto	l677
  5405   00163A                     l678:
  5406   00163A  A001               	btfss	___fladd@b^0,0,c
  5407   00163C  EF22  F00B         	goto	u4391
  5408   001640  EF24  F00B         	goto	u4390
  5409   001644                     u4391:
  5410   001644  EF26  F00B         	goto	l677
  5411   001648                     u4390:
  5412   001648  EF19  F00B         	goto	l4111
  5413   00164C                     l677:
  5414   00164C  500E               	movf	___fladd@aexp^0,w,c
  5415   00164E  B4D8               	btfsc	status,2,c
  5416   001650  EF2C  F00B         	goto	u4401
  5417   001654  EF2E  F00B         	goto	u4400
  5418   001658                     u4401:
  5419   001658  EF59  F00B         	goto	l4123
  5420   00165C                     u4400:
  5421   00165C  0E01               	movlw	1
  5422   00165E  2601               	addwf	___fladd@b^0,f,c
  5423   001660  0E00               	movlw	0
  5424   001662  2202               	addwfc	(___fladd@b+1)^0,f,c
  5425   001664  2203               	addwfc	(___fladd@b+2)^0,f,c
  5426   001666  2204               	addwfc	(___fladd@b+3)^0,f,c
  5427   001668  A004               	btfss	(___fladd@b+3)^0,0,c
  5428   00166A  EF39  F00B         	goto	u4411
  5429   00166E  EF3B  F00B         	goto	u4410
  5430   001672                     u4411:
  5431   001672  EF59  F00B         	goto	l4123
  5432   001676                     u4410:
  5433   001676  C001  F009         	movff	___fladd@b,??___fladd
  5434   00167A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5435   00167E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5436   001682  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5437   001686  340C               	rlcf	(??___fladd+3)^0,w,c
  5438   001688  320C               	rrcf	(??___fladd+3)^0,f,c
  5439   00168A  320B               	rrcf	(??___fladd+2)^0,f,c
  5440   00168C  320A               	rrcf	(??___fladd+1)^0,f,c
  5441   00168E  3209               	rrcf	??___fladd^0,f,c
  5442   001690  C009  F001         	movff	??___fladd,___fladd@b
  5443   001694  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5444   001698  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5445   00169C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5446   0016A0  280F               	incf	___fladd@bexp^0,w,c
  5447   0016A2  B4D8               	btfsc	status,2,c
  5448   0016A4  EF56  F00B         	goto	u4421
  5449   0016A8  EF58  F00B         	goto	u4420
  5450   0016AC                     u4421:
  5451   0016AC  EF59  F00B         	goto	l4123
  5452   0016B0                     u4420:
  5453   0016B0  2A0F               	incf	___fladd@bexp^0,f,c
  5454   0016B2                     l4123:
  5455   0016B2  280F               	incf	___fladd@bexp^0,w,c
  5456   0016B4  B4D8               	btfsc	status,2,c
  5457   0016B6  EF5F  F00B         	goto	u4431
  5458   0016BA  EF61  F00B         	goto	u4430
  5459   0016BE                     u4431:
  5460   0016BE  EF69  F00B         	goto	l4127
  5461   0016C2                     u4430:
  5462   0016C2  500F               	movf	___fladd@bexp^0,w,c
  5463   0016C4  A4D8               	btfss	status,2,c
  5464   0016C6  EF67  F00B         	goto	u4441
  5465   0016CA  EF69  F00B         	goto	u4440
  5466   0016CE                     u4441:
  5467   0016CE  EF7B  F00B         	goto	l4131
  5468   0016D2                     u4440:
  5469   0016D2                     l4127:
  5470   0016D2  0E00               	movlw	0
  5471   0016D4  6E01               	movwf	___fladd@b^0,c
  5472   0016D6  0E00               	movlw	0
  5473   0016D8  6E02               	movwf	(___fladd@b+1)^0,c
  5474   0016DA  0E00               	movlw	0
  5475   0016DC  6E03               	movwf	(___fladd@b+2)^0,c
  5476   0016DE  0E00               	movlw	0
  5477   0016E0  6E04               	movwf	(___fladd@b+3)^0,c
  5478   0016E2  500F               	movf	___fladd@bexp^0,w,c
  5479   0016E4  A4D8               	btfss	status,2,c
  5480   0016E6  EF77  F00B         	goto	u4451
  5481   0016EA  EF79  F00B         	goto	u4450
  5482   0016EE                     u4451:
  5483   0016EE  EF7B  F00B         	goto	l4131
  5484   0016F2                     u4450:
  5485   0016F2  0E00               	movlw	0
  5486   0016F4  6E0D               	movwf	___fladd@signs^0,c
  5487   0016F6                     l4131:
  5488   0016F6  A00F               	btfss	___fladd@bexp^0,0,c
  5489   0016F8  EF80  F00B         	goto	u4461
  5490   0016FC  EF82  F00B         	goto	u4460
  5491   001700                     u4461:
  5492   001700  EF85  F00B         	goto	l4135
  5493   001704                     u4460:
  5494   001704  8E03               	bsf	(___fladd@b+2)^0,7,c
  5495   001706  EF86  F00B         	goto	l4137
  5496   00170A                     l4135:
  5497   00170A  9E03               	bcf	(___fladd@b+2)^0,7,c
  5498   00170C                     l4137:
  5499   00170C  90D8               	bcf	status,0,c
  5500   00170E  300F               	rrcf	___fladd@bexp^0,w,c
  5501   001710  6E04               	movwf	(___fladd@b+3)^0,c
  5502   001712  AE0D               	btfss	___fladd@signs^0,7,c
  5503   001714  EF8E  F00B         	goto	u4471
  5504   001718  EF90  F00B         	goto	u4470
  5505   00171C                     u4471:
  5506   00171C  EF91  F00B         	goto	l4143
  5507   001720                     u4470:
  5508   001720  8E04               	bsf	(___fladd@b+3)^0,7,c
  5509   001722                     l4143:
  5510   001722  C001  F001         	movff	___fladd@b,?___fladd
  5511   001726  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5512   00172A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5513   00172E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5514   001732                     l660:
  5515   001732  0012               	return		;funcret
  5516   001734                     __end_of___fladd:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function ___flneg *****************
  5520 ;; Defined at:
  5521 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  f1              4    0[COMRAM] unsigned char 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  4    0[COMRAM] unsigned char 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5535 ;;      Params:         4       0       0       0       0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5538 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5539 ;;Total ram usage:        4 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_efgtoa
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text22
  5549   003224                     __ptext22:
  5550                           	callstack 0
  5551   003224                     ___flneg:
  5552                           	callstack 26
  5553   003224  5001               	movf	___flneg@f1^0,w,c
  5554   003226  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5555   003228  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5556   00322A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5557   00322C  B4D8               	btfsc	status,2,c
  5558   00322E  EF1B  F019         	goto	u4991
  5559   003232  EF1D  F019         	goto	u4990
  5560   003236                     u4991:
  5561   003236  EF25  F019         	goto	l4477
  5562   00323A                     u4990:
  5563   00323A  0E00               	movlw	0
  5564   00323C  1A01               	xorwf	___flneg@f1^0,f,c
  5565   00323E  0E00               	movlw	0
  5566   003240  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5567   003242  0E00               	movlw	0
  5568   003244  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5569   003246  0E80               	movlw	128
  5570   003248  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5571   00324A                     l4477:
  5572   00324A  C001  F001         	movff	___flneg@f1,?___flneg
  5573   00324E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5574   003252  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5575   003256  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5576   00325A  0012               	return		;funcret
  5577   00325C                     __end_of___flneg:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___flmul *****************
  5581 ;; Defined at:
  5582 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  b               4   14[COMRAM] unsigned char 
  5585 ;;  a               4   18[COMRAM] unsigned char 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  prod            4   33[COMRAM] struct .
  5588 ;;  grs             4   28[COMRAM] unsigned long 
  5589 ;;  temp            2   37[COMRAM] struct .
  5590 ;;  bexp            1   32[COMRAM] unsigned char 
  5591 ;;  aexp            1   27[COMRAM] unsigned char 
  5592 ;;  sign            1   26[COMRAM] unsigned char 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  4   14[COMRAM] unsigned char 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0, prodl, prodh
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5602 ;;      Params:         8       0       0       0       0       0       0       0       0
  5603 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5604 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5605 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5606 ;;Total ram usage:       25 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;;		_efgtoa
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text23
  5617   001734                     __ptext23:
  5618                           	callstack 0
  5619   001734                     ___flmul:
  5620                           	callstack 26
  5621   001734  5012               	movf	(___flmul@b+3)^0,w,c
  5622   001736  0B80               	andlw	128
  5623   001738  6E1B               	movwf	___flmul@sign^0,c
  5624   00173A  5012               	movf	(___flmul@b+3)^0,w,c
  5625   00173C  2412               	addwf	(___flmul@b+3)^0,w,c
  5626   00173E  6E21               	movwf	___flmul@bexp^0,c
  5627   001740  AE11               	btfss	(___flmul@b+2)^0,7,c
  5628   001742  EFA5  F00B         	goto	u4721
  5629   001746  EFA7  F00B         	goto	u4720
  5630   00174A                     u4721:
  5631   00174A  EFA8  F00B         	goto	l4305
  5632   00174E                     u4720:
  5633   00174E  8021               	bsf	___flmul@bexp^0,0,c
  5634   001750                     l4305:
  5635   001750  5021               	movf	___flmul@bexp^0,w,c
  5636   001752  B4D8               	btfsc	status,2,c
  5637   001754  EFAE  F00B         	goto	u4731
  5638   001758  EFB0  F00B         	goto	u4730
  5639   00175C                     u4731:
  5640   00175C  EFC3  F00B         	goto	l4313
  5641   001760                     u4730:
  5642   001760  2821               	incf	___flmul@bexp^0,w,c
  5643   001762  A4D8               	btfss	status,2,c
  5644   001764  EFB6  F00B         	goto	u4741
  5645   001768  EFB8  F00B         	goto	u4740
  5646   00176C                     u4741:
  5647   00176C  EFC0  F00B         	goto	l4311
  5648   001770                     u4740:
  5649   001770  0E00               	movlw	0
  5650   001772  6E0F               	movwf	___flmul@b^0,c
  5651   001774  0E00               	movlw	0
  5652   001776  6E10               	movwf	(___flmul@b+1)^0,c
  5653   001778  0E00               	movlw	0
  5654   00177A  6E11               	movwf	(___flmul@b+2)^0,c
  5655   00177C  0E00               	movlw	0
  5656   00177E  6E12               	movwf	(___flmul@b+3)^0,c
  5657   001780                     l4311:
  5658   001780  8E11               	bsf	(___flmul@b+2)^0,7,c
  5659   001782  EFCB  F00B         	goto	l4315
  5660   001786                     l4313:
  5661   001786  0E00               	movlw	0
  5662   001788  6E0F               	movwf	___flmul@b^0,c
  5663   00178A  0E00               	movlw	0
  5664   00178C  6E10               	movwf	(___flmul@b+1)^0,c
  5665   00178E  0E00               	movlw	0
  5666   001790  6E11               	movwf	(___flmul@b+2)^0,c
  5667   001792  0E00               	movlw	0
  5668   001794  6E12               	movwf	(___flmul@b+3)^0,c
  5669   001796                     l4315:
  5670   001796  5016               	movf	(___flmul@a+3)^0,w,c
  5671   001798  0B80               	andlw	128
  5672   00179A  1A1B               	xorwf	___flmul@sign^0,f,c
  5673   00179C  5016               	movf	(___flmul@a+3)^0,w,c
  5674   00179E  2416               	addwf	(___flmul@a+3)^0,w,c
  5675   0017A0  6E1C               	movwf	___flmul@aexp^0,c
  5676   0017A2  AE15               	btfss	(___flmul@a+2)^0,7,c
  5677   0017A4  EFD6  F00B         	goto	u4751
  5678   0017A8  EFD8  F00B         	goto	u4750
  5679   0017AC                     u4751:
  5680   0017AC  EFD9  F00B         	goto	l4323
  5681   0017B0                     u4750:
  5682   0017B0  801C               	bsf	___flmul@aexp^0,0,c
  5683   0017B2                     l4323:
  5684   0017B2  501C               	movf	___flmul@aexp^0,w,c
  5685   0017B4  B4D8               	btfsc	status,2,c
  5686   0017B6  EFDF  F00B         	goto	u4761
  5687   0017BA  EFE1  F00B         	goto	u4760
  5688   0017BE                     u4761:
  5689   0017BE  EFF4  F00B         	goto	l4331
  5690   0017C2                     u4760:
  5691   0017C2  281C               	incf	___flmul@aexp^0,w,c
  5692   0017C4  A4D8               	btfss	status,2,c
  5693   0017C6  EFE7  F00B         	goto	u4771
  5694   0017CA  EFE9  F00B         	goto	u4770
  5695   0017CE                     u4771:
  5696   0017CE  EFF1  F00B         	goto	l4329
  5697   0017D2                     u4770:
  5698   0017D2  0E00               	movlw	0
  5699   0017D4  6E13               	movwf	___flmul@a^0,c
  5700   0017D6  0E00               	movlw	0
  5701   0017D8  6E14               	movwf	(___flmul@a+1)^0,c
  5702   0017DA  0E00               	movlw	0
  5703   0017DC  6E15               	movwf	(___flmul@a+2)^0,c
  5704   0017DE  0E00               	movlw	0
  5705   0017E0  6E16               	movwf	(___flmul@a+3)^0,c
  5706   0017E2                     l4329:
  5707   0017E2  8E15               	bsf	(___flmul@a+2)^0,7,c
  5708   0017E4  EFFC  F00B         	goto	l737
  5709   0017E8                     l4331:
  5710   0017E8  0E00               	movlw	0
  5711   0017EA  6E13               	movwf	___flmul@a^0,c
  5712   0017EC  0E00               	movlw	0
  5713   0017EE  6E14               	movwf	(___flmul@a+1)^0,c
  5714   0017F0  0E00               	movlw	0
  5715   0017F2  6E15               	movwf	(___flmul@a+2)^0,c
  5716   0017F4  0E00               	movlw	0
  5717   0017F6  6E16               	movwf	(___flmul@a+3)^0,c
  5718   0017F8                     l737:
  5719   0017F8  501C               	movf	___flmul@aexp^0,w,c
  5720   0017FA  B4D8               	btfsc	status,2,c
  5721   0017FC  EF02  F00C         	goto	u4781
  5722   001800  EF04  F00C         	goto	u4780
  5723   001804                     u4781:
  5724   001804  EF0C  F00C         	goto	l4335
  5725   001808                     u4780:
  5726   001808  5021               	movf	___flmul@bexp^0,w,c
  5727   00180A  A4D8               	btfss	status,2,c
  5728   00180C  EF0A  F00C         	goto	u4791
  5729   001810  EF0C  F00C         	goto	u4790
  5730   001814                     u4791:
  5731   001814  EF16  F00C         	goto	l4339
  5732   001818                     u4790:
  5733   001818                     l4335:
  5734   001818  0E00               	movlw	0
  5735   00181A  6E0F               	movwf	?___flmul^0,c
  5736   00181C  0E00               	movlw	0
  5737   00181E  6E10               	movwf	(?___flmul+1)^0,c
  5738   001820  0E00               	movlw	0
  5739   001822  6E11               	movwf	(?___flmul+2)^0,c
  5740   001824  0E00               	movlw	0
  5741   001826  6E12               	movwf	(?___flmul+3)^0,c
  5742   001828  EFAE  F00D         	goto	l741
  5743   00182C                     l4339:
  5744   00182C  5015               	movf	(___flmul@a+2)^0,w,c
  5745   00182E  020F               	mulwf	___flmul@b^0,c
  5746   001830  CFF3 F026          	movff	prodl,___flmul@temp
  5747   001834  CFF4 F027          	movff	prodh,___flmul@temp+1
  5748   001838  5026               	movf	___flmul@temp^0,w,c
  5749   00183A  6E1D               	movwf	___flmul@grs^0,c
  5750   00183C  6A1E               	clrf	(___flmul@grs+1)^0,c
  5751   00183E  6A1F               	clrf	(___flmul@grs+2)^0,c
  5752   001840  6A20               	clrf	(___flmul@grs+3)^0,c
  5753   001842  5027               	movf	(___flmul@temp+1)^0,w,c
  5754   001844  6E22               	movwf	___flmul@prod^0,c
  5755   001846  6A23               	clrf	(___flmul@prod+1)^0,c
  5756   001848  6A24               	clrf	(___flmul@prod+2)^0,c
  5757   00184A  6A25               	clrf	(___flmul@prod+3)^0,c
  5758   00184C  5014               	movf	(___flmul@a+1)^0,w,c
  5759   00184E  0210               	mulwf	(___flmul@b+1)^0,c
  5760   001850  CFF3 F026          	movff	prodl,___flmul@temp
  5761   001854  CFF4 F027          	movff	prodh,___flmul@temp+1
  5762   001858  5026               	movf	___flmul@temp^0,w,c
  5763   00185A  261D               	addwf	___flmul@grs^0,f,c
  5764   00185C  0E00               	movlw	0
  5765   00185E  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5766   001860  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5767   001862  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5768   001864  5027               	movf	(___flmul@temp+1)^0,w,c
  5769   001866  2622               	addwf	___flmul@prod^0,f,c
  5770   001868  0E00               	movlw	0
  5771   00186A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5772   00186C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5773   00186E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5774   001870  5013               	movf	___flmul@a^0,w,c
  5775   001872  0211               	mulwf	(___flmul@b+2)^0,c
  5776   001874  CFF3 F026          	movff	prodl,___flmul@temp
  5777   001878  CFF4 F027          	movff	prodh,___flmul@temp+1
  5778   00187C  5026               	movf	___flmul@temp^0,w,c
  5779   00187E  261D               	addwf	___flmul@grs^0,f,c
  5780   001880  0E00               	movlw	0
  5781   001882  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5782   001884  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5783   001886  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5784   001888  5027               	movf	(___flmul@temp+1)^0,w,c
  5785   00188A  2622               	addwf	___flmul@prod^0,f,c
  5786   00188C  0E00               	movlw	0
  5787   00188E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5788   001890  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5789   001892  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5790   001894  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5791   001898  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5792   00189C  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5793   0018A0  6A1D               	clrf	___flmul@grs^0,c
  5794   0018A2  5013               	movf	___flmul@a^0,w,c
  5795   0018A4  0210               	mulwf	(___flmul@b+1)^0,c
  5796   0018A6  CFF3 F026          	movff	prodl,___flmul@temp
  5797   0018AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5798   0018AE  5026               	movf	___flmul@temp^0,w,c
  5799   0018B0  261D               	addwf	___flmul@grs^0,f,c
  5800   0018B2  5027               	movf	(___flmul@temp+1)^0,w,c
  5801   0018B4  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5802   0018B6  0E00               	movlw	0
  5803   0018B8  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5804   0018BA  0E00               	movlw	0
  5805   0018BC  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5806   0018BE  5014               	movf	(___flmul@a+1)^0,w,c
  5807   0018C0  020F               	mulwf	___flmul@b^0,c
  5808   0018C2  CFF3 F026          	movff	prodl,___flmul@temp
  5809   0018C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5810   0018CA  5026               	movf	___flmul@temp^0,w,c
  5811   0018CC  261D               	addwf	___flmul@grs^0,f,c
  5812   0018CE  5027               	movf	(___flmul@temp+1)^0,w,c
  5813   0018D0  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5814   0018D2  0E00               	movlw	0
  5815   0018D4  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5816   0018D6  0E00               	movlw	0
  5817   0018D8  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5818   0018DA  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5819   0018DE  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5820   0018E2  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5821   0018E6  6A1D               	clrf	___flmul@grs^0,c
  5822   0018E8  5013               	movf	___flmul@a^0,w,c
  5823   0018EA  020F               	mulwf	___flmul@b^0,c
  5824   0018EC  CFF3 F026          	movff	prodl,___flmul@temp
  5825   0018F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5826   0018F4  5026               	movf	___flmul@temp^0,w,c
  5827   0018F6  261D               	addwf	___flmul@grs^0,f,c
  5828   0018F8  5027               	movf	(___flmul@temp+1)^0,w,c
  5829   0018FA  221E               	addwfc	(___flmul@grs+1)^0,f,c
  5830   0018FC  0E00               	movlw	0
  5831   0018FE  221F               	addwfc	(___flmul@grs+2)^0,f,c
  5832   001900  0E00               	movlw	0
  5833   001902  2220               	addwfc	(___flmul@grs+3)^0,f,c
  5834   001904  5015               	movf	(___flmul@a+2)^0,w,c
  5835   001906  0210               	mulwf	(___flmul@b+1)^0,c
  5836   001908  CFF3 F026          	movff	prodl,___flmul@temp
  5837   00190C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5838   001910  5026               	movf	___flmul@temp^0,w,c
  5839   001912  2622               	addwf	___flmul@prod^0,f,c
  5840   001914  5027               	movf	(___flmul@temp+1)^0,w,c
  5841   001916  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5842   001918  0E00               	movlw	0
  5843   00191A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5844   00191C  0E00               	movlw	0
  5845   00191E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5846   001920  5014               	movf	(___flmul@a+1)^0,w,c
  5847   001922  0211               	mulwf	(___flmul@b+2)^0,c
  5848   001924  CFF3 F026          	movff	prodl,___flmul@temp
  5849   001928  CFF4 F027          	movff	prodh,___flmul@temp+1
  5850   00192C  5026               	movf	___flmul@temp^0,w,c
  5851   00192E  2622               	addwf	___flmul@prod^0,f,c
  5852   001930  5027               	movf	(___flmul@temp+1)^0,w,c
  5853   001932  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5854   001934  0E00               	movlw	0
  5855   001936  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5856   001938  0E00               	movlw	0
  5857   00193A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5858   00193C  5015               	movf	(___flmul@a+2)^0,w,c
  5859   00193E  0211               	mulwf	(___flmul@b+2)^0,c
  5860   001940  CFF3 F026          	movff	prodl,___flmul@temp
  5861   001944  CFF4 F027          	movff	prodh,___flmul@temp+1
  5862   001948  5026               	movf	___flmul@temp^0,w,c
  5863   00194A  6E17               	movwf	??___flmul^0,c
  5864   00194C  5027               	movf	(___flmul@temp+1)^0,w,c
  5865   00194E  6E18               	movwf	(??___flmul+1)^0,c
  5866   001950  6A19               	clrf	(??___flmul+2)^0,c
  5867   001952  6A1A               	clrf	(??___flmul+3)^0,c
  5868   001954  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5869   001958  C018  F019         	movff	??___flmul+1,??___flmul+2
  5870   00195C  C017  F018         	movff	??___flmul,??___flmul+1
  5871   001960  6A17               	clrf	??___flmul^0,c
  5872   001962  5017               	movf	??___flmul^0,w,c
  5873   001964  2622               	addwf	___flmul@prod^0,f,c
  5874   001966  5018               	movf	(??___flmul+1)^0,w,c
  5875   001968  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5876   00196A  5019               	movf	(??___flmul+2)^0,w,c
  5877   00196C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5878   00196E  501A               	movf	(??___flmul+3)^0,w,c
  5879   001970  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5880   001972  C01D  F017         	movff	___flmul@grs,??___flmul
  5881   001976  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
  5882   00197A  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
  5883   00197E  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
  5884   001982  0E19               	movlw	25
  5885   001984  EFC9  F00C         	goto	u4800
  5886   001988                     u4805:
  5887   001988  90D8               	bcf	status,0,c
  5888   00198A  321A               	rrcf	(??___flmul+3)^0,f,c
  5889   00198C  3219               	rrcf	(??___flmul+2)^0,f,c
  5890   00198E  3218               	rrcf	(??___flmul+1)^0,f,c
  5891   001990  3217               	rrcf	??___flmul^0,f,c
  5892   001992                     u4800:
  5893   001992  2EE8               	decfsz	wreg,f,c
  5894   001994  EFC4  F00C         	goto	u4805
  5895   001998  5017               	movf	??___flmul^0,w,c
  5896   00199A  2622               	addwf	___flmul@prod^0,f,c
  5897   00199C  5018               	movf	(??___flmul+1)^0,w,c
  5898   00199E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5899   0019A0  5019               	movf	(??___flmul+2)^0,w,c
  5900   0019A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5901   0019A4  501A               	movf	(??___flmul+3)^0,w,c
  5902   0019A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5903   0019A8  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  5904   0019AC  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  5905   0019B0  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  5906   0019B4  6A1D               	clrf	___flmul@grs^0,c
  5907   0019B6  501C               	movf	___flmul@aexp^0,w,c
  5908   0019B8  C021  F017         	movff	___flmul@bexp,??___flmul
  5909   0019BC  6A18               	clrf	(??___flmul+1)^0,c
  5910   0019BE  2617               	addwf	??___flmul^0,f,c
  5911   0019C0  0E00               	movlw	0
  5912   0019C2  2218               	addwfc	(??___flmul+1)^0,f,c
  5913   0019C4  0E82               	movlw	130
  5914   0019C6  2417               	addwf	??___flmul^0,w,c
  5915   0019C8  6E26               	movwf	___flmul@temp^0,c
  5916   0019CA  0EFF               	movlw	255
  5917   0019CC  2018               	addwfc	(??___flmul+1)^0,w,c
  5918   0019CE  6E27               	movwf	(___flmul@temp+1)^0,c
  5919   0019D0  EFFF  F00C         	goto	l4387
  5920   0019D4                     l4381:
  5921   0019D4  90D8               	bcf	status,0,c
  5922   0019D6  3622               	rlcf	___flmul@prod^0,f,c
  5923   0019D8  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5924   0019DA  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5925   0019DC  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5926   0019DE  AE20               	btfss	(___flmul@grs+3)^0,7,c
  5927   0019E0  EFF4  F00C         	goto	u4811
  5928   0019E4  EFF6  F00C         	goto	u4810
  5929   0019E8                     u4811:
  5930   0019E8  EFF7  F00C         	goto	l744
  5931   0019EC                     u4810:
  5932   0019EC  8022               	bsf	___flmul@prod^0,0,c
  5933   0019EE                     l744:
  5934   0019EE  90D8               	bcf	status,0,c
  5935   0019F0  361D               	rlcf	___flmul@grs^0,f,c
  5936   0019F2  361E               	rlcf	(___flmul@grs+1)^0,f,c
  5937   0019F4  361F               	rlcf	(___flmul@grs+2)^0,f,c
  5938   0019F6  3620               	rlcf	(___flmul@grs+3)^0,f,c
  5939   0019F8  0626               	decf	___flmul@temp^0,f,c
  5940   0019FA  A0D8               	btfss	status,0,c
  5941   0019FC  0627               	decf	(___flmul@temp+1)^0,f,c
  5942   0019FE                     l4387:
  5943   0019FE  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5944   001A00  EF04  F00D         	goto	u4821
  5945   001A04  EF06  F00D         	goto	u4820
  5946   001A08                     u4821:
  5947   001A08  EFEA  F00C         	goto	l4381
  5948   001A0C                     u4820:
  5949   001A0C  0E00               	movlw	0
  5950   001A0E  6E1C               	movwf	___flmul@aexp^0,c
  5951   001A10  AE20               	btfss	(___flmul@grs+3)^0,7,c
  5952   001A12  EF0D  F00D         	goto	u4831
  5953   001A16  EF0F  F00D         	goto	u4830
  5954   001A1A                     u4831:
  5955   001A1A  EF33  F00D         	goto	l746
  5956   001A1E                     u4830:
  5957   001A1E  0EFF               	movlw	255
  5958   001A20  141D               	andwf	___flmul@grs^0,w,c
  5959   001A22  6E17               	movwf	??___flmul^0,c
  5960   001A24  0EFF               	movlw	255
  5961   001A26  141E               	andwf	(___flmul@grs+1)^0,w,c
  5962   001A28  6E18               	movwf	(??___flmul+1)^0,c
  5963   001A2A  0EFF               	movlw	255
  5964   001A2C  141F               	andwf	(___flmul@grs+2)^0,w,c
  5965   001A2E  6E19               	movwf	(??___flmul+2)^0,c
  5966   001A30  0E7F               	movlw	127
  5967   001A32  1420               	andwf	(___flmul@grs+3)^0,w,c
  5968   001A34  6E1A               	movwf	(??___flmul+3)^0,c
  5969   001A36  5017               	movf	??___flmul^0,w,c
  5970   001A38  1018               	iorwf	(??___flmul+1)^0,w,c
  5971   001A3A  1019               	iorwf	(??___flmul+2)^0,w,c
  5972   001A3C  101A               	iorwf	(??___flmul+3)^0,w,c
  5973   001A3E  B4D8               	btfsc	status,2,c
  5974   001A40  EF24  F00D         	goto	u4841
  5975   001A44  EF26  F00D         	goto	u4840
  5976   001A48                     u4841:
  5977   001A48  EF2A  F00D         	goto	l747
  5978   001A4C                     u4840:
  5979   001A4C                     l4395:
  5980   001A4C  0E01               	movlw	1
  5981   001A4E  6E1C               	movwf	___flmul@aexp^0,c
  5982   001A50  EF33  F00D         	goto	l746
  5983   001A54                     l747:
  5984   001A54  A022               	btfss	___flmul@prod^0,0,c
  5985   001A56  EF2F  F00D         	goto	u4851
  5986   001A5A  EF31  F00D         	goto	u4850
  5987   001A5E                     u4851:
  5988   001A5E  EF33  F00D         	goto	l746
  5989   001A62                     u4850:
  5990   001A62  EF26  F00D         	goto	l4395
  5991   001A66                     l746:
  5992   001A66  501C               	movf	___flmul@aexp^0,w,c
  5993   001A68  B4D8               	btfsc	status,2,c
  5994   001A6A  EF39  F00D         	goto	u4861
  5995   001A6E  EF3B  F00D         	goto	u4860
  5996   001A72                     u4861:
  5997   001A72  EF5F  F00D         	goto	l4407
  5998   001A76                     u4860:
  5999   001A76  0E01               	movlw	1
  6000   001A78  2622               	addwf	___flmul@prod^0,f,c
  6001   001A7A  0E00               	movlw	0
  6002   001A7C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6003   001A7E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6004   001A80  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6005   001A82  A025               	btfss	(___flmul@prod+3)^0,0,c
  6006   001A84  EF46  F00D         	goto	u4871
  6007   001A88  EF48  F00D         	goto	u4870
  6008   001A8C                     u4871:
  6009   001A8C  EF5F  F00D         	goto	l4407
  6010   001A90                     u4870:
  6011   001A90  C022  F017         	movff	___flmul@prod,??___flmul
  6012   001A94  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6013   001A98  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6014   001A9C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6015   001AA0  341A               	rlcf	(??___flmul+3)^0,w,c
  6016   001AA2  321A               	rrcf	(??___flmul+3)^0,f,c
  6017   001AA4  3219               	rrcf	(??___flmul+2)^0,f,c
  6018   001AA6  3218               	rrcf	(??___flmul+1)^0,f,c
  6019   001AA8  3217               	rrcf	??___flmul^0,f,c
  6020   001AAA  C017  F022         	movff	??___flmul,___flmul@prod
  6021   001AAE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6022   001AB2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6023   001AB6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6024   001ABA  4A26               	infsnz	___flmul@temp^0,f,c
  6025   001ABC  2A27               	incf	(___flmul@temp+1)^0,f,c
  6026   001ABE                     l4407:
  6027   001ABE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6028   001AC0  EF6A  F00D         	goto	u4881
  6029   001AC4  5027               	movf	(___flmul@temp+1)^0,w,c
  6030   001AC6  E108               	bnz	u4880
  6031   001AC8  2826               	incf	___flmul@temp^0,w,c
  6032   001ACA  A0D8               	btfss	status,0,c
  6033   001ACC  EF6A  F00D         	goto	u4881
  6034   001AD0  EF6C  F00D         	goto	u4880
  6035   001AD4                     u4881:
  6036   001AD4  EF76  F00D         	goto	l4411
  6037   001AD8                     u4880:
  6038   001AD8  0E00               	movlw	0
  6039   001ADA  6E22               	movwf	___flmul@prod^0,c
  6040   001ADC  0E00               	movlw	0
  6041   001ADE  6E23               	movwf	(___flmul@prod+1)^0,c
  6042   001AE0  0E80               	movlw	128
  6043   001AE2  6E24               	movwf	(___flmul@prod+2)^0,c
  6044   001AE4  0E7F               	movlw	127
  6045   001AE6  6E25               	movwf	(___flmul@prod+3)^0,c
  6046   001AE8  EFA4  F00D         	goto	l4423
  6047   001AEC                     l4411:
  6048   001AEC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6049   001AEE  EF83  F00D         	goto	u4890
  6050   001AF2  5027               	movf	(___flmul@temp+1)^0,w,c
  6051   001AF4  E106               	bnz	u4891
  6052   001AF6  0426               	decf	___flmul@temp^0,w,c
  6053   001AF8  B0D8               	btfsc	status,0,c
  6054   001AFA  EF81  F00D         	goto	u4891
  6055   001AFE  EF83  F00D         	goto	u4890
  6056   001B02                     u4891:
  6057   001B02  EF8F  F00D         	goto	l754
  6058   001B06                     u4890:
  6059   001B06  0E00               	movlw	0
  6060   001B08  6E22               	movwf	___flmul@prod^0,c
  6061   001B0A  0E00               	movlw	0
  6062   001B0C  6E23               	movwf	(___flmul@prod+1)^0,c
  6063   001B0E  0E00               	movlw	0
  6064   001B10  6E24               	movwf	(___flmul@prod+2)^0,c
  6065   001B12  0E00               	movlw	0
  6066   001B14  6E25               	movwf	(___flmul@prod+3)^0,c
  6067   001B16  0E00               	movlw	0
  6068   001B18  6E1B               	movwf	___flmul@sign^0,c
  6069   001B1A  EFA4  F00D         	goto	l4423
  6070   001B1E                     l754:
  6071   001B1E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6072   001B22  0EFF               	movlw	255
  6073   001B24  1622               	andwf	___flmul@prod^0,f,c
  6074   001B26  0EFF               	movlw	255
  6075   001B28  1623               	andwf	(___flmul@prod+1)^0,f,c
  6076   001B2A  0E7F               	movlw	127
  6077   001B2C  1624               	andwf	(___flmul@prod+2)^0,f,c
  6078   001B2E  0E00               	movlw	0
  6079   001B30  1625               	andwf	(___flmul@prod+3)^0,f,c
  6080   001B32  A021               	btfss	___flmul@bexp^0,0,c
  6081   001B34  EF9E  F00D         	goto	u4901
  6082   001B38  EFA0  F00D         	goto	u4900
  6083   001B3C                     u4901:
  6084   001B3C  EFA1  F00D         	goto	l4421
  6085   001B40                     u4900:
  6086   001B40  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6087   001B42                     l4421:
  6088   001B42  90D8               	bcf	status,0,c
  6089   001B44  3021               	rrcf	___flmul@bexp^0,w,c
  6090   001B46  6E25               	movwf	(___flmul@prod+3)^0,c
  6091   001B48                     l4423:
  6092   001B48  501B               	movf	___flmul@sign^0,w,c
  6093   001B4A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6094   001B4C  C022  F00F         	movff	___flmul@prod,?___flmul
  6095   001B50  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6096   001B54  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6097   001B58  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6098   001B5C                     l741:
  6099   001B5C  0012               	return		;funcret
  6100   001B5E                     __end_of___flmul:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function ___flge *****************
  6104 ;; Defined at:
  6105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  ff1             4   39[COMRAM] unsigned char 
  6108 ;;  ff2             4   43[COMRAM] unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;		None               void
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6120 ;;      Params:         8       0       0       0       0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6122 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6123 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6124 ;;Total ram usage:       12 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_main
  6130 ;;		_efgtoa
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text24
  6135   00290C                     __ptext24:
  6136                           	callstack 0
  6137   00290C                     ___flge:
  6138                           	callstack 26
  6139   00290C  0E00               	movlw	0
  6140   00290E  1428               	andwf	___flge@ff1^0,w,c
  6141   002910  6E30               	movwf	??___flge^0,c
  6142   002912  0E00               	movlw	0
  6143   002914  1429               	andwf	(___flge@ff1+1)^0,w,c
  6144   002916  6E31               	movwf	(??___flge+1)^0,c
  6145   002918  0E80               	movlw	128
  6146   00291A  142A               	andwf	(___flge@ff1+2)^0,w,c
  6147   00291C  6E32               	movwf	(??___flge+2)^0,c
  6148   00291E  0E7F               	movlw	127
  6149   002920  142B               	andwf	(___flge@ff1+3)^0,w,c
  6150   002922  6E33               	movwf	(??___flge+3)^0,c
  6151   002924  5030               	movf	??___flge^0,w,c
  6152   002926  1031               	iorwf	(??___flge+1)^0,w,c
  6153   002928  1032               	iorwf	(??___flge+2)^0,w,c
  6154   00292A  1033               	iorwf	(??___flge+3)^0,w,c
  6155   00292C  A4D8               	btfss	status,2,c
  6156   00292E  EF9B  F014         	goto	u4941
  6157   002932  EF9D  F014         	goto	u4940
  6158   002936                     u4941:
  6159   002936  EFA5  F014         	goto	l4455
  6160   00293A                     u4940:
  6161   00293A  0E00               	movlw	0
  6162   00293C  6E28               	movwf	___flge@ff1^0,c
  6163   00293E  0E00               	movlw	0
  6164   002940  6E29               	movwf	(___flge@ff1+1)^0,c
  6165   002942  0E00               	movlw	0
  6166   002944  6E2A               	movwf	(___flge@ff1+2)^0,c
  6167   002946  0E00               	movlw	0
  6168   002948  6E2B               	movwf	(___flge@ff1+3)^0,c
  6169   00294A                     l4455:
  6170   00294A  0E00               	movlw	0
  6171   00294C  142C               	andwf	___flge@ff2^0,w,c
  6172   00294E  6E30               	movwf	??___flge^0,c
  6173   002950  0E00               	movlw	0
  6174   002952  142D               	andwf	(___flge@ff2+1)^0,w,c
  6175   002954  6E31               	movwf	(??___flge+1)^0,c
  6176   002956  0E80               	movlw	128
  6177   002958  142E               	andwf	(___flge@ff2+2)^0,w,c
  6178   00295A  6E32               	movwf	(??___flge+2)^0,c
  6179   00295C  0E7F               	movlw	127
  6180   00295E  142F               	andwf	(___flge@ff2+3)^0,w,c
  6181   002960  6E33               	movwf	(??___flge+3)^0,c
  6182   002962  5030               	movf	??___flge^0,w,c
  6183   002964  1031               	iorwf	(??___flge+1)^0,w,c
  6184   002966  1032               	iorwf	(??___flge+2)^0,w,c
  6185   002968  1033               	iorwf	(??___flge+3)^0,w,c
  6186   00296A  A4D8               	btfss	status,2,c
  6187   00296C  EFBA  F014         	goto	u4951
  6188   002970  EFBC  F014         	goto	u4950
  6189   002974                     u4951:
  6190   002974  EFC4  F014         	goto	l4459
  6191   002978                     u4950:
  6192   002978  0E00               	movlw	0
  6193   00297A  6E2C               	movwf	___flge@ff2^0,c
  6194   00297C  0E00               	movlw	0
  6195   00297E  6E2D               	movwf	(___flge@ff2+1)^0,c
  6196   002980  0E00               	movlw	0
  6197   002982  6E2E               	movwf	(___flge@ff2+2)^0,c
  6198   002984  0E00               	movlw	0
  6199   002986  6E2F               	movwf	(___flge@ff2+3)^0,c
  6200   002988                     l4459:
  6201   002988  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6202   00298A  EFC9  F014         	goto	u4961
  6203   00298E  EFCB  F014         	goto	u4960
  6204   002992                     u4961:
  6205   002992  EFD4  F014         	goto	l4463
  6206   002996                     u4960:
  6207   002996  6C28               	negf	___flge@ff1^0,c
  6208   002998  1E29               	comf	(___flge@ff1+1)^0,f,c
  6209   00299A  B0D8               	btfsc	status,0,c
  6210   00299C  2A29               	incf	(___flge@ff1+1)^0,f,c
  6211   00299E  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6212   0029A0  B0D8               	btfsc	status,0,c
  6213   0029A2  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6214   0029A4  0E80               	movlw	128
  6215   0029A6  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6216   0029A8                     l4463:
  6217   0029A8  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6218   0029AA  EFD9  F014         	goto	u4971
  6219   0029AE  EFDB  F014         	goto	u4970
  6220   0029B2                     u4971:
  6221   0029B2  EFE4  F014         	goto	l388
  6222   0029B6                     u4970:
  6223   0029B6  6C2C               	negf	___flge@ff2^0,c
  6224   0029B8  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6225   0029BA  B0D8               	btfsc	status,0,c
  6226   0029BC  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6227   0029BE  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6228   0029C0  B0D8               	btfsc	status,0,c
  6229   0029C2  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6230   0029C4  0E80               	movlw	128
  6231   0029C6  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6232   0029C8                     l388:
  6233   0029C8  0E00               	movlw	0
  6234   0029CA  1A28               	xorwf	___flge@ff1^0,f,c
  6235   0029CC  0E00               	movlw	0
  6236   0029CE  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6237   0029D0  0E00               	movlw	0
  6238   0029D2  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6239   0029D4  0E80               	movlw	128
  6240   0029D6  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6241   0029D8  0E00               	movlw	0
  6242   0029DA  1A2C               	xorwf	___flge@ff2^0,f,c
  6243   0029DC  0E00               	movlw	0
  6244   0029DE  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6245   0029E0  0E00               	movlw	0
  6246   0029E2  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6247   0029E4  0E80               	movlw	128
  6248   0029E6  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6249   0029E8  502C               	movf	___flge@ff2^0,w,c
  6250   0029EA  5C28               	subwf	___flge@ff1^0,w,c
  6251   0029EC  502D               	movf	(___flge@ff2+1)^0,w,c
  6252   0029EE  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6253   0029F0  502E               	movf	(___flge@ff2+2)^0,w,c
  6254   0029F2  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6255   0029F4  502F               	movf	(___flge@ff2+3)^0,w,c
  6256   0029F6  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6257   0029F8  B0D8               	btfsc	status,0,c
  6258   0029FA  EF01  F015         	goto	u4981
  6259   0029FE  EF03  F015         	goto	u4980
  6260   002A02                     u4981:
  6261   002A02  EF06  F015         	goto	l4469
  6262   002A06                     u4980:
  6263   002A06  90D8               	bcf	status,0,c
  6264   002A08  EF07  F015         	goto	l393
  6265   002A0C                     l4469:
  6266   002A0C  80D8               	bsf	status,0,c
  6267   002A0E                     l393:
  6268   002A0E  0012               	return		;funcret
  6269   002A10                     __end_of___flge:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function ___fleq *****************
  6273 ;; Defined at:
  6274 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  ff1             4    0[COMRAM] unsigned char 
  6277 ;;  ff2             4    4[COMRAM] unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;		None               void
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6289 ;;      Params:         8       0       0       0       0       0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6291 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6292 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6293 ;;Total ram usage:       12 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_efgtoa
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text25
  6303   002C8A                     __ptext25:
  6304                           	callstack 0
  6305   002C8A                     ___fleq:
  6306                           	callstack 26
  6307   002C8A  0E00               	movlw	0
  6308   002C8C  1401               	andwf	___fleq@ff1^0,w,c
  6309   002C8E  6E09               	movwf	??___fleq^0,c
  6310   002C90  0E00               	movlw	0
  6311   002C92  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6312   002C94  6E0A               	movwf	(??___fleq+1)^0,c
  6313   002C96  0E80               	movlw	128
  6314   002C98  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6315   002C9A  6E0B               	movwf	(??___fleq+2)^0,c
  6316   002C9C  0E7F               	movlw	127
  6317   002C9E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6318   002CA0  6E0C               	movwf	(??___fleq+3)^0,c
  6319   002CA2  5009               	movf	??___fleq^0,w,c
  6320   002CA4  100A               	iorwf	(??___fleq+1)^0,w,c
  6321   002CA6  100B               	iorwf	(??___fleq+2)^0,w,c
  6322   002CA8  100C               	iorwf	(??___fleq+3)^0,w,c
  6323   002CAA  A4D8               	btfss	status,2,c
  6324   002CAC  EF5A  F016         	goto	u4911
  6325   002CB0  EF5C  F016         	goto	u4910
  6326   002CB4                     u4911:
  6327   002CB4  EF64  F016         	goto	l4439
  6328   002CB8                     u4910:
  6329   002CB8  0E00               	movlw	0
  6330   002CBA  6E01               	movwf	___fleq@ff1^0,c
  6331   002CBC  0E00               	movlw	0
  6332   002CBE  6E02               	movwf	(___fleq@ff1+1)^0,c
  6333   002CC0  0E00               	movlw	0
  6334   002CC2  6E03               	movwf	(___fleq@ff1+2)^0,c
  6335   002CC4  0E00               	movlw	0
  6336   002CC6  6E04               	movwf	(___fleq@ff1+3)^0,c
  6337   002CC8                     l4439:
  6338   002CC8  0E00               	movlw	0
  6339   002CCA  1405               	andwf	___fleq@ff2^0,w,c
  6340   002CCC  6E09               	movwf	??___fleq^0,c
  6341   002CCE  0E00               	movlw	0
  6342   002CD0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6343   002CD2  6E0A               	movwf	(??___fleq+1)^0,c
  6344   002CD4  0E80               	movlw	128
  6345   002CD6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6346   002CD8  6E0B               	movwf	(??___fleq+2)^0,c
  6347   002CDA  0E7F               	movlw	127
  6348   002CDC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6349   002CDE  6E0C               	movwf	(??___fleq+3)^0,c
  6350   002CE0  5009               	movf	??___fleq^0,w,c
  6351   002CE2  100A               	iorwf	(??___fleq+1)^0,w,c
  6352   002CE4  100B               	iorwf	(??___fleq+2)^0,w,c
  6353   002CE6  100C               	iorwf	(??___fleq+3)^0,w,c
  6354   002CE8  A4D8               	btfss	status,2,c
  6355   002CEA  EF79  F016         	goto	u4921
  6356   002CEE  EF7B  F016         	goto	u4920
  6357   002CF2                     u4921:
  6358   002CF2  EF83  F016         	goto	l4443
  6359   002CF6                     u4920:
  6360   002CF6  0E00               	movlw	0
  6361   002CF8  6E05               	movwf	___fleq@ff2^0,c
  6362   002CFA  0E00               	movlw	0
  6363   002CFC  6E06               	movwf	(___fleq@ff2+1)^0,c
  6364   002CFE  0E00               	movlw	0
  6365   002D00  6E07               	movwf	(___fleq@ff2+2)^0,c
  6366   002D02  0E00               	movlw	0
  6367   002D04  6E08               	movwf	(___fleq@ff2+3)^0,c
  6368   002D06                     l4443:
  6369   002D06  5005               	movf	___fleq@ff2^0,w,c
  6370   002D08  1801               	xorwf	___fleq@ff1^0,w,c
  6371   002D0A  E10F               	bnz	u4930
  6372   002D0C  5006               	movf	(___fleq@ff2+1)^0,w,c
  6373   002D0E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6374   002D10  E10C               	bnz	u4930
  6375   002D12  5007               	movf	(___fleq@ff2+2)^0,w,c
  6376   002D14  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6377   002D16  E109               	bnz	u4930
  6378   002D18  5008               	movf	(___fleq@ff2+3)^0,w,c
  6379   002D1A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6380   002D1C  B4D8               	btfsc	status,2,c
  6381   002D1E  EF93  F016         	goto	u4931
  6382   002D22  EF95  F016         	goto	u4930
  6383   002D26                     u4931:
  6384   002D26  EF98  F016         	goto	l4447
  6385   002D2A                     u4930:
  6386   002D2A  90D8               	bcf	status,0,c
  6387   002D2C  EF99  F016         	goto	l382
  6388   002D30                     l4447:
  6389   002D30  80D8               	bsf	status,0,c
  6390   002D32                     l382:
  6391   002D32  0012               	return		;funcret
  6392   002D34                     __end_of___fleq:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function ___fldiv *****************
  6396 ;; Defined at:
  6397 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  b               4   39[COMRAM] unsigned char 
  6400 ;;  a               4   43[COMRAM] unsigned char 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  grs             4   58[COMRAM] unsigned long 
  6403 ;;  rem             4   51[COMRAM] unsigned long 
  6404 ;;  new_exp         2   56[COMRAM] short 
  6405 ;;  aexp            1   63[COMRAM] unsigned char 
  6406 ;;  bexp            1   62[COMRAM] unsigned char 
  6407 ;;  sign            1   55[COMRAM] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  4   39[COMRAM] unsigned char 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6417 ;;      Params:         8       0       0       0       0       0       0       0       0
  6418 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6419 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6420 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6421 ;;Total ram usage:       25 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_main
  6427 ;;		_efgtoa
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text26
  6432   001B5E                     __ptext26:
  6433                           	callstack 0
  6434   001B5E                     ___fldiv:
  6435                           	callstack 26
  6436   001B5E  502B               	movf	(___fldiv@b+3)^0,w,c
  6437   001B60  0B80               	andlw	128
  6438   001B62  6E38               	movwf	___fldiv@sign^0,c
  6439   001B64  502B               	movf	(___fldiv@b+3)^0,w,c
  6440   001B66  242B               	addwf	(___fldiv@b+3)^0,w,c
  6441   001B68  6E3F               	movwf	___fldiv@bexp^0,c
  6442   001B6A  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6443   001B6C  EFBA  F00D         	goto	u4491
  6444   001B70  EFBC  F00D         	goto	u4490
  6445   001B74                     u4491:
  6446   001B74  EFBD  F00D         	goto	l4167
  6447   001B78                     u4490:
  6448   001B78  803F               	bsf	___fldiv@bexp^0,0,c
  6449   001B7A                     l4167:
  6450   001B7A  503F               	movf	___fldiv@bexp^0,w,c
  6451   001B7C  B4D8               	btfsc	status,2,c
  6452   001B7E  EFC3  F00D         	goto	u4501
  6453   001B82  EFC5  F00D         	goto	u4500
  6454   001B86                     u4501:
  6455   001B86  EFDA  F00D         	goto	l4177
  6456   001B8A                     u4500:
  6457   001B8A  283F               	incf	___fldiv@bexp^0,w,c
  6458   001B8C  A4D8               	btfss	status,2,c
  6459   001B8E  EFCB  F00D         	goto	u4511
  6460   001B92  EFCD  F00D         	goto	u4510
  6461   001B96                     u4511:
  6462   001B96  EFD5  F00D         	goto	l4173
  6463   001B9A                     u4510:
  6464   001B9A  0E00               	movlw	0
  6465   001B9C  6E28               	movwf	___fldiv@b^0,c
  6466   001B9E  0E00               	movlw	0
  6467   001BA0  6E29               	movwf	(___fldiv@b+1)^0,c
  6468   001BA2  0E00               	movlw	0
  6469   001BA4  6E2A               	movwf	(___fldiv@b+2)^0,c
  6470   001BA6  0E00               	movlw	0
  6471   001BA8  6E2B               	movwf	(___fldiv@b+3)^0,c
  6472   001BAA                     l4173:
  6473   001BAA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6474   001BAC  0E00               	movlw	0
  6475   001BAE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6476   001BB0  EFE2  F00D         	goto	l4179
  6477   001BB4                     l4177:
  6478   001BB4  0E00               	movlw	0
  6479   001BB6  6E28               	movwf	___fldiv@b^0,c
  6480   001BB8  0E00               	movlw	0
  6481   001BBA  6E29               	movwf	(___fldiv@b+1)^0,c
  6482   001BBC  0E00               	movlw	0
  6483   001BBE  6E2A               	movwf	(___fldiv@b+2)^0,c
  6484   001BC0  0E00               	movlw	0
  6485   001BC2  6E2B               	movwf	(___fldiv@b+3)^0,c
  6486   001BC4                     l4179:
  6487   001BC4  502F               	movf	(___fldiv@a+3)^0,w,c
  6488   001BC6  0B80               	andlw	128
  6489   001BC8  1A38               	xorwf	___fldiv@sign^0,f,c
  6490   001BCA  502F               	movf	(___fldiv@a+3)^0,w,c
  6491   001BCC  242F               	addwf	(___fldiv@a+3)^0,w,c
  6492   001BCE  6E40               	movwf	___fldiv@aexp^0,c
  6493   001BD0  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6494   001BD2  EFED  F00D         	goto	u4521
  6495   001BD6  EFEF  F00D         	goto	u4520
  6496   001BDA                     u4521:
  6497   001BDA  EFF0  F00D         	goto	l4187
  6498   001BDE                     u4520:
  6499   001BDE  8040               	bsf	___fldiv@aexp^0,0,c
  6500   001BE0                     l4187:
  6501   001BE0  5040               	movf	___fldiv@aexp^0,w,c
  6502   001BE2  B4D8               	btfsc	status,2,c
  6503   001BE4  EFF6  F00D         	goto	u4531
  6504   001BE8  EFF8  F00D         	goto	u4530
  6505   001BEC                     u4531:
  6506   001BEC  EF0D  F00E         	goto	l4197
  6507   001BF0                     u4530:
  6508   001BF0  2840               	incf	___fldiv@aexp^0,w,c
  6509   001BF2  A4D8               	btfss	status,2,c
  6510   001BF4  EFFE  F00D         	goto	u4541
  6511   001BF8  EF00  F00E         	goto	u4540
  6512   001BFC                     u4541:
  6513   001BFC  EF08  F00E         	goto	l4193
  6514   001C00                     u4540:
  6515   001C00  0E00               	movlw	0
  6516   001C02  6E2C               	movwf	___fldiv@a^0,c
  6517   001C04  0E00               	movlw	0
  6518   001C06  6E2D               	movwf	(___fldiv@a+1)^0,c
  6519   001C08  0E00               	movlw	0
  6520   001C0A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6521   001C0C  0E00               	movlw	0
  6522   001C0E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6523   001C10                     l4193:
  6524   001C10  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6525   001C12  0E00               	movlw	0
  6526   001C14  6E2F               	movwf	(___fldiv@a+3)^0,c
  6527   001C16  EF15  F00E         	goto	l4199
  6528   001C1A                     l4197:
  6529   001C1A  0E00               	movlw	0
  6530   001C1C  6E2C               	movwf	___fldiv@a^0,c
  6531   001C1E  0E00               	movlw	0
  6532   001C20  6E2D               	movwf	(___fldiv@a+1)^0,c
  6533   001C22  0E00               	movlw	0
  6534   001C24  6E2E               	movwf	(___fldiv@a+2)^0,c
  6535   001C26  0E00               	movlw	0
  6536   001C28  6E2F               	movwf	(___fldiv@a+3)^0,c
  6537   001C2A                     l4199:
  6538   001C2A  502C               	movf	___fldiv@a^0,w,c
  6539   001C2C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6540   001C2E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6541   001C30  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6542   001C32  A4D8               	btfss	status,2,c
  6543   001C34  EF1E  F00E         	goto	u4551
  6544   001C38  EF20  F00E         	goto	u4550
  6545   001C3C                     u4551:
  6546   001C3C  EF38  F00E         	goto	l4211
  6547   001C40                     u4550:
  6548   001C40  0E00               	movlw	0
  6549   001C42  6E28               	movwf	___fldiv@b^0,c
  6550   001C44  0E00               	movlw	0
  6551   001C46  6E29               	movwf	(___fldiv@b+1)^0,c
  6552   001C48  0E00               	movlw	0
  6553   001C4A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6554   001C4C  0E00               	movlw	0
  6555   001C4E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6556   001C50  0E80               	movlw	128
  6557   001C52  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6558   001C54  0E7F               	movlw	127
  6559   001C56  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6560   001C58                     l4205:
  6561   001C58  5038               	movf	___fldiv@sign^0,w,c
  6562   001C5A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6563   001C5C  C028  F028         	movff	___fldiv@b,?___fldiv
  6564   001C60  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6565   001C64  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6566   001C68  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6567   001C6C  EF7B  F00F         	goto	l705
  6568   001C70                     l4211:
  6569   001C70  503F               	movf	___fldiv@bexp^0,w,c
  6570   001C72  A4D8               	btfss	status,2,c
  6571   001C74  EF3E  F00E         	goto	u4561
  6572   001C78  EF40  F00E         	goto	u4560
  6573   001C7C                     u4561:
  6574   001C7C  EF4A  F00E         	goto	l4219
  6575   001C80                     u4560:
  6576   001C80  0E00               	movlw	0
  6577   001C82  6E28               	movwf	?___fldiv^0,c
  6578   001C84  0E00               	movlw	0
  6579   001C86  6E29               	movwf	(?___fldiv+1)^0,c
  6580   001C88  0E00               	movlw	0
  6581   001C8A  6E2A               	movwf	(?___fldiv+2)^0,c
  6582   001C8C  0E00               	movlw	0
  6583   001C8E  6E2B               	movwf	(?___fldiv+3)^0,c
  6584   001C90  EF7B  F00F         	goto	l705
  6585   001C94                     l4219:
  6586   001C94  5040               	movf	___fldiv@aexp^0,w,c
  6587   001C96  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6588   001C9A  6A31               	clrf	(??___fldiv+1)^0,c
  6589   001C9C  5E30               	subwf	??___fldiv^0,f,c
  6590   001C9E  0E00               	movlw	0
  6591   001CA0  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6592   001CA2  0E7F               	movlw	127
  6593   001CA4  2430               	addwf	??___fldiv^0,w,c
  6594   001CA6  6E39               	movwf	___fldiv@new_exp^0,c
  6595   001CA8  0E00               	movlw	0
  6596   001CAA  2031               	addwfc	(??___fldiv+1)^0,w,c
  6597   001CAC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6598   001CAE  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6599   001CB2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6600   001CB6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6601   001CBA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6602   001CBE  0E00               	movlw	0
  6603   001CC0  6E28               	movwf	___fldiv@b^0,c
  6604   001CC2  0E00               	movlw	0
  6605   001CC4  6E29               	movwf	(___fldiv@b+1)^0,c
  6606   001CC6  0E00               	movlw	0
  6607   001CC8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6608   001CCA  0E00               	movlw	0
  6609   001CCC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6610   001CCE  0E00               	movlw	0
  6611   001CD0  6E3B               	movwf	___fldiv@grs^0,c
  6612   001CD2  0E00               	movlw	0
  6613   001CD4  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6614   001CD6  0E00               	movlw	0
  6615   001CD8  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6616   001CDA  0E00               	movlw	0
  6617   001CDC  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6618   001CDE  0E00               	movlw	0
  6619   001CE0  6E40               	movwf	___fldiv@aexp^0,c
  6620   001CE2  EFAB  F00E         	goto	l707
  6621   001CE6                     l4229:
  6622   001CE6  5040               	movf	___fldiv@aexp^0,w,c
  6623   001CE8  B4D8               	btfsc	status,2,c
  6624   001CEA  EF79  F00E         	goto	u4571
  6625   001CEE  EF7B  F00E         	goto	u4570
  6626   001CF2                     u4571:
  6627   001CF2  EF92  F00E         	goto	l4237
  6628   001CF6                     u4570:
  6629   001CF6  90D8               	bcf	status,0,c
  6630   001CF8  3634               	rlcf	___fldiv@rem^0,f,c
  6631   001CFA  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6632   001CFC  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6633   001CFE  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6634   001D00  90D8               	bcf	status,0,c
  6635   001D02  3628               	rlcf	___fldiv@b^0,f,c
  6636   001D04  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6637   001D06  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6638   001D08  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6639   001D0A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6640   001D0C  EF8A  F00E         	goto	u4581
  6641   001D10  EF8C  F00E         	goto	u4580
  6642   001D14                     u4581:
  6643   001D14  EF8D  F00E         	goto	l710
  6644   001D18                     u4580:
  6645   001D18  8028               	bsf	___fldiv@b^0,0,c
  6646   001D1A                     l710:
  6647   001D1A  90D8               	bcf	status,0,c
  6648   001D1C  363B               	rlcf	___fldiv@grs^0,f,c
  6649   001D1E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6650   001D20  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6651   001D22  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6652   001D24                     l4237:
  6653   001D24  502C               	movf	___fldiv@a^0,w,c
  6654   001D26  5C34               	subwf	___fldiv@rem^0,w,c
  6655   001D28  502D               	movf	(___fldiv@a+1)^0,w,c
  6656   001D2A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6657   001D2C  502E               	movf	(___fldiv@a+2)^0,w,c
  6658   001D2E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6659   001D30  502F               	movf	(___fldiv@a+3)^0,w,c
  6660   001D32  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6661   001D34  A0D8               	btfss	status,0,c
  6662   001D36  EF9F  F00E         	goto	u4591
  6663   001D3A  EFA1  F00E         	goto	u4590
  6664   001D3E                     u4591:
  6665   001D3E  EFAA  F00E         	goto	l4243
  6666   001D42                     u4590:
  6667   001D42  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6668   001D44  502C               	movf	___fldiv@a^0,w,c
  6669   001D46  5E34               	subwf	___fldiv@rem^0,f,c
  6670   001D48  502D               	movf	(___fldiv@a+1)^0,w,c
  6671   001D4A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6672   001D4C  502E               	movf	(___fldiv@a+2)^0,w,c
  6673   001D4E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6674   001D50  502F               	movf	(___fldiv@a+3)^0,w,c
  6675   001D52  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6676   001D54                     l4243:
  6677   001D54  2A40               	incf	___fldiv@aexp^0,f,c
  6678   001D56                     l707:
  6679   001D56  0E19               	movlw	25
  6680   001D58  6440               	cpfsgt	___fldiv@aexp^0,c
  6681   001D5A  EFB1  F00E         	goto	u4601
  6682   001D5E  EFB3  F00E         	goto	u4600
  6683   001D62                     u4601:
  6684   001D62  EF73  F00E         	goto	l4229
  6685   001D66                     u4600:
  6686   001D66  5034               	movf	___fldiv@rem^0,w,c
  6687   001D68  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6688   001D6A  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6689   001D6C  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6690   001D6E  B4D8               	btfsc	status,2,c
  6691   001D70  EFBC  F00E         	goto	u4611
  6692   001D74  EFBE  F00E         	goto	u4610
  6693   001D78                     u4611:
  6694   001D78  EFD6  F00E         	goto	l4255
  6695   001D7C                     u4610:
  6696   001D7C  803B               	bsf	___fldiv@grs^0,0,c
  6697   001D7E  EFD6  F00E         	goto	l4255
  6698   001D82                     l4249:
  6699   001D82  90D8               	bcf	status,0,c
  6700   001D84  3628               	rlcf	___fldiv@b^0,f,c
  6701   001D86  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6702   001D88  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6703   001D8A  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6704   001D8C  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6705   001D8E  EFCB  F00E         	goto	u4621
  6706   001D92  EFCD  F00E         	goto	u4620
  6707   001D96                     u4621:
  6708   001D96  EFCE  F00E         	goto	l716
  6709   001D9A                     u4620:
  6710   001D9A  8028               	bsf	___fldiv@b^0,0,c
  6711   001D9C                     l716:
  6712   001D9C  90D8               	bcf	status,0,c
  6713   001D9E  363B               	rlcf	___fldiv@grs^0,f,c
  6714   001DA0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6715   001DA2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6716   001DA4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6717   001DA6  0639               	decf	___fldiv@new_exp^0,f,c
  6718   001DA8  A0D8               	btfss	status,0,c
  6719   001DAA  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6720   001DAC                     l4255:
  6721   001DAC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6722   001DAE  EFDB  F00E         	goto	u4631
  6723   001DB2  EFDD  F00E         	goto	u4630
  6724   001DB6                     u4631:
  6725   001DB6  EFC1  F00E         	goto	l4249
  6726   001DBA                     u4630:
  6727   001DBA  0E00               	movlw	0
  6728   001DBC  6E40               	movwf	___fldiv@aexp^0,c
  6729   001DBE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6730   001DC0  EFE4  F00E         	goto	u4641
  6731   001DC4  EFE6  F00E         	goto	u4640
  6732   001DC8                     u4641:
  6733   001DC8  EF0A  F00F         	goto	l718
  6734   001DCC                     u4640:
  6735   001DCC  0EFF               	movlw	255
  6736   001DCE  143B               	andwf	___fldiv@grs^0,w,c
  6737   001DD0  6E30               	movwf	??___fldiv^0,c
  6738   001DD2  0EFF               	movlw	255
  6739   001DD4  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6740   001DD6  6E31               	movwf	(??___fldiv+1)^0,c
  6741   001DD8  0EFF               	movlw	255
  6742   001DDA  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6743   001DDC  6E32               	movwf	(??___fldiv+2)^0,c
  6744   001DDE  0E7F               	movlw	127
  6745   001DE0  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6746   001DE2  6E33               	movwf	(??___fldiv+3)^0,c
  6747   001DE4  5030               	movf	??___fldiv^0,w,c
  6748   001DE6  1031               	iorwf	(??___fldiv+1)^0,w,c
  6749   001DE8  1032               	iorwf	(??___fldiv+2)^0,w,c
  6750   001DEA  1033               	iorwf	(??___fldiv+3)^0,w,c
  6751   001DEC  B4D8               	btfsc	status,2,c
  6752   001DEE  EFFB  F00E         	goto	u4651
  6753   001DF2  EFFD  F00E         	goto	u4650
  6754   001DF6                     u4651:
  6755   001DF6  EF01  F00F         	goto	l719
  6756   001DFA                     u4650:
  6757   001DFA                     l4263:
  6758   001DFA  0E01               	movlw	1
  6759   001DFC  6E40               	movwf	___fldiv@aexp^0,c
  6760   001DFE  EF0A  F00F         	goto	l718
  6761   001E02                     l719:
  6762   001E02  A028               	btfss	___fldiv@b^0,0,c
  6763   001E04  EF06  F00F         	goto	u4661
  6764   001E08  EF08  F00F         	goto	u4660
  6765   001E0C                     u4661:
  6766   001E0C  EF0A  F00F         	goto	l718
  6767   001E10                     u4660:
  6768   001E10  EFFD  F00E         	goto	l4263
  6769   001E14                     l718:
  6770   001E14  5040               	movf	___fldiv@aexp^0,w,c
  6771   001E16  B4D8               	btfsc	status,2,c
  6772   001E18  EF10  F00F         	goto	u4671
  6773   001E1C  EF12  F00F         	goto	u4670
  6774   001E20                     u4671:
  6775   001E20  EF36  F00F         	goto	l4275
  6776   001E24                     u4670:
  6777   001E24  0E01               	movlw	1
  6778   001E26  2628               	addwf	___fldiv@b^0,f,c
  6779   001E28  0E00               	movlw	0
  6780   001E2A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6781   001E2C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6782   001E2E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6783   001E30  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6784   001E32  EF1D  F00F         	goto	u4681
  6785   001E36  EF1F  F00F         	goto	u4680
  6786   001E3A                     u4681:
  6787   001E3A  EF36  F00F         	goto	l4275
  6788   001E3E                     u4680:
  6789   001E3E  C028  F030         	movff	___fldiv@b,??___fldiv
  6790   001E42  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6791   001E46  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6792   001E4A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6793   001E4E  3433               	rlcf	(??___fldiv+3)^0,w,c
  6794   001E50  3233               	rrcf	(??___fldiv+3)^0,f,c
  6795   001E52  3232               	rrcf	(??___fldiv+2)^0,f,c
  6796   001E54  3231               	rrcf	(??___fldiv+1)^0,f,c
  6797   001E56  3230               	rrcf	??___fldiv^0,f,c
  6798   001E58  C030  F028         	movff	??___fldiv,___fldiv@b
  6799   001E5C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6800   001E60  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6801   001E64  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6802   001E68  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6803   001E6A  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6804   001E6C                     l4275:
  6805   001E6C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6806   001E6E  EF41  F00F         	goto	u4691
  6807   001E72  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6808   001E74  E108               	bnz	u4690
  6809   001E76  2839               	incf	___fldiv@new_exp^0,w,c
  6810   001E78  A0D8               	btfss	status,0,c
  6811   001E7A  EF41  F00F         	goto	u4691
  6812   001E7E  EF43  F00F         	goto	u4690
  6813   001E82                     u4691:
  6814   001E82  EF4E  F00F         	goto	l4279
  6815   001E86                     u4690:
  6816   001E86  0E00               	movlw	0
  6817   001E88  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6818   001E8A  6839               	setf	___fldiv@new_exp^0,c
  6819   001E8C  0E00               	movlw	0
  6820   001E8E  6E28               	movwf	___fldiv@b^0,c
  6821   001E90  0E00               	movlw	0
  6822   001E92  6E29               	movwf	(___fldiv@b+1)^0,c
  6823   001E94  0E00               	movlw	0
  6824   001E96  6E2A               	movwf	(___fldiv@b+2)^0,c
  6825   001E98  0E00               	movlw	0
  6826   001E9A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6827   001E9C                     l4279:
  6828   001E9C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6829   001E9E  EF5B  F00F         	goto	u4700
  6830   001EA2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6831   001EA4  E106               	bnz	u4701
  6832   001EA6  0439               	decf	___fldiv@new_exp^0,w,c
  6833   001EA8  B0D8               	btfsc	status,0,c
  6834   001EAA  EF59  F00F         	goto	u4701
  6835   001EAE  EF5B  F00F         	goto	u4700
  6836   001EB2                     u4701:
  6837   001EB2  EF69  F00F         	goto	l4283
  6838   001EB6                     u4700:
  6839   001EB6  0E00               	movlw	0
  6840   001EB8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6841   001EBA  0E00               	movlw	0
  6842   001EBC  6E39               	movwf	___fldiv@new_exp^0,c
  6843   001EBE  0E00               	movlw	0
  6844   001EC0  6E28               	movwf	___fldiv@b^0,c
  6845   001EC2  0E00               	movlw	0
  6846   001EC4  6E29               	movwf	(___fldiv@b+1)^0,c
  6847   001EC6  0E00               	movlw	0
  6848   001EC8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6849   001ECA  0E00               	movlw	0
  6850   001ECC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6851   001ECE  0E00               	movlw	0
  6852   001ED0  6E38               	movwf	___fldiv@sign^0,c
  6853   001ED2                     l4283:
  6854   001ED2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6855   001ED6  A03F               	btfss	___fldiv@bexp^0,0,c
  6856   001ED8  EF70  F00F         	goto	u4711
  6857   001EDC  EF72  F00F         	goto	u4710
  6858   001EE0                     u4711:
  6859   001EE0  EF75  F00F         	goto	l4289
  6860   001EE4                     u4710:
  6861   001EE4  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6862   001EE6  EF76  F00F         	goto	l4291
  6863   001EEA                     l4289:
  6864   001EEA  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6865   001EEC                     l4291:
  6866   001EEC  90D8               	bcf	status,0,c
  6867   001EEE  303F               	rrcf	___fldiv@bexp^0,w,c
  6868   001EF0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6869   001EF2  EF2C  F00E         	goto	l4205
  6870   001EF6                     l705:
  6871   001EF6  0012               	return		;funcret
  6872   001EF8                     __end_of___fldiv:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function ___xxtofl *****************
  6876 ;; Defined at:
  6877 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  sign            1    wreg     unsigned char 
  6880 ;;  val             4    0[COMRAM] long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  sign            1    8[COMRAM] unsigned char 
  6883 ;;  arg             4   10[COMRAM] unsigned long 
  6884 ;;  exp             1    9[COMRAM] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  4    0[COMRAM] unsigned char 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6894 ;;      Params:         4       0       0       0       0       0       0       0       0
  6895 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6896 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6897 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6898 ;;Total ram usage:       14 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text27
  6908   002404                     __ptext27:
  6909                           	callstack 0
  6910   002404                     ___xxtofl:
  6911                           	callstack 30
  6912                           
  6913                           ;incstack = 0
  6914                           ;___xxtofl@sign stored from wreg
  6915   002404  6E09               	movwf	___xxtofl@sign^0,c
  6916   002406  5009               	movf	___xxtofl@sign^0,w,c
  6917   002408  B4D8               	btfsc	status,2,c
  6918   00240A  EF09  F012         	goto	u3941
  6919   00240E  EF0B  F012         	goto	u3940
  6920   002412                     u3941:
  6921   002412  EF2D  F012         	goto	l778
  6922   002416                     u3940:
  6923   002416  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6924   002418  EF12  F012         	goto	u3950
  6925   00241C  EF10  F012         	goto	u3951
  6926   002420                     u3951:
  6927   002420  EF2D  F012         	goto	l778
  6928   002424                     u3950:
  6929   002424  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6930   002428  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6931   00242C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6932   002430  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6933   002434  1E05               	comf	??___xxtofl^0,f,c
  6934   002436  1E06               	comf	(??___xxtofl+1)^0,f,c
  6935   002438  1E07               	comf	(??___xxtofl+2)^0,f,c
  6936   00243A  1E08               	comf	(??___xxtofl+3)^0,f,c
  6937   00243C  2A05               	incf	??___xxtofl^0,f,c
  6938   00243E  0E00               	movlw	0
  6939   002440  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6940   002442  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6941   002444  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6942   002446  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6943   00244A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6944   00244E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6945   002452  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6946   002456  EF35  F012         	goto	l3755
  6947   00245A                     l778:
  6948   00245A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6949   00245E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6950   002462  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6951   002466  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6952   00246A                     l3755:
  6953   00246A  5001               	movf	___xxtofl@val^0,w,c
  6954   00246C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6955   00246E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6956   002470  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6957   002472  A4D8               	btfss	status,2,c
  6958   002474  EF3E  F012         	goto	u3961
  6959   002478  EF40  F012         	goto	u3960
  6960   00247C                     u3961:
  6961   00247C  EF4A  F012         	goto	l3761
  6962   002480                     u3960:
  6963   002480  0E00               	movlw	0
  6964   002482  6E01               	movwf	?___xxtofl^0,c
  6965   002484  0E00               	movlw	0
  6966   002486  6E02               	movwf	(?___xxtofl+1)^0,c
  6967   002488  0E00               	movlw	0
  6968   00248A  6E03               	movwf	(?___xxtofl+2)^0,c
  6969   00248C  0E00               	movlw	0
  6970   00248E  6E04               	movwf	(?___xxtofl+3)^0,c
  6971   002490  EFDB  F012         	goto	l781
  6972   002494                     l3761:
  6973   002494  0E96               	movlw	150
  6974   002496  6E0A               	movwf	___xxtofl@exp^0,c
  6975   002498  EF54  F012         	goto	l3765
  6976   00249C                     l3763:
  6977   00249C  2A0A               	incf	___xxtofl@exp^0,f,c
  6978   00249E  90D8               	bcf	status,0,c
  6979   0024A0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6980   0024A2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6981   0024A4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6982   0024A6  320B               	rrcf	___xxtofl@arg^0,f,c
  6983   0024A8                     l3765:
  6984   0024A8  0E00               	movlw	0
  6985   0024AA  140B               	andwf	___xxtofl@arg^0,w,c
  6986   0024AC  6E05               	movwf	??___xxtofl^0,c
  6987   0024AE  0E00               	movlw	0
  6988   0024B0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6989   0024B2  6E06               	movwf	(??___xxtofl+1)^0,c
  6990   0024B4  0E00               	movlw	0
  6991   0024B6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6992   0024B8  6E07               	movwf	(??___xxtofl+2)^0,c
  6993   0024BA  0EFE               	movlw	254
  6994   0024BC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6995   0024BE  6E08               	movwf	(??___xxtofl+3)^0,c
  6996   0024C0  5005               	movf	??___xxtofl^0,w,c
  6997   0024C2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6998   0024C4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6999   0024C6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7000   0024C8  A4D8               	btfss	status,2,c
  7001   0024CA  EF69  F012         	goto	u3971
  7002   0024CE  EF6B  F012         	goto	u3970
  7003   0024D2                     u3971:
  7004   0024D2  EF4E  F012         	goto	l3763
  7005   0024D6                     u3970:
  7006   0024D6  EF79  F012         	goto	l785
  7007   0024DA                     l3767:
  7008   0024DA  2A0A               	incf	___xxtofl@exp^0,f,c
  7009   0024DC  0E01               	movlw	1
  7010   0024DE  260B               	addwf	___xxtofl@arg^0,f,c
  7011   0024E0  0E00               	movlw	0
  7012   0024E2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7013   0024E4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7014   0024E6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7015   0024E8  90D8               	bcf	status,0,c
  7016   0024EA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7017   0024EC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7018   0024EE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7019   0024F0  320B               	rrcf	___xxtofl@arg^0,f,c
  7020   0024F2                     l785:
  7021   0024F2  0E00               	movlw	0
  7022   0024F4  140B               	andwf	___xxtofl@arg^0,w,c
  7023   0024F6  6E05               	movwf	??___xxtofl^0,c
  7024   0024F8  0E00               	movlw	0
  7025   0024FA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7026   0024FC  6E06               	movwf	(??___xxtofl+1)^0,c
  7027   0024FE  0E00               	movlw	0
  7028   002500  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7029   002502  6E07               	movwf	(??___xxtofl+2)^0,c
  7030   002504  0EFF               	movlw	255
  7031   002506  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7032   002508  6E08               	movwf	(??___xxtofl+3)^0,c
  7033   00250A  5005               	movf	??___xxtofl^0,w,c
  7034   00250C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7035   00250E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7036   002510  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7037   002512  A4D8               	btfss	status,2,c
  7038   002514  EF8E  F012         	goto	u3981
  7039   002518  EF90  F012         	goto	u3980
  7040   00251C                     u3981:
  7041   00251C  EF6D  F012         	goto	l3767
  7042   002520                     u3980:
  7043   002520  EF98  F012         	goto	l3775
  7044   002524                     l3773:
  7045   002524  060A               	decf	___xxtofl@exp^0,f,c
  7046   002526  90D8               	bcf	status,0,c
  7047   002528  360B               	rlcf	___xxtofl@arg^0,f,c
  7048   00252A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7049   00252C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7050   00252E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7051   002530                     l3775:
  7052   002530  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7053   002532  EF9D  F012         	goto	u3991
  7054   002536  EF9F  F012         	goto	u3990
  7055   00253A                     u3991:
  7056   00253A  EFA7  F012         	goto	l792
  7057   00253E                     u3990:
  7058   00253E  0E02               	movlw	2
  7059   002540  600A               	cpfslt	___xxtofl@exp^0,c
  7060   002542  EFA5  F012         	goto	u4001
  7061   002546  EFA7  F012         	goto	u4000
  7062   00254A                     u4001:
  7063   00254A  EF92  F012         	goto	l3773
  7064   00254E                     u4000:
  7065   00254E                     l792:
  7066   00254E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7067   002550  EFAC  F012         	goto	u4011
  7068   002554  EFAE  F012         	goto	u4010
  7069   002558                     u4011:
  7070   002558  EFAF  F012         	goto	l3781
  7071   00255C                     u4010:
  7072   00255C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7073   00255E                     l3781:
  7074   00255E  90D8               	bcf	status,0,c
  7075   002560  320A               	rrcf	___xxtofl@exp^0,f,c
  7076   002562  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7077   002566  6A06               	clrf	(??___xxtofl+1)^0,c
  7078   002568  6A07               	clrf	(??___xxtofl+2)^0,c
  7079   00256A  6A08               	clrf	(??___xxtofl+3)^0,c
  7080   00256C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7081   002570  6A07               	clrf	(??___xxtofl+2)^0,c
  7082   002572  6A06               	clrf	(??___xxtofl+1)^0,c
  7083   002574  6A05               	clrf	??___xxtofl^0,c
  7084   002576  5005               	movf	??___xxtofl^0,w,c
  7085   002578  120B               	iorwf	___xxtofl@arg^0,f,c
  7086   00257A  5006               	movf	(??___xxtofl+1)^0,w,c
  7087   00257C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7088   00257E  5007               	movf	(??___xxtofl+2)^0,w,c
  7089   002580  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7090   002582  5008               	movf	(??___xxtofl+3)^0,w,c
  7091   002584  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7092   002586  5009               	movf	___xxtofl@sign^0,w,c
  7093   002588  B4D8               	btfsc	status,2,c
  7094   00258A  EFC9  F012         	goto	u4021
  7095   00258E  EFCB  F012         	goto	u4020
  7096   002592                     u4021:
  7097   002592  EFD3  F012         	goto	l3791
  7098   002596                     u4020:
  7099   002596  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7100   002598  EFD2  F012         	goto	u4030
  7101   00259C  EFD0  F012         	goto	u4031
  7102   0025A0                     u4031:
  7103   0025A0  EFD3  F012         	goto	l3791
  7104   0025A4                     u4030:
  7105   0025A4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7106   0025A6                     l3791:
  7107   0025A6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7108   0025AA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7109   0025AE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7110   0025B2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7111   0025B6                     l781:
  7112   0025B6  0012               	return		;funcret
  7113   0025B8                     __end_of___xxtofl:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function _Lcd_Write_String *****************
  7117 ;; Defined at:
  7118 ;;		line 104 in file "lcd.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  a               1    4[COMRAM] PTR const unsigned char 
  7121 ;;		 -> buffer(20), 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  i               2    5[COMRAM] int 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7133 ;;      Params:         1       0       0       0       0       0       0       0       0
  7134 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7136 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7137 ;;Total ram usage:        3 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 2
  7140 ;; This function calls:
  7141 ;;		_Lcd_Write_Char
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text28
  7148   00325C                     __ptext28:
  7149                           	callstack 0
  7150   00325C                     _Lcd_Write_String:
  7151                           	callstack 28
  7152   00325C                     
  7153                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  7154   00325C  0E00               	movlw	0
  7155   00325E  6E07               	movwf	(Lcd_Write_String@i+1)^0,c
  7156   003260  0E00               	movlw	0
  7157   003262  6E06               	movwf	Lcd_Write_String@i^0,c
  7158   003264  EF3D  F019         	goto	l3747
  7159   003268                     l3743:
  7160                           
  7161                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  7162   003268  5005               	movf	Lcd_Write_String@a^0,w,c
  7163   00326A  2406               	addwf	Lcd_Write_String@i^0,w,c
  7164   00326C  6ED9               	movwf	fsr2l,c
  7165   00326E  6ADA               	clrf	fsr2h,c
  7166   003270  50DF               	movf	indf2,w,c
  7167   003272  EC4A  F019         	call	_Lcd_Write_Char
  7168   003276  4A06               	infsnz	Lcd_Write_String@i^0,f,c
  7169   003278  2A07               	incf	(Lcd_Write_String@i+1)^0,f,c
  7170   00327A                     l3747:
  7171   00327A  5005               	movf	Lcd_Write_String@a^0,w,c
  7172   00327C  2406               	addwf	Lcd_Write_String@i^0,w,c
  7173   00327E  6ED9               	movwf	fsr2l,c
  7174   003280  6ADA               	clrf	fsr2h,c
  7175   003282  50DF               	movf	indf2,w,c
  7176   003284  A4D8               	btfss	status,2,c
  7177   003286  EF47  F019         	goto	u3931
  7178   00328A  EF49  F019         	goto	u3930
  7179   00328E                     u3931:
  7180   00328E  EF34  F019         	goto	l3743
  7181   003292                     u3930:
  7182   003292  0012               	return		;funcret
  7183   003294                     __end_of_Lcd_Write_String:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function _Lcd_Write_Char *****************
  7187 ;; Defined at:
  7188 ;;		line 88 in file "lcd.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  a               1    wreg     unsigned char 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;  a               1    3[COMRAM] unsigned char 
  7193 ;;  y               1    2[COMRAM] unsigned char 
  7194 ;;  temp            1    1[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         0       0       0       0       0       0       0       0       0
  7205 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7207 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7208 ;;Total ram usage:        3 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 1
  7211 ;; This function calls:
  7212 ;;		_Lcd_Port
  7213 ;; This function is called by:
  7214 ;;		_Lcd_Write_String
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text29
  7219   003294                     __ptext29:
  7220                           	callstack 0
  7221   003294                     _Lcd_Write_Char:
  7222                           	callstack 28
  7223                           
  7224                           ;incstack = 0
  7225                           ;Lcd_Write_Char@a stored from wreg
  7226   003294  6E04               	movwf	Lcd_Write_Char@a^0,c
  7227   003296                     
  7228                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  7229   003296  5004               	movf	Lcd_Write_Char@a^0,w,c
  7230   003298  0B0F               	andlw	15
  7231   00329A  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7232                           
  7233                           ;lcd.c: 92:     y = a&0xF0;
  7234   00329C  5004               	movf	Lcd_Write_Char@a^0,w,c
  7235   00329E  0BF0               	andlw	240
  7236   0032A0  6E03               	movwf	Lcd_Write_Char@y^0,c
  7237   0032A2                     
  7238                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  7239   0032A2  848C               	bsf	140,2,c	;volatile
  7240   0032A4                     
  7241                           ;lcd.c: 94:     Lcd_Port(y>>4);
  7242   0032A4  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7243   0032A6  0B0F               	andlw	15
  7244   0032A8  ECD2  F017         	call	_Lcd_Port
  7245   0032AC                     
  7246                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  7247   0032AC  868C               	bsf	140,3,c	;volatile
  7248   0032AE                     
  7249                           ;lcd.c: 96:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  7250   0032AE  0EA0               	movlw	160
  7251   0032B0                     u5867:
  7252   0032B0  2EE8               	decfsz	wreg,f,c
  7253   0032B2  D7FE               	bra	u5867
  7254   0032B4                     
  7255                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  7256   0032B4  968C               	bcf	140,3,c	;volatile
  7257   0032B6                     
  7258                           ;lcd.c: 98:     Lcd_Port(temp);
  7259   0032B6  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7260   0032B8  ECD2  F017         	call	_Lcd_Port
  7261   0032BC                     
  7262                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  7263   0032BC  868C               	bsf	140,3,c	;volatile
  7264   0032BE                     
  7265                           ;lcd.c: 100:     _delay((unsigned long)((40)*(48000000/4000000.0)));
  7266   0032BE  0EA0               	movlw	160
  7267   0032C0                     u5877:
  7268   0032C0  2EE8               	decfsz	wreg,f,c
  7269   0032C2  D7FE               	bra	u5877
  7270   0032C4                     
  7271                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  7272   0032C4  968C               	bcf	140,3,c	;volatile
  7273   0032C6  0012               	return		;funcret
  7274   0032C8                     __end_of_Lcd_Write_Char:
  7275                           	callstack 0
  7276                           
  7277 ;; *************** function _Lcd_Set_Cursor *****************
  7278 ;; Defined at:
  7279 ;;		line 26 in file "lcd.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  a               1    wreg     unsigned char 
  7282 ;;  b               1    3[COMRAM] unsigned char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  a               1    4[COMRAM] unsigned char 
  7285 ;;  temp            1    7[COMRAM] unsigned char 
  7286 ;;  y               1    6[COMRAM] unsigned char 
  7287 ;;  z               1    5[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         1       0       0       0       0       0       0       0       0
  7298 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:        5 bytes
  7302 ;; Hardware stack levels used: 1
  7303 ;; Hardware stack levels required when called: 2
  7304 ;; This function calls:
  7305 ;;		_Lcd_Cmd
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text30
  7312   002B0E                     __ptext30:
  7313                           	callstack 0
  7314   002B0E                     _Lcd_Set_Cursor:
  7315                           	callstack 28
  7316                           
  7317                           ;incstack = 0
  7318                           ;Lcd_Set_Cursor@a stored from wreg
  7319   002B0E  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7320   002B10                     
  7321                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  7322   002B10  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7323   002B12  A4D8               	btfss	status,2,c
  7324   002B14  EF8E  F015         	goto	u3891
  7325   002B18  EF90  F015         	goto	u3890
  7326   002B1C                     u3891:
  7327   002B1C  EFA1  F015         	goto	l3705
  7328   002B20                     u3890:
  7329   002B20                     
  7330                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  7331   002B20  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7332   002B22  0F7F               	addlw	127
  7333   002B24  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7334                           
  7335                           ;lcd.c: 32:         z = temp>>4;
  7336   002B26  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7337   002B28  0B0F               	andlw	15
  7338   002B2A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7339                           
  7340                           ;lcd.c: 33:         y = temp & 0x0F;
  7341   002B2C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7342   002B2E  0B0F               	andlw	15
  7343   002B30  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7344   002B32                     
  7345                           ;lcd.c: 34:         Lcd_Cmd(z);
  7346   002B32  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7347   002B34  EC88  F019         	call	_Lcd_Cmd
  7348   002B38                     
  7349                           ;lcd.c: 35:         Lcd_Cmd(y);
  7350   002B38  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7351   002B3A  EC88  F019         	call	_Lcd_Cmd
  7352                           
  7353                           ;lcd.c: 36:     }
  7354   002B3E  EFEF  F015         	goto	l96
  7355   002B42                     l3705:
  7356   002B42  0E02               	movlw	2
  7357   002B44  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7358   002B46  A4D8               	btfss	status,2,c
  7359   002B48  EFA8  F015         	goto	u3901
  7360   002B4C  EFAA  F015         	goto	u3900
  7361   002B50                     u3901:
  7362   002B50  EFBB  F015         	goto	l3713
  7363   002B54                     u3900:
  7364   002B54                     
  7365                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7366   002B54  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7367   002B56  0FBF               	addlw	191
  7368   002B58  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7369                           
  7370                           ;lcd.c: 40:         z = temp>>4;
  7371   002B5A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7372   002B5C  0B0F               	andlw	15
  7373   002B5E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7374                           
  7375                           ;lcd.c: 41:         y = temp & 0x0F;
  7376   002B60  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7377   002B62  0B0F               	andlw	15
  7378   002B64  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7379   002B66                     
  7380                           ;lcd.c: 42:         Lcd_Cmd(z);
  7381   002B66  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7382   002B68  EC88  F019         	call	_Lcd_Cmd
  7383   002B6C                     
  7384                           ;lcd.c: 43:         Lcd_Cmd(y);
  7385   002B6C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7386   002B6E  EC88  F019         	call	_Lcd_Cmd
  7387                           
  7388                           ;lcd.c: 44:     }
  7389   002B72  EFEF  F015         	goto	l96
  7390   002B76                     l3713:
  7391   002B76  0E03               	movlw	3
  7392   002B78  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7393   002B7A  A4D8               	btfss	status,2,c
  7394   002B7C  EFC2  F015         	goto	u3911
  7395   002B80  EFC4  F015         	goto	u3910
  7396   002B84                     u3911:
  7397   002B84  EFD5  F015         	goto	l3721
  7398   002B88                     u3910:
  7399   002B88                     
  7400                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7401   002B88  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7402   002B8A  0F93               	addlw	147
  7403   002B8C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7404                           
  7405                           ;lcd.c: 48:         z = temp>>4;
  7406   002B8E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7407   002B90  0B0F               	andlw	15
  7408   002B92  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7409                           
  7410                           ;lcd.c: 49:         y = temp & 0x0F;
  7411   002B94  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7412   002B96  0B0F               	andlw	15
  7413   002B98  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7414   002B9A                     
  7415                           ;lcd.c: 50:         Lcd_Cmd(z);
  7416   002B9A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7417   002B9C  EC88  F019         	call	_Lcd_Cmd
  7418   002BA0                     
  7419                           ;lcd.c: 51:         Lcd_Cmd(y);
  7420   002BA0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7421   002BA2  EC88  F019         	call	_Lcd_Cmd
  7422                           
  7423                           ;lcd.c: 52:     }
  7424   002BA6  EFEF  F015         	goto	l96
  7425   002BAA                     l3721:
  7426   002BAA  0E04               	movlw	4
  7427   002BAC  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7428   002BAE  A4D8               	btfss	status,2,c
  7429   002BB0  EFDC  F015         	goto	u3921
  7430   002BB4  EFDE  F015         	goto	u3920
  7431   002BB8                     u3921:
  7432   002BB8  EFEF  F015         	goto	l92
  7433   002BBC                     u3920:
  7434   002BBC                     
  7435                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7436   002BBC  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7437   002BBE  0FD3               	addlw	211
  7438   002BC0  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7439                           
  7440                           ;lcd.c: 56:         z = temp>>4;
  7441   002BC2  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7442   002BC4  0B0F               	andlw	15
  7443   002BC6  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7444                           
  7445                           ;lcd.c: 57:         y = temp & 0x0F;
  7446   002BC8  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7447   002BCA  0B0F               	andlw	15
  7448   002BCC  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7449   002BCE                     
  7450                           ;lcd.c: 58:         Lcd_Cmd(z);
  7451   002BCE  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7452   002BD0  EC88  F019         	call	_Lcd_Cmd
  7453   002BD4                     
  7454                           ;lcd.c: 59:         Lcd_Cmd(y);
  7455   002BD4  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7456   002BD6  EC88  F019         	call	_Lcd_Cmd
  7457   002BDA  EFEF  F015         	goto	l96
  7458   002BDE                     l92:
  7459   002BDE                     l96:
  7460   002BDE  0012               	return		;funcret
  7461   002BE0                     __end_of_Lcd_Set_Cursor:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function _Lcd_Init *****************
  7465 ;; Defined at:
  7466 ;;		line 63 in file "lcd.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7482 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7483 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7484 ;;Total ram usage:        2 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 3
  7487 ;; This function calls:
  7488 ;;		_Lcd_Clear
  7489 ;;		_Lcd_Cmd
  7490 ;;		_Lcd_Port
  7491 ;; This function is called by:
  7492 ;;		_main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text31
  7497   002DDA                     __ptext31:
  7498                           	callstack 0
  7499   002DDA                     _Lcd_Init:
  7500                           	callstack 27
  7501   002DDA                     
  7502                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7503   002DDA  9495               	bcf	149,2,c	;volatile
  7504                           
  7505                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7506   002DDC  9695               	bcf	149,3,c	;volatile
  7507                           
  7508                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7509   002DDE  9895               	bcf	149,4,c	;volatile
  7510                           
  7511                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7512   002DE0  9A95               	bcf	149,5,c	;volatile
  7513                           
  7514                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7515   002DE2  9C95               	bcf	149,6,c	;volatile
  7516                           
  7517                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7518   002DE4  9E95               	bcf	149,7,c	;volatile
  7519   002DE6                     
  7520                           ;lcd.c: 71:     Lcd_Port(0x00);
  7521   002DE6  0E00               	movlw	0
  7522   002DE8  ECD2  F017         	call	_Lcd_Port
  7523   002DEC                     
  7524                           ;lcd.c: 72:     _delay((unsigned long)((20)*(48000000/4000.0)));
  7525   002DEC  0E02               	movlw	2
  7526   002DEE  6E05               	movwf	(??_Lcd_Init+1)^0,c
  7527   002DF0  0E38               	movlw	56
  7528   002DF2  6E04               	movwf	??_Lcd_Init^0,c
  7529   002DF4  0EAD               	movlw	173
  7530   002DF6                     u5887:
  7531   002DF6  2EE8               	decfsz	wreg,f,c
  7532   002DF8  D7FE               	bra	u5887
  7533   002DFA  2E04               	decfsz	??_Lcd_Init^0,f,c
  7534   002DFC  D7FC               	bra	u5887
  7535   002DFE  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  7536   002E00  D7FA               	bra	u5887
  7537   002E02  0000               	nop	
  7538   002E04                     
  7539                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7540   002E04  0E03               	movlw	3
  7541   002E06  EC88  F019         	call	_Lcd_Cmd
  7542   002E0A                     
  7543                           ;lcd.c: 74:     _delay((unsigned long)((5)*(48000000/4000.0)));
  7544   002E0A  0E4E               	movlw	78
  7545   002E0C  6E04               	movwf	??_Lcd_Init^0,c
  7546   002E0E  0EEB               	movlw	235
  7547   002E10                     u5897:
  7548   002E10  2EE8               	decfsz	wreg,f,c
  7549   002E12  D7FE               	bra	u5897
  7550   002E14  2E04               	decfsz	??_Lcd_Init^0,f,c
  7551   002E16  D7FC               	bra	u5897
  7552   002E18  0000               	nop	
  7553   002E1A                     
  7554                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7555   002E1A  0E03               	movlw	3
  7556   002E1C  EC88  F019         	call	_Lcd_Cmd
  7557   002E20                     
  7558                           ;lcd.c: 76:     _delay((unsigned long)((11)*(48000000/4000.0)));
  7559   002E20  0EAC               	movlw	172
  7560   002E22  6E04               	movwf	??_Lcd_Init^0,c
  7561   002E24  0E6C               	movlw	108
  7562   002E26                     u5907:
  7563   002E26  2EE8               	decfsz	wreg,f,c
  7564   002E28  D7FE               	bra	u5907
  7565   002E2A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7566   002E2C  D7FC               	bra	u5907
  7567   002E2E  D000               	nop2	
  7568   002E30                     
  7569                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7570   002E30  0E03               	movlw	3
  7571   002E32  EC88  F019         	call	_Lcd_Cmd
  7572   002E36                     
  7573                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7574   002E36  0E02               	movlw	2
  7575   002E38  EC88  F019         	call	_Lcd_Cmd
  7576   002E3C                     
  7577                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7578   002E3C  0E02               	movlw	2
  7579   002E3E  EC88  F019         	call	_Lcd_Cmd
  7580   002E42                     
  7581                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7582   002E42  0E08               	movlw	8
  7583   002E44  EC88  F019         	call	_Lcd_Cmd
  7584   002E48                     
  7585                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7586   002E48  0E00               	movlw	0
  7587   002E4A  EC88  F019         	call	_Lcd_Cmd
  7588   002E4E                     
  7589                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7590   002E4E  0E0C               	movlw	12
  7591   002E50  EC88  F019         	call	_Lcd_Cmd
  7592   002E54                     
  7593                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7594   002E54  0E00               	movlw	0
  7595   002E56  EC88  F019         	call	_Lcd_Cmd
  7596   002E5A                     
  7597                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7598   002E5A  0E06               	movlw	6
  7599   002E5C  EC88  F019         	call	_Lcd_Cmd
  7600   002E60                     
  7601                           ;lcd.c: 85:     Lcd_Clear();
  7602   002E60  ECA0  F019         	call	_Lcd_Clear	;wreg free
  7603   002E64  0012               	return		;funcret
  7604   002E66                     __end_of_Lcd_Init:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _Lcd_Clear *****************
  7608 ;; Defined at:
  7609 ;;		line 20 in file "lcd.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      void 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, cstack
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used: 1
  7629 ;; Hardware stack levels required when called: 2
  7630 ;; This function calls:
  7631 ;;		_Lcd_Cmd
  7632 ;; This function is called by:
  7633 ;;		_Lcd_Init
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text32
  7638   003340                     __ptext32:
  7639                           	callstack 0
  7640   003340                     _Lcd_Clear:
  7641                           	callstack 27
  7642   003340                     
  7643                           ;lcd.c: 22:     Lcd_Cmd(0);
  7644   003340  0E00               	movlw	0
  7645   003342  EC88  F019         	call	_Lcd_Cmd
  7646                           
  7647                           ;lcd.c: 23:     Lcd_Cmd(1);
  7648   003346  0E01               	movlw	1
  7649   003348  EC88  F019         	call	_Lcd_Cmd
  7650   00334C  0012               	return		;funcret
  7651   00334E                     __end_of_Lcd_Clear:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _Lcd_Cmd *****************
  7655 ;; Defined at:
  7656 ;;		line 11 in file "lcd.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  a               1    wreg     unsigned char 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;  a               1    2[COMRAM] unsigned char 
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, cstack
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7670 ;;      Params:         0       0       0       0       0       0       0       0       0
  7671 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7672 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7673 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        2 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 1
  7677 ;; This function calls:
  7678 ;;		_Lcd_Port
  7679 ;; This function is called by:
  7680 ;;		_Lcd_Clear
  7681 ;;		_Lcd_Set_Cursor
  7682 ;;		_Lcd_Init
  7683 ;;		_Lcd_Shift_Right
  7684 ;;		_Lcd_Shift_Left
  7685 ;;		_Lcd_Blink
  7686 ;;		_Lcd_NoBlink
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text33
  7691   003310                     __ptext33:
  7692                           	callstack 0
  7693   003310                     _Lcd_Cmd:
  7694                           	callstack 28
  7695                           
  7696                           ;incstack = 0
  7697                           ;Lcd_Cmd@a stored from wreg
  7698   003310  6E03               	movwf	Lcd_Cmd@a^0,c
  7699   003312                     
  7700                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  7701   003312  948C               	bcf	140,2,c	;volatile
  7702   003314                     
  7703                           ;lcd.c: 14:     Lcd_Port(a);
  7704   003314  5003               	movf	Lcd_Cmd@a^0,w,c
  7705   003316  ECD2  F017         	call	_Lcd_Port
  7706   00331A                     
  7707                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  7708   00331A  868C               	bsf	140,3,c	;volatile
  7709   00331C                     
  7710                           ;lcd.c: 16:     _delay((unsigned long)((4)*(48000000/4000.0)));
  7711   00331C  0E3F               	movlw	63
  7712   00331E  6E02               	movwf	??_Lcd_Cmd^0,c
  7713   003320  0E55               	movlw	85
  7714   003322                     u5917:
  7715   003322  2EE8               	decfsz	wreg,f,c
  7716   003324  D7FE               	bra	u5917
  7717   003326  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7718   003328  D7FC               	bra	u5917
  7719   00332A  0000               	nop	
  7720   00332C                     
  7721                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  7722   00332C  968C               	bcf	140,3,c	;volatile
  7723   00332E  0012               	return		;funcret
  7724   003330                     __end_of_Lcd_Cmd:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _Lcd_Port *****************
  7728 ;; Defined at:
  7729 ;;		line 3 in file "lcd.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  a               1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  a               1    0[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        1 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_Lcd_Cmd
  7753 ;;		_Lcd_Init
  7754 ;;		_Lcd_Write_Char
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text34
  7759   002FA4                     __ptext34:
  7760                           	callstack 0
  7761   002FA4                     _Lcd_Port:
  7762                           	callstack 28
  7763                           
  7764                           ;incstack = 0
  7765                           ;Lcd_Port@a stored from wreg
  7766   002FA4  6E01               	movwf	Lcd_Port@a^0,c
  7767   002FA6                     
  7768                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  7769   002FA6  A001               	btfss	Lcd_Port@a^0,0,c
  7770   002FA8  EFD8  F017         	goto	u3331
  7771   002FAC  EFDA  F017         	goto	u3330
  7772   002FB0                     u3331:
  7773   002FB0  EFDD  F017         	goto	l65
  7774   002FB4                     u3330:
  7775   002FB4  888C               	bsf	140,4,c	;volatile
  7776   002FB6  EFDE  F017         	goto	l3197
  7777   002FBA                     l65:
  7778   002FBA  988C               	bcf	140,4,c	;volatile
  7779   002FBC                     l3197:
  7780                           
  7781                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7782   002FBC  A201               	btfss	Lcd_Port@a^0,1,c
  7783   002FBE  EFE3  F017         	goto	u3341
  7784   002FC2  EFE5  F017         	goto	u3340
  7785   002FC6                     u3341:
  7786   002FC6  EFE8  F017         	goto	l69
  7787   002FCA                     u3340:
  7788   002FCA  8A8C               	bsf	140,5,c	;volatile
  7789   002FCC  EFE9  F017         	goto	l3201
  7790   002FD0                     l69:
  7791   002FD0  9A8C               	bcf	140,5,c	;volatile
  7792   002FD2                     l3201:
  7793                           
  7794                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7795   002FD2  A401               	btfss	Lcd_Port@a^0,2,c
  7796   002FD4  EFEE  F017         	goto	u3351
  7797   002FD8  EFF0  F017         	goto	u3350
  7798   002FDC                     u3351:
  7799   002FDC  EFF3  F017         	goto	l73
  7800   002FE0                     u3350:
  7801   002FE0  8C8C               	bsf	140,6,c	;volatile
  7802   002FE2  EFF4  F017         	goto	l3205
  7803   002FE6                     l73:
  7804   002FE6  9C8C               	bcf	140,6,c	;volatile
  7805   002FE8                     l3205:
  7806                           
  7807                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7808   002FE8  A601               	btfss	Lcd_Port@a^0,3,c
  7809   002FEA  EFF9  F017         	goto	u3361
  7810   002FEE  EFFB  F017         	goto	u3360
  7811   002FF2                     u3361:
  7812   002FF2  EFFE  F017         	goto	l77
  7813   002FF6                     u3360:
  7814   002FF6  8E8C               	bsf	140,7,c	;volatile
  7815   002FF8  EFFF  F017         	goto	l80
  7816   002FFC                     l77:
  7817   002FFC  9E8C               	bcf	140,7,c	;volatile
  7818   002FFE                     l80:
  7819   002FFE  0012               	return		;funcret
  7820   003000                     __end_of_Lcd_Port:
  7821                           	callstack 0
  7822                           
  7823 ;; *************** function _ADC_Read *****************
  7824 ;; Defined at:
  7825 ;;		line 18 in file "adc.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  ch              1    wreg     unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  ch              1    2[COMRAM] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  2    0[COMRAM] unsigned int 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7839 ;;      Params:         2       0       0       0       0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7842 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7843 ;;Total ram usage:        3 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_main
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text35
  7853   0030EC                     __ptext35:
  7854                           	callstack 0
  7855   0030EC                     _ADC_Read:
  7856                           	callstack 30
  7857                           
  7858                           ;incstack = 0
  7859                           ;ADC_Read@ch stored from wreg
  7860   0030EC  6E03               	movwf	ADC_Read@ch^0,c
  7861   0030EE                     
  7862                           ;adc.c: 18: unsigned int ADC_Read(unsigned char ch);adc.c: 19: {;adc.c: 20:     if(ch > 
      +                          13){
  7863   0030EE  0E0D               	movlw	13
  7864   0030F0  6403               	cpfsgt	ADC_Read@ch^0,c
  7865   0030F2  EF7D  F018         	goto	u3871
  7866   0030F6  EF7F  F018         	goto	u3870
  7867   0030FA                     u3871:
  7868   0030FA  EF85  F018         	goto	l3689
  7869   0030FE                     u3870:
  7870   0030FE                     
  7871                           ;adc.c: 21:         return 0;
  7872   0030FE  0E00               	movlw	0
  7873   003100  6E02               	movwf	(?_ADC_Read+1)^0,c
  7874   003102  0E00               	movlw	0
  7875   003104  6E01               	movwf	?_ADC_Read^0,c
  7876   003106  EF98  F018         	goto	l51
  7877   00310A                     l3689:
  7878                           
  7879                           ;adc.c: 23:         ADCON0 = 0x00;
  7880   00310A  0E00               	movlw	0
  7881   00310C  6EC2               	movwf	194,c	;volatile
  7882   00310E                     
  7883                           ;adc.c: 24:         ADCON0 = (ch << 2);
  7884   00310E  4403               	rlncf	ADC_Read@ch^0,w,c
  7885   003110  46E8               	rlncf	wreg,f,c
  7886   003112  0BFC               	andlw	252
  7887   003114  6EC2               	movwf	194,c	;volatile
  7888   003116                     
  7889                           ;adc.c: 25:         ADCON0bits.ADON = 1;
  7890   003116  80C2               	bsf	194,0,c	;volatile
  7891   003118                     
  7892                           ;adc.c: 26:         ADCON0bits.GO_DONE = 1;
  7893   003118  82C2               	bsf	194,1,c	;volatile
  7894   00311A                     l53:
  7895   00311A  B2C2               	btfsc	194,1,c	;volatile
  7896   00311C  EF92  F018         	goto	u3881
  7897   003120  EF94  F018         	goto	u3880
  7898   003124                     u3881:
  7899   003124  EF8D  F018         	goto	l53
  7900   003128                     u3880:
  7901   003128                     
  7902                           ;adc.c: 28:         return ADRES;
  7903   003128  CFC3 F001          	movff	4035,?_ADC_Read	;volatile
  7904   00312C  CFC4 F002          	movff	4036,?_ADC_Read+1	;volatile
  7905   003130                     l51:
  7906   003130  0012               	return		;funcret
  7907   003132                     __end_of_ADC_Read:
  7908                           	callstack 0
  7909                           
  7910 ;; *************** function _ADC_Init *****************
  7911 ;; Defined at:
  7912 ;;		line 11 in file "adc.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  p_ang           1    wreg     unsigned char 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  p_ang           1    0[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0
  7927 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7930 ;;Total ram usage:        1 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_main
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text36
  7940   003330                     __ptext36:
  7941                           	callstack 0
  7942   003330                     _ADC_Init:
  7943                           	callstack 30
  7944                           
  7945                           ;incstack = 0
  7946                           ;ADC_Init@p_ang stored from wreg
  7947   003330  6E01               	movwf	ADC_Init@p_ang^0,c
  7948   003332                     
  7949                           ;adc.c: 11: void ADC_Init(unsigned char p_ang);adc.c: 12: {;adc.c: 13:     ADCON1 = p_an
      +                          g;
  7950   003332  C001  FFC1         	movff	ADC_Init@p_ang,4033	;volatile
  7951   003336                     
  7952                           ;adc.c: 14:     ADCON0 = 0x00;
  7953   003336  0E00               	movlw	0
  7954   003338  6EC2               	movwf	194,c	;volatile
  7955   00333A                     
  7956                           ;adc.c: 15:     ADCON2 = 0x8F;
  7957   00333A  0E8F               	movlw	143
  7958   00333C  6EC0               	movwf	192,c	;volatile
  7959   00333E  0012               	return		;funcret
  7960   003340                     __end_of_ADC_Init:
  7961                           	callstack 0
  7962                           
  7963                           	psect	rparam
  7964   000000                     
  7965                           	psect	config
  7966                           
  7967                           ;Config register CONFIG1L @ 0x300000
  7968                           ;	PLL Prescaler Selection bits
  7969                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  7970                           ;	System Clock Postscaler Selection bits
  7971                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7972                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7973                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  7974   300000                     	org	3145728
  7975   300000  21                 	db	33
  7976                           
  7977                           ;Config register CONFIG1H @ 0x300001
  7978                           ;	Oscillator Selection bits
  7979                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  7980                           ;	Fail-Safe Clock Monitor Enable bit
  7981                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7982                           ;	Internal/External Oscillator Switchover bit
  7983                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7984   300001                     	org	3145729
  7985   300001  0E                 	db	14
  7986                           
  7987                           ;Config register CONFIG2L @ 0x300002
  7988                           ;	Power-up Timer Enable bit
  7989                           ;	PWRT = OFF, PWRT disabled
  7990                           ;	Brown-out Reset Enable bits
  7991                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  7992                           ;	Brown-out Reset Voltage bits
  7993                           ;	BORV = 3, Minimum setting 2.05V
  7994                           ;	USB Voltage Regulator Enable bit
  7995                           ;	VREGEN = OFF, USB voltage regulator disabled
  7996   300002                     	org	3145730
  7997   300002  19                 	db	25
  7998                           
  7999                           ;Config register CONFIG2H @ 0x300003
  8000                           ;	Watchdog Timer Enable bit
  8001                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8002                           ;	Watchdog Timer Postscale Select bits
  8003                           ;	WDTPS = 32768, 1:32768
  8004   300003                     	org	3145731
  8005   300003  1E                 	db	30
  8006                           
  8007                           ; Padding undefined space
  8008   300004                     	org	3145732
  8009   300004  FF                 	db	255
  8010                           
  8011                           ;Config register CONFIG3H @ 0x300005
  8012                           ;	CCP2 MUX bit
  8013                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8014                           ;	PORTB A/D Enable bit
  8015                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8016                           ;	Low-Power Timer 1 Oscillator Enable bit
  8017                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8018                           ;	MCLR Pin Enable bit
  8019                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8020   300005                     	org	3145733
  8021   300005  81                 	db	129
  8022                           
  8023                           ;Config register CONFIG4L @ 0x300006
  8024                           ;	Stack Full/Underflow Reset Enable bit
  8025                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8026                           ;	Single-Supply ICSP Enable bit
  8027                           ;	LVP = OFF, Single-Supply ICSP disabled
  8028                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8029                           ;	ICPRT = OFF, ICPORT disabled
  8030                           ;	Extended Instruction Set Enable bit
  8031                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8032                           ;	Background Debugger Enable bit
  8033                           ;	DEBUG = 0x1, unprogrammed default
  8034   300006                     	org	3145734
  8035   300006  81                 	db	129
  8036                           
  8037                           ; Padding undefined space
  8038   300007                     	org	3145735
  8039   300007  FF                 	db	255
  8040                           
  8041                           ;Config register CONFIG5L @ 0x300008
  8042                           ;	Code Protection bit
  8043                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8044                           ;	Code Protection bit
  8045                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8046                           ;	Code Protection bit
  8047                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8048                           ;	Code Protection bit
  8049                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8050   300008                     	org	3145736
  8051   300008  0F                 	db	15
  8052                           
  8053                           ;Config register CONFIG5H @ 0x300009
  8054                           ;	Boot Block Code Protection bit
  8055                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8056                           ;	Data EEPROM Code Protection bit
  8057                           ;	CPD = OFF, Data EEPROM is not code-protected
  8058   300009                     	org	3145737
  8059   300009  C0                 	db	192
  8060                           
  8061                           ;Config register CONFIG6L @ 0x30000A
  8062                           ;	Write Protection bit
  8063                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8064                           ;	Write Protection bit
  8065                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8066                           ;	Write Protection bit
  8067                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8068                           ;	Write Protection bit
  8069                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8070   30000A                     	org	3145738
  8071   30000A  0F                 	db	15
  8072                           
  8073                           ;Config register CONFIG6H @ 0x30000B
  8074                           ;	Configuration Register Write Protection bit
  8075                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8076                           ;	Boot Block Write Protection bit
  8077                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8078                           ;	Data EEPROM Write Protection bit
  8079                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8080   30000B                     	org	3145739
  8081   30000B  E0                 	db	224
  8082                           
  8083                           ;Config register CONFIG7L @ 0x30000C
  8084                           ;	Table Read Protection bit
  8085                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8086                           ;	Table Read Protection bit
  8087                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8088                           ;	Table Read Protection bit
  8089                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8090                           ;	Table Read Protection bit
  8091                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8092   30000C                     	org	3145740
  8093   30000C  0F                 	db	15
  8094                           
  8095                           ;Config register CONFIG7H @ 0x30000D
  8096                           ;	Boot Block Table Read Protection bit
  8097                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8098   30000D                     	org	3145741
  8099   30000D  40                 	db	64
  8100                           tosu	equ	0xFFF
  8101                           tosh	equ	0xFFE
  8102                           tosl	equ	0xFFD
  8103                           stkptr	equ	0xFFC
  8104                           pclatu	equ	0xFFB
  8105                           pclath	equ	0xFFA
  8106                           pcl	equ	0xFF9
  8107                           tblptru	equ	0xFF8
  8108                           tblptrh	equ	0xFF7
  8109                           tblptrl	equ	0xFF6
  8110                           tablat	equ	0xFF5
  8111                           prodh	equ	0xFF4
  8112                           prodl	equ	0xFF3
  8113                           indf0	equ	0xFEF
  8114                           postinc0	equ	0xFEE
  8115                           postdec0	equ	0xFED
  8116                           preinc0	equ	0xFEC
  8117                           plusw0	equ	0xFEB
  8118                           fsr0h	equ	0xFEA
  8119                           fsr0l	equ	0xFE9
  8120                           wreg	equ	0xFE8
  8121                           indf1	equ	0xFE7
  8122                           postinc1	equ	0xFE6
  8123                           postdec1	equ	0xFE5
  8124                           preinc1	equ	0xFE4
  8125                           plusw1	equ	0xFE3
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           bsr	equ	0xFE0
  8129                           indf2	equ	0xFDF
  8130                           postinc2	equ	0xFDE
  8131                           postdec2	equ	0xFDD
  8132                           preinc2	equ	0xFDC
  8133                           plusw2	equ	0xFDB
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     76     115
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S814$buffer	PTR unsigned char  size(2) Largest target is 0

    S814$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[8]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[8]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[8]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[8]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44581
                           _ADC_Init
                           _ADC_Read
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   34925
                                             57 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   34241
                                             53 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   33735
                                             92 COMRAM     3     0      3
                                             44 BANK0      9     9      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     6      3    4687
                                             22 COMRAM     9     6      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     421
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   25982
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3309
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1166
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     420
                                              4 COMRAM     3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     802
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              3 COMRAM     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      50       8       31.2%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     4C      73       6       71.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhh         3B      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRll         2A      0       0      26        0.0%
BITBIGSFRlhh         6      0       0      24        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFRhll         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     122       3        0.0%
DATA                 0      0     122       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 07 16:24:53 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l30 27FC                          l51 3130                          l53 311A  
                        l47 333E                          l55 3128                          l80 2FFE  
                        l73 2FE6                          l65 2FBA                          l83 332E  
                        l92 2BDE                          l77 2FFC                          l69 2FD0  
                        l86 334C                          l96 2BDE                          l99 2E64  
       ___wmul@multiplicand 0003                         l102 32C6                         l123 32EC  
                       l108 3292                         l420 290A                         l621 2ED8  
                       l710 1D1A                         l382 2D32                         l614 2ED0  
                       l631 2FA2                         l624 2F9A                         l705 1EF6  
                       l393 2A0E                         l801 3222                         l707 1D56  
                       l651 1462                         l716 1D9C                         l388 29C8  
                       l660 1732                         l652 1450                         l741 1B5C  
                       l397 325A                         l653 1416                         l718 1E14  
                       l719 1E02                         l744 19EE                         l832 2F3E  
                       l737 17F8                         l913 2DD8                         l905 26DE  
                       l754 1B1E                         l746 1A66                         l930 21F0  
                       l747 1A54                         l843 1272                         l668 157C  
                       l828 2EF0                         l781 25B6                         l677 164C  
                       l693 30EA                         l909 2DD0                         l678 163A  
                       l846 0BA8                         l792 254E                         l848 09EE  
                       l785 24F2                         l953 3170                         l778 245A  
                       l970 2402                         l963 2B0C                         l876 0FF0  
                       l973 2346                         l990 30A4                         l895 25E4  
                       l984 3054                         l897 25EC                         _pad 2EDA  
                       wreg 0FE8                ___flmul@aexp 001C                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 000A                        l1002 2C88                        l1010 31B0  
                      l1013 334E                        l1019 31EA                        l3201 2FD2  
                      l4001 1388                        l3203 2FE0                        l4011 139C  
                      l4003 138C                        l3205 2FE8                        l4101 15FA  
                      l4021 13B0                        l4013 13A0                        l4005 1390  
                      l3207 2FF6                        l4111 1632                        l4103 15FC  
                      l4031 140E                        l4015 13A4                        l4007 1394  
                      l4023 13B4                        l4201 1C40                        l4121 16B0  
                      l4105 160A                        l4041 1444                        l4033 1424  
                      l4025 13B8                        l4017 13A8                        l4009 1398  
                      l5001 215E                        l4203 1C50                        l4211 1C70  
                      l4131 16F6                        l4115 165C                        l4123 16B2  
                      l4107 160E                        l4051 1494                        l4043 144E  
                      l4035 1430                        l4027 13E2                        l4019 13AC  
                      l5003 216C                        l5011 21C2                        l3501 332C  
                      l4221 1CAE                        l4213 1C80                        l4205 1C58  
                      l4301 1740                        l4141 1720                        l4133 1704  
                      l4125 16C2                        l4117 1668                        l4109 161C  
                      l4061 14D0                        l4053 14A4                        l4045 1470  
                      l4037 1434                        l4029 13FE                        l4231 1CF6  
                      l4223 1CBE                        l4215 1C80                        l4207 1C5C  
                      l4311 1780                        l4303 174E                        l4143 1722  
                      l4135 170A                        l4127 16D2                        l4119 1676  
                      l4071 1516                        l4063 14DE                        l4055 14B2  
                      l4047 1480                        l4039 1442                        l4151 318C  
                      l5015 21CE                        l3193 2FA6                        l4241 1D44  
                      l4233 1D0A                        l4225 1CCE                        l4161 1B5E  
                      l4401 1A82                        l4321 17B0                        l4313 1786  
                      l4305 1750                        l4137 170C                        l4129 16F2  
                      l4081 1592                        l4073 154A                        l4065 14E0  
                      l4057 14C0                        l4153 3190                        l5009 2196  
                      l5041 3132                        l3195 2FB4                        l3611 3340  
                      l4251 1D8C                        l4243 1D54                        l4235 1D18  
                      l4227 1CDE                        l4219 1C94                        l4171 1B9A  
                      l4163 1B6A                        l4411 1AEC                        l4403 1A90  
                      l4331 17E8                        l4323 17B2                        l4315 1796  
                      l4307 1760                        l4139 1712                        l4091 15CE  
                      l4083 15A2                        l4075 154C                        l4067 14EA  
                      l4059 14CC                        l4147 3172                        l4155 32C8  
                      l5043 313A                        l5051 31EC                        l3197 2FBC  
                      l3701 2B32                        l3621 32AE                        l3613 3296  
                      l4261 1DCC                        l4253 1D9A                        l4245 1D66  
                      l4237 1D24                        l4229 1CE6                        l4181 1BCA  
                      l4173 1BAA                        l4165 1B78                        l4421 1B42  
                      l4413 1B06                        l4405 1ABA                        l4341 1838  
                      l4333 1808                        l4325 17C2                        l4317 179C  
                      l4309 1770                        l4093 15D0                        l4077 155C  
                      l4069 14F0                        l4149 317E                        l4157 32E4  
                      l5045 314A                        l5053 31F6                        l3199 2FCA  
                      l3711 2B6C                        l3703 2B38                        l3631 32C4  
                      l3623 32B4                        l3615 32A2                        l4271 1E3E  
                      l4263 1DFA                        l4247 1D7C                        l4255 1DAC  
                      l4239 1D42                        l4191 1C00                        l4183 1BD0  
                      l4175 1BAC                        l4167 1B7A                        l4415 1B22  
                      l4423 1B48                        l4407 1ABE                        l4351 1888  
                      l4343 1842                        l4335 1818                        l4327 17D2  
                      l4319 17A2                        l4095 15DE                        l4087 15B6  
                      l4079 156C                        l4431 30B6                        l4503 2896  
                      l5047 3166                        l5055 31FE                        l5071 26FC  
                      l5063 26E0                        l3721 2BAA                        l3713 2B76  
                      l3705 2B42                        l3625 32B6                        l3617 32A4  
                      l4281 1EB6                        l4273 1E68                        l4257 1DBA  
                      l4249 1D82                        l4193 1C10                        l4185 1BDE  
                      l4169 1B8A                        l4177 1BB4                        l4441 2CF6  
                      l4425 1B4C                        l4417 1B32                        l4409 1AD8  
                      l4361 18CA                        l4353 1894                        l4345 1858  
                      l4329 17E2                        l4097 15E6                        l4089 15C0  
                      l4521 28FA                        l4513 28BE                        l4505 28A0  
                      l4601 3000                        l5057 3206                        l5081 279E  
                      l5073 276C                        l5065 26EA                        l3643 3332  
                      l3651 2DE6                        l3723 2BBC                        l3715 2B88  
                      l3707 2B54                        l3627 32BC                        l3619 32AC  
                      l4291 1EEC                        l4283 1ED2                        l4267 1E24  
                      l4275 1E6C                        l4259 1DBE                        l4195 1C12  
                      l4187 1BE0                        l4179 1BC4                        l4443 2D06  
                      l4435 2C8A                        l4451 290C                        l4419 1B40  
                      l4371 192C                        l4363 18DA                        l4355 18A2  
                      l4347 1864                        l4339 182C                        l4099 15EA  
                      l4515 28CA                        l4507 28AA                        l4611 2212  
                      l4603 300E                        l4531 2E88                        l5059 3216  
                      l5083 27BC                        l5075 2776                        l5067 26EC  
                      l3645 3336                        l3493 3312                        l3661 2E20  
                      l3653 2DEC                        l3725 2BCE                        l3717 2B9A  
                      l3709 2B66                        l3629 32BE                        l3741 325C  
                      l4285 1ED6                        l4277 1E86                        l4269 1E30  
                      l4189 1BF0                        l4197 1C1A                        l4445 2D2A  
                      l4437 2CB8                        l4461 2996                        l4453 293A  
                      l4381 19D4                        l4373 1948                        l4365 18F4  
                      l4357 18AE                        l4349 187C                        l4429 30A6  
                      l4517 28DA                        l4621 22FA                        l4613 2268  
                      l4605 3022                        l4701 0986                        l4541 2EC2  
                      l4533 2E90                        l4525 2E66                        l5085 27C4  
                      l5077 278C                        l5069 26EE                        ?_pad 000F  
                      l3647 333A                        l3495 3314                        l3671 2E48  
                      l3663 2E30                        l3655 2E04                        l3727 2BD4  
                      l3719 2BA0                        l3743 3268                        l3751 2416  
                      l4287 1EE4                        l4279 1E9C                        l4199 1C2A  
                      l4447 2D30                        l4439 2CC8                        l4463 29A8  
                      l4455 294A                        l4391 1A10                        l4383 19DE  
                      l4375 1972                        l4367 1904                        l4359 18BE  
                      l4519 28EA                        l4631 23E2                        l4623 2336  
                      l4615 227C                        l4711 09B8                        l4543 2EC4  
                      l4535 2E9E                        l4527 2E6E                        l4551 2F5A  
                      l5191 1F76                        l5087 27F6                        l5079 2794  
                      l3681 30EE                        l3497 331A                        l3673 2E4E  
                      l3665 2E36                        l3657 2E0A                        l3649 2DDA  
                      l3745 3276                        l3761 2494                        l3753 2424  
                      l4289 1EEA                        l4465 29B6                        l4457 2978  
                      l4393 1A1E                        l4385 19EC                        l4377 19A8  
                      l4369 1920                        l4473 3224                        l4481 2806  
                      l4633 23F2                        l4617 228A                        l4625 236A  
                      l4609 21F2                        l4641 3076                        l4801 0F34  
                      l4721 0A76                        l4545 2ECA                        l4537 2EA4  
                      l4529 2E80                        l4561 2F94                        l4553 2F62  
                      l5193 2052                        l3691 310E                        l3683 30FE  
                      l3499 331C                        l3675 2E54                        l3667 2E3C  
                      l3659 2E1A                        l3747 327A                        l3771 24E8  
                      l3763 249C                        l3755 246A                        l4467 2A06  
                      l4459 2988                        l4395 1A4C                        l4387 19FE  
                      l4379 19B6                        l4299 1734                        l4475 323A  
                      l4491 285C                        l4483 281C                        l4627 23A6  
                      l4643 307A                        l3931 2BE0                        l4571 2F10  
                      l4563 2EDA                        l4811 0FE6                        l4803 0F3A  
                      l4731 0B36                        l4723 0AA8                        l4715 09FE  
                      l4651 0828                        l4539 2EBA                        l4555 2F70  
                      l4547 2F40                        l5195 20A6                        l3693 3116  
                      l3677 2E5A                        l3669 2E42                        l3781 255E  
                      l3773 2524                        l3765 24A8                        l3757 2480  
                      l3749 2406                        l4469 2A0C                        l4389 1A0C  
                      l4477 324A                        l4493 286C                        l4581 2A96  
                      l4629 23BA                        l4645 3086                        l4637 3056  
                      l3941 2C58                        l3933 2BF0                        l4573 2F2E  
                      l4565 2EE8                        l4821 102A                        l4813 1002  
                      l4805 0F42                        l4741 0BCC                        l4725 0AE6  
                      l4717 0A04                        l4709 099E                        l4661 0878  
                      l4653 0838                        l4557 2F86                        l4549 2F52  
                      l4901 2638                        l5197 2148                        l3695 3118  
                      l3679 2E60                        l3791 25A6                        l3783 2562  
                      l3775 2530                        l3767 24DA                        l4399 1A76  
                      l3951 1290                        l4495 2870                        l4487 2830  
                      l4583 2AA2                        l4575 2A10                        l4639 306A  
                      l4647 308A                        l3935 2C00                        l4567 2EFC  
                      l4823 1032                        l4815 1010                        l4831 1052  
                      l4807 0F4E                        l4751 0C00                        l4743 0BD4  
                      l4727 0AFA                        l4735 0B76                        l4719 0A38  
                      l4671 08B4                        l4663 0880                        l4655 0846  
                      l4559 2F8E                        l4911 2698                        l4903 263E  
                      l5199 21B4                        l3689 310A                        l3697 2B10  
                      l3785 2586                        l3777 253E                        l3769 24DC  
                      l3953 12A0                        l3961 12CA                        l3945 1274  
                      l4497 287E                        l4489 285A                        l4593 2B04  
                      l4577 2A30                        l3937 2C0A                        l4569 2F0C  
                      l4841 10D8                        l4833 1064                        l4825 1042  
                      l4817 1020                        l4809 0FC6                        l4761 0C4A  
                      l4753 0C18                        l4745 0BDC                        l4737 0BB0  
                      l4729 0B2E                        l4681 08FA                        l4665 0890  
                      l4673 08B8                        l4657 084A                        l4649 0822  
                      l4921 2D3C                        l4913 26B2                        l4905 265A  
                      l3699 2B20                        l3787 2596                        l3779 255C  
                      l3971 12FA                        l3963 12DA                        l3955 12B0  
                      l3947 1280                        l4579 2A6E                        l4587 2AAE  
                      l3939 2C26                        l4851 1152                        l4843 110C  
                      l4835 1076                        l4827 1046                        l4819 1024  
                      l4763 0C5E                        l4771 0D54                        l4755 0C2A  
                      l4747 0BE0                        l4739 0BC0                        l4683 0902  
                      l4675 08DE                        l4691 093C                        l4667 08A0  
                      l4659 086E                        l4923 2D5E                        l4931 2DAA  
                      l4907 266C                        l4915 26C2                        l3789 25A4  
                      l3981 133A                        l3973 1308                        l3965 12E0  
                      l3957 12C0                        l3949 128E                        l4589 2AC0  
                      l4597 31B2                        l4861 11BE                        l4853 115A  
                      l4845 1114                        l4837 107A                        l4829 104C  
                      l4781 0E20                        l4773 0D72                        l4765 0CC2  
                      l4749 0BF2                        l4757 0C32                        l4693 0962  
                      l4685 0916                        l4677 08F0                        l4669 08AC  
                      l4925 2D66                        l4909 267E                        l4941 1F34  
                      l4933 1EF8                        l3991 1374                        l3983 133C  
                      l3975 130A                        l3967 12F2                        l3959 12C2  
                      l4599 31BA                        l4871 120A                        l4855 1168  
                      l4839 1080                        l4847 1118                        l4791 0ED0  
                      l4783 0E30                        l4775 0DA6                        l4767 0D1A  
                      l4759 0C3A                        l4695 0974                        l4687 0920  
                      l4679 08F4                        l4927 2D82                        l4919 2D34  
                      l4951 1F52                        l4943 1F3C                        l4935 1F1A  
                      l3993 1378                        l3977 131A                        l3985 1344  
                      l3969 12F4                        l4865 11D0                        l4873 1228  
                      l4857 1198                        l4849 1136                        l4793 0F04  
                      l4785 0E40                        l4777 0DD8                        l4769 0D4E  
                      l4697 0978                        l4929 2DA2                        l4961 1FD2  
                      l4945 1F3E                        l4953 1F84                        l4937 1F22  
                      l3995 137C                        l3987 1354                        l3979 132A  
                      l4875 1238                        l4867 11E6                        l4859 11A6  
                      l4795 0F18                        l4787 0E74                        l4779 0DEE  
                      l4699 097E                        l4891 25F4                        l4883 25B8  
                      l4963 1FDE                        l4955 1F94                        l4947 1F4A  
                      l4939 1F30                        l3997 1380                        l3989 1366  
                      l4877 124E                        l4869 11EC                        l4789 0ECA  
                      l4797 0F1C                        l4893 25FC                        l4885 25C8  
                      l4981 207C                        l4965 1FFA                        l4957 1FB6  
                      l3999 1384                        l4879 1256                        l4799 0F2C  
                      l4895 2606                        l4887 25CA                        l4983 2082  
                      l4991 20C4                        l4975 2034                        l4967 2012  
                      l4959 1FBE                        l4897 260C                        l4889 25D8  
                      l4993 20E4                        l4985 208A                        l4969 2020  
                      l4977 2060                        l4899 2632                        l4995 210C  
                      l4979 206A                        l4989 2092                        l4999 2134  
                      STR_1 0810                        STR_2 0801                        STR_3 0818  
                      STR_6 081C                        u4000 254E                        u4001 254A  
                      u4010 255C                        u4011 2558                        u4020 2596  
                      u4100 12A0                        u4021 2592                        u4101 129C  
                      u4030 25A4                        u4110 12B0                        u4031 25A0  
                      u4111 12AC                        u4200 13FC                        u4120 12F2  
                      u5000 281C                        u4121 12EE                        u5001 2818  
                      u3330 2FB4                        u4210 1424                        u4130 1308  
                      u5010 2850                        u4050 2BF0                        u3331 2FB0  
                      u4211 1420                        u4131 1304                        u4051 2BEC  
                      u3340 2FCA                        u4300 155C                        u4220 1442  
                      u4140 131A                        u5020 287E                        u4060 2C00  
                      u5100 2F52                        u3341 2FC6                        u4301 1558  
                      u4221 143E                        u4141 1316                        u5021 287A  
                      u4061 2BFC                        u5101 2F4E                        u3350 2FE0  
                      u4310 1592                        u4230 1462                        u4150 132A  
                      u5030 2892                        u4070 2C26                        u5110 2F70  
                      u3351 2FDC                        u4311 158E                        u4231 145E  
                      u4151 1326                        u5031 288E                        u5015 2846  
                      u4071 2C22                        u5111 2F6C                        u3360 2FF6  
                      u4400 165C                        u4320 15A2                        u4240 1470  
                      u4160 1366                        u5040 28BA                        u5200 2AFA  
                      u4080 2C58                        u5120 2F86                        u3361 2FF2  
                      u4401 1658                        u4321 159E                        u4241 146C  
                      u4161 1362                        u5041 28B6                        u5201 2AF4  
                      u4081 2C54                        u5121 2F82                        u4410 1676  
                      u4330 15CE                        u4250 1480                        u4170 1374  
                      u4090 128E                        u5050 28DA                        u5210 2AFC  
                      u5130 2EE8                        u4411 1672                        u4331 15CA  
                      u4251 147C                        u4171 1370                        u4091 128A  
                      u5051 28D6                        u5131 2EE4                        u4500 1B8A  
                      u4420 16B0                        u4340 15DE                        u4260 14B2  
                      u4180 13E2                        u5060 28EA                        u5300 2336  
                      u5140 2F2E                        u5220 31EA                        u4501 1B86  
                      u4421 16AC                        u4341 15DA                        u4261 14AE  
                      u4181 13DE                        u5061 28E6                        u5301 2332  
                      u5141 2F2A                        u5221 31E6                        u4510 1B9A  
                      u4430 16C2                        u4350 15FA                        u4270 14C0  
                      u4190 13FA                        u5150 2A50                        u5310 238A  
                      u5230 300E                        u5070 2E80                        u4511 1B96  
                      u4431 16BE                        u4351 15F6                        u4271 14BC  
                      u4191 13F4                        u5231 300A                        u5071 2E7C  
                      u4600 1D66                        u4520 1BDE                        u4440 16D2  
                      u4360 160A                        u4280 14DE                        u5160 2A6E  
                      u5320 23A6                        u5240 223A                        u5400 0962  
                      u5080 2E9E                        u4601 1D62                        u4521 1BDA  
                      u4441 16CE                        u4361 1606                        u4281 14DA  
                      u5161 2A6A                        u5321 23A2                        u5401 095E  
                      u5081 2E9A                        u4610 1D7C                        u4530 1BF0  
                      u4450 16F2                        u4370 161C                        u4290 1516  
                      u5170 2A96                        u5330 23E2                        u5250 2268  
                      u5410 0974                        u5090 2EBA                        u4611 1D78  
                      u4531 1BEC                        u4451 16EE                        u4371 1618  
                      u4291 1512                        u5171 2A92                        u5155 2A46  
                      u5331 23DE                        u5315 2380                        u5251 2264  
                      u5411 0970                        u5091 2EB6                        u3900 2B54  
                      u4700 1EB6                        u4620 1D9A                        u4540 1C00  
                      u4460 1704                        u4380 1632                        u5180 2AC0  
                      u5260 228A                        u5340 30A4                        u5500 0C00  
                      u5420 09EA                        u3901 2B50                        u4701 1EB2  
                      u4621 1D96                        u4541 1BFC                        u4461 1700  
                      u4381 162E                        u5181 2ABC                        u5261 2286  
                      u5245 2230                        u5341 30A0                        u5501 0BFC  
                      u5421 09E6                        u3910 2B88                        u4710 1EE4  
                      u4630 1DBA                        u4550 1C40                        u4470 1720  
                      u4390 1648                        u5510 0C2A                        u5430 0A76  
                      u5350 0846                        u3911 2B84                        u4711 1EE0  
                      u4631 1DB6                        u4551 1C3C                        u4471 171C  
                      u4391 1644                        u5511 0C26                        u5431 0A72  
                      u5351 0842                        u3920 2BBC                        u4640 1DCC  
                      u4560 1C80                        u4800 1992                        u4720 174E  
                      u5280 22F6                        u4480 31B0                        u5600 1010  
                      u5520 0D72                        u5440 0AA8                        u5360 0890  
                      u3921 2BB8                        u4641 1DC8                        u4561 1C7C  
                      u4721 174A                        u5281 22F2                        u4481 31AC  
                      u5601 100C                        u5521 0D6E                        u5441 0AA4  
                      u5361 088C                        u3930 3292                        u4650 1DFA  
                      u4570 1CF6                        u4490 1B78                        u4810 19EC  
                      u4730 1760                        u5290 231A                        u5610 1064  
                      u5530 0DD8                        u5450 0AE6                        u5370 08A0  
                      u3931 328E                        u4651 1DF6                        u4571 1CF2  
                      u4491 1B74                        u4811 19E8                        u4731 175C  
                      u5195 2AD2                        u5275 229E                        u5611 1060  
                      u5531 0DD4                        u5451 0AE2                        u5371 089C  
                      u3940 2416                        u4660 1E10                        u4580 1D18  
                      u4900 1B40                        u4820 1A0C                        u4740 1770  
                      u5276 22A8                        u5620 1136                        u5540 0E20  
                      u5460 0B72                        u5380 08DE                        u5700 25C8  
                      u3941 2412                        u4661 1E0C                        u4581 1D14  
                      u4901 1B3C                        u4821 1A08                        u4805 1988  
                      u4741 176C                        u5277 22B8                        u5621 1132  
                      u5541 0E1C                        u5461 0B6E                        u5381 08DA  
                      u5701 25C4                        u3870 30FE                        u3950 2424  
                      u4670 1E24                        u4590 1D42                        u4910 2CB8  
                      u4830 1A1E                        u4750 17B0                        u5630 1152  
                      u5550 0E30                        u5470 0BA8                        u5390 08F0  
                      u5710 25D8                        u3871 30FA                        u3951 2420  
                      u4671 1E20                        u4591 1D3E                        u4911 2CB4  
                      u4831 1A1A                        u4751 17AC                        u5295 2310  
                      u5631 114E                        u5551 0E2C                        u5471 0BA4  
                      u5391 08EC                        u5711 25D4                        u3880 3128  
                      u3960 2480                        u4680 1E3E                        u4920 2CF6  
                      u4840 1A4C                        u4760 17C2                        u5640 11B8  
                      u5560 0ECA                        u5480 0BC0                        u5720 266C  
                      u5800 1F94                        u3881 3124                        u3961 247C  
                      u4681 1E3A                        u4921 2CF2                        u4841 1A48  
                      u4761 17BE                        u5641 11B2                        u5561 0EC6  
                      u5481 0BBC                        u5721 2668                        u5801 1F90  
                      u3890 2B20                        u3970 24D6                        u4690 1E86  
                      u4930 2D2A                        u4850 1A62                        u4770 17D2  
                      u5650 11BA                        u5570 0F18                        u5490 0BF2  
                      u5730 267E                        u5810 1FB6                        u3891 2B1C  
                      u3971 24D2                        u4691 1E82                        u4931 2D26  
                      u4851 1A5E                        u4771 17CE                        u5571 0F14  
                      u5491 0BEE                        u5731 267A                        u5811 1FB2  
                      u3980 2520                        u4940 293A                        u4860 1A76  
                      u4780 1808                        u5660 11CC                        u5580 0FC6  
                      u5740 2698                        u5820 1FFA                        u3981 251C  
                      u4941 2936                        u4861 1A72                        u4781 1804  
                      u5661 11C8                        u5581 0FC2                        u5741 2694  
                      u5821 1FF6                        u3990 253E                        u4950 2978  
                      u4870 1A90                        u4790 1818                        u5670 120A  
                      u5590 1002                        u5750 26B2                        u5830 20E0  
                      u3991 253A                        u4951 2974                        u4871 1A8C  
                      u4791 1814                        u5671 1206                        u5591 0FFE  
                      u5751 26AE                        u5831 20DC                        u4960 2996  
                      u4880 1AD8                        u5680 1228                        u5760 26C2  
                      u5840 3166                        u4961 2992                        u4881 1AD4  
                      u5681 1224                        u5761 26BE                        u5841 3162  
                      u4970 29B6                        u4890 1B06                        u5690 1238  
                      u5770 2D5E                        u5850 27F6                        u5907 2E26  
                      u4971 29B2                        u4891 1B02                        u5691 1234  
                      u5771 2D5A                        u5851 27F2                        u4980 2A06  
                      u5780 2DD0                        u5917 3322                        u4981 2A02  
                      u5781 2DCC                        u4990 323A                        u5790 1F1A  
                      u4991 3236                        u5791 1F16                        u5867 32B0  
                      u5877 32C0                        u5887 2DF6                        u5897 2E10  
         ?_Lcd_Write_String 0005                        _dbuf 0100                        _labs 3000  
                      _main 26E0                        _prec 00BA                        pad@i 0015  
                      pad@p 0012                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _utoa 25B8            __end_of_ADC_Init 3340            __end_of_ADC_Read 3132  
             ___fpclassifyf 2A10                        prodh 0FF4                        prodl 0FF3  
                      start 0000          ??_Lcd_Write_String 0006             ___fldiv@new_exp 0039  
           __end_of_Lcd_Cmd 3330                ___param_bank 0000                       ??_pad 0014  
             ___fltol@sign1 0009                       ?_labs 0001             __end_of___fladd 1734  
                     ?_main 0001             __end_of___fldiv 1EF8             __end_of___flneg 325C  
                     _ADRES 0FC3             __end_of___flmul 1B5E             __end_of___flsub 30EC  
           __end_of___fltol 290C                       ?_utoa 0017             __end_of___lwdiv 2EDA  
           __end_of___lwmod 2FA4                vfpfcnvrt@fmt 005E                       _flags 00BE  
       read_prec_or_width@c 0009         read_prec_or_width@n 000A                       _fputc 2BE0  
                     _fputs 3172                       labs@a 0001                       pad@fp 000F  
                     _width 00B8                       _putch 334E                       tablat 0FF5  
                     utoa@d 0018                       utoa@i 001E                       utoa@p 001A  
                     utoa@w 001C                       status 0FD8             __end_of_sprintf 3224  
            ?___fpclassifyf 0001            __end_of_Lcd_Init 2E66            __end_of_Lcd_Port 3000  
           __initialization 32EE                __end_of_labs 3056                __end_of_main 2806  
              __end_of_utoa 26E0                      ??_labs 0005                      ??_main 0060  
                    ??_utoa 001A               __activetblptr 0002  __end_of_read_prec_or_width 2DDA  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 0009                      ?_putch 0001  
                 ??_Lcd_Cmd 0002               vfpfcnvrt@done 008E            __end_of___xxtofl 25B8  
              vfprintf@cfmt 0098                      ___flge 290C                      ___fleq 2C8A  
                 ??___fladd 0009                      ___wmul 32C8                   ??___fldiv 0030  
                 ??___flneg 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0822                   ??___lwdiv 0005  
                 ??___lwmod 0005                      _buffer 00BF                      _floorf 21F2  
                    _memcpy 3056        read_prec_or_width@ap 0008                      clear_0 32F4  
                    clear_1 3300                      isa$std 0001                      pad@buf 0010  
                    _strcpy 31B2                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009             ___fpclassifyf@e 0009  
                 ?_ADC_Init 0001             ___fpclassifyf@u 000B                   ?_ADC_Read 0001  
           ___fpclassifyf@x 0001                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 3172                      utoa@fp 0017                   ??_sprintf 0060  
           Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004             Lcd_Set_Cursor@y 0007  
           Lcd_Set_Cursor@z 0006                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3306                  ___flneg@f1 0001  
         __end_of_Lcd_Clear 334E               ___rparam_used 0001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001               __end_of_fputc 2C8A               __end_of_fputs 31B2  
             __end_of_putch 3350              _Lcd_Set_Cursor 2B0E                  ??_ADC_Init 0001  
                ??_ADC_Read 0003                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00AC                  __pbssBANK1 0100                  _efgtoa$941 0066  
                   ?___flge 0028                     ?___fleq 0001                     ?___wmul 0001  
                   ?_efgtoa 0055                     ?_floorf 0041                     ?_memcpy 0001  
    __end_of_Lcd_Set_Cursor 2BE0                  ADC_Read@ch 0003                     ?_strcpy 0001  
                 ?___xxtofl 0001                  ??_Lcd_Init 0004                  ??_Lcd_Port 0001  
            _Lcd_Write_Char 3294                     _Lcd_Cmd 3310                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 1274                     ___fldiv 1B5E  
                   ___flneg 3224                     ___flmul 1734                     ___flsub 30A6  
                   ___fltol 2806                     ___lwdiv 2E66                     ___lwmod 2F40  
                 ?_vfprintf 0095                __psmallconst 0800                     __pcinit 32EE  
                   __ramtop 0800             ?_Lcd_Set_Cursor 0004                     __ptext0 26E0  
                   __ptext1 31EC                     __ptext2 3132                     __ptext3 1EF8  
                   __ptext4 25B8                     __ptext5 2F40                     __ptext6 2E66  
                   __ptext7 2D34                     __ptext8 32C8                     __ptext9 0822  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0005                     efgtoa@c 005A  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 0056  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0075                     _sprintf 31EC                     _voltaje 00B4  
    __end_of_Lcd_Write_Char 32C8        end_of_initialization 3306                     floorf@e 004F  
                   floorf@m 004B                     floorf@u 0051                     floorf@x 0041  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 2D34           __end_of_vfpfcnvrt 21F2                  efgtoa@mode 0069  
                efgtoa@sign 0081                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 008F                   Lcd_Port@a 0001                  ??_vfprintf 0060  
                   strcpy@d 0005                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISBbits 0F93                   _TRISDbits 0F95        ??_read_prec_or_width 0009  
               ___fldiv@grs 003B                 ___fldiv@rem 0034             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0005           Lcd_Write_String@i 0006                 ___flmul@grs 001D  
                 _Lcd_Clear 3340              __end_of___flge 2A10              __end_of___fleq 2D34  
               vfpfcnvrt@ap 005F                 vfpfcnvrt@cp 0094                 vfpfcnvrt@fp 005D  
            __end_of___wmul 32EE            _Lcd_Write_String 325C              __end_of_efgtoa 1274  
            __end_of_floorf 2404              __end_of_memcpy 30A6                  floorf@F521 00AC  
            __end_of_strcpy 31EC         start_initialization 32EE                 __end_of_pad 2F40  
     __end_of___fpclassifyf 2B0E                 vfprintf@fmt 0096                  ?_Lcd_Clear 0001  
                  ??___flge 0030                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 005B                    ??_floorf 0045                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0004  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 002C  
                 ___fldiv@b 0028                   ___flmul@a 0013                   ___flmul@b 000F  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001            ___lwdiv@dividend 0001            ??_Lcd_Set_Cursor 0005  
                  ?___fladd 0001                    ?___fldiv 0028                    ?___flneg 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0001  
                  ?___lwdiv 0001                    ?___lwmod 0001                 __smallconst 0800  
                  _ADC_Init 3330                    _ADC_Read 30EC            ___lwdiv@quotient 0006  
                  ?_sprintf 0099              ___wmul@product 0005                    _LATBbits 0F8A  
                  _LATDbits 0F8C                    Lcd_Cmd@a 0003                 ??_Lcd_Clear 0004  
                 _valor_adc 00BC                   _vfpfcnvrt 1EF8                  _ADCON0bits 0FC2  
         ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002                    _Lcd_Init 2DDA  
                  _Lcd_Port 2FA4                  vfpfcnvrt@c 0093    __end_of_Lcd_Write_String 3294  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 0097  
                  __Lrparam 0000                  vfprintf@fp 0095               ADC_Init@p_ang 0001  
                ?_vfpfcnvrt 005D          ___fpclassifyf@F465 00B0                  sprintf@fmt 009A  
                  ___xxtofl 2404             ___lwdiv@divisor 0003             ___lwdiv@counter 0005  
                  __ptext10 31B2                    __ptext11 2EDA                    __ptext20 30A6  
                  __ptext12 3172                    __ptext21 1274                    __ptext13 2BE0  
                  __ptext30 2B0E                    __ptext22 3224                    __ptext14 334E  
                  __ptext31 2DDA                    __ptext23 1734                    __ptext15 3056  
                  __ptext32 3340                    __ptext24 290C                    __ptext16 3000  
                  __ptext33 3310                    __ptext25 2C8A                    __ptext17 21F2  
                  __ptext34 2FA4                    __ptext26 1B5E                    __ptext18 2A10  
                  __ptext35 30EC                    __ptext27 2404                    __ptext19 2806  
                  __ptext36 3330                    __ptext28 325C                    __ptext29 3294  
                strcpy@dest 0001                    efgtoa@fp 0055                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0071                    isa$xinst 0000  
                  _vfprintf 3132                    memcpy@d1 0001                    memcpy@s1 0003  
        Lcd_Write_Char@temp 0002                   sprintf@ap 009F            ___lwmod@dividend 0001  
                 strcpy@src 0003                 efgtoa@nmode 006A                 ??_vfpfcnvrt 008C  
        Lcd_Set_Cursor@temp 0008                    sprintf@f 00A0                    sprintf@s 0099  
           ___lwmod@divisor 0003             ___lwmod@counter 0005               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
