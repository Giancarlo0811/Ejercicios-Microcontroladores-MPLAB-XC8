

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 20 16:30:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Generated 23/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _PORTAbits	set	3968
    49   000000                     _LATD	set	3980
    50   000000                     _TRISAbits	set	3986
    51   000000                     _ADCON1bits	set	4033
    52   000000                     _TRISD	set	3989
    53                           
    54                           ; #config settings
    55                           
    56                           	psect	cinit
    57   00086E                     __pcinit:
    58                           	callstack 0
    59   00086E                     start_initialization:
    60                           	callstack 0
    61   00086E                     __initialization:
    62                           	callstack 0
    63                           
    64                           ; Clear objects allocated to COMRAM (1 bytes)
    65   00086E  6A03               	clrf	__pbssCOMRAM& (0+255),c
    66   000870                     end_of_initialization:
    67                           	callstack 0
    68   000870                     __end_of__initialization:
    69                           	callstack 0
    70   000870  0100               	movlb	0
    71   000872  EF01  F004         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	bssCOMRAM
    74   000003                     __pbssCOMRAM:
    75                           	callstack 0
    76   000003                     _contador:
    77                           	callstack 0
    78   000003                     	ds	1
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     ??_main:
    84                           
    85                           ; 1 bytes @ 0x0
    86   000001                     	ds	2
    87                           
    88 ;;
    89 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    90 ;;
    91 ;; *************** function _main *****************
    92 ;; Defined at:
    93 ;;		line 21 in file "antirebote.c"
    94 ;; Parameters:    Size  Location     Type
    95 ;;		None
    96 ;; Auto vars:     Size  Location     Type
    97 ;;		None
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, status,2, status,0
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   107 ;;      Params:         0       0       0       0       0       0       0       0       0
   108 ;;      Locals:         0       0       0       0       0       0       0       0       0
   109 ;;      Temps:          2       0       0       0       0       0       0       0       0
   110 ;;      Totals:         2       0       0       0       0       0       0       0       0
   111 ;;Total ram usage:        2 bytes
   112 ;; This function calls:
   113 ;;		Nothing
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120   000802                     __ptext0:
   121                           	callstack 0
   122   000802                     _main:
   123                           	callstack 31
   124   000802                     
   125                           ;antirebote.c: 22:     ADCON1bits.PCFG = 0x0F;
   126   000802  0E0F               	movlw	15
   127   000804  12C1               	iorwf	193,f,c	;volatile
   128   000806                     
   129                           ;antirebote.c: 23:     TRISAbits.RA0 = 1;
   130   000806  8092               	bsf	146,0,c	;volatile
   131                           
   132                           ;antirebote.c: 24:     TRISD = 0x00;
   133   000808  0E00               	movlw	0
   134   00080A  6E95               	movwf	149,c	;volatile
   135                           
   136                           ;antirebote.c: 25:     LATD = 0x00;
   137   00080C  0E00               	movlw	0
   138   00080E  6E8C               	movwf	140,c	;volatile
   139   000810                     l708:
   140                           
   141                           ;antirebote.c: 28:         if (PORTAbits.RA0 == 1) {
   142   000810  A080               	btfss	128,0,c	;volatile
   143   000812  EF0D  F004         	goto	u11
   144   000816  EF0F  F004         	goto	u10
   145   00081A                     u11:
   146   00081A  EF08  F004         	goto	l708
   147   00081E                     u10:
   148   00081E                     l21:
   149   00081E  B080               	btfsc	128,0,c	;volatile
   150   000820  EF14  F004         	goto	u21
   151   000824  EF16  F004         	goto	u20
   152   000828                     u21:
   153   000828  EF0F  F004         	goto	l21
   154   00082C                     u20:
   155   00082C                     
   156                           ;antirebote.c: 30:             _delay((unsigned long)((20)*(48000000/4000.0)));
   157   00082C  0E02               	movlw	2
   158   00082E  6E02               	movwf	(??_main+1)^0,c
   159   000830  0E38               	movlw	56
   160   000832  6E01               	movwf	??_main^0,c
   161   000834  0EAD               	movlw	173
   162   000836                     u47:
   163   000836  2EE8               	decfsz	wreg,f,c
   164   000838  D7FE               	bra	u47
   165   00083A  2E01               	decfsz	??_main^0,f,c
   166   00083C  D7FC               	bra	u47
   167   00083E  2E02               	decfsz	(??_main+1)^0,f,c
   168   000840  D7FA               	bra	u47
   169   000842  0000               	nop	
   170   000844                     
   171                           ;antirebote.c: 32:             if (contador > 14) {
   172   000844  0E0E               	movlw	14
   173   000846  6403               	cpfsgt	_contador^0,c
   174   000848  EF28  F004         	goto	u31
   175   00084C  EF2A  F004         	goto	u30
   176   000850                     u31:
   177   000850  EF30  F004         	goto	l720
   178   000854                     u30:
   179   000854                     
   180                           ;antirebote.c: 33:                 contador = 0;
   181   000854  0E00               	movlw	0
   182   000856  6E03               	movwf	_contador^0,c
   183   000858                     
   184                           ;antirebote.c: 34:                 LATD = contador;
   185   000858  0E00               	movlw	0
   186   00085A  6E8C               	movwf	140,c	;volatile
   187                           
   188                           ;antirebote.c: 35:             }
   189   00085C  EF08  F004         	goto	l708
   190   000860                     l720:
   191                           
   192                           ;antirebote.c: 37:                contador++;
   193   000860  2A03               	incf	_contador^0,f,c
   194   000862                     
   195                           ;antirebote.c: 38:                LATD = contador;
   196   000862  C003  FF8C         	movff	_contador,3980	;volatile
   197   000866  EF08  F004         	goto	l708
   198   00086A  EF00  F000         	goto	start
   199   00086E                     __end_of_main:
   200                           	callstack 0
   201                           
   202                           	psect	smallconst
   203   000800                     __psmallconst:
   204                           	callstack 0
   205   000800  00                 	db	0
   206   000801  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           	psect	rparam
   209   000000                     
   210                           	psect	config
   211                           
   212                           ;Config register CONFIG1L @ 0x300000
   213                           ;	PLL Prescaler Selection bits
   214                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   215                           ;	System Clock Postscaler Selection bits
   216                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   217                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   218                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   219   300000                     	org	3145728
   220   300000  21                 	db	33
   221                           
   222                           ;Config register CONFIG1H @ 0x300001
   223                           ;	Oscillator Selection bits
   224                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   225                           ;	Fail-Safe Clock Monitor Enable bit
   226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   227                           ;	Internal/External Oscillator Switchover bit
   228                           ;	IESO = OFF, Oscillator Switchover mode disabled
   229   300001                     	org	3145729
   230   300001  0E                 	db	14
   231                           
   232                           ;Config register CONFIG2L @ 0x300002
   233                           ;	Power-up Timer Enable bit
   234                           ;	PWRT = OFF, PWRT disabled
   235                           ;	Brown-out Reset Enable bits
   236                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   237                           ;	Brown-out Reset Voltage bits
   238                           ;	BORV = 3, Minimum setting 2.05V
   239                           ;	USB Voltage Regulator Enable bit
   240                           ;	VREGEN = OFF, USB voltage regulator disabled
   241   300002                     	org	3145730
   242   300002  19                 	db	25
   243                           
   244                           ;Config register CONFIG2H @ 0x300003
   245                           ;	Watchdog Timer Enable bit
   246                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   247                           ;	Watchdog Timer Postscale Select bits
   248                           ;	WDTPS = 32768, 1:32768
   249   300003                     	org	3145731
   250   300003  1E                 	db	30
   251                           
   252                           ; Padding undefined space
   253   300004                     	org	3145732
   254   300004  FF                 	db	255
   255                           
   256                           ;Config register CONFIG3H @ 0x300005
   257                           ;	CCP2 MUX bit
   258                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   259                           ;	PORTB A/D Enable bit
   260                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   261                           ;	Low-Power Timer 1 Oscillator Enable bit
   262                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   263                           ;	MCLR Pin Enable bit
   264                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   265   300005                     	org	3145733
   266   300005  81                 	db	129
   267                           
   268                           ;Config register CONFIG4L @ 0x300006
   269                           ;	Stack Full/Underflow Reset Enable bit
   270                           ;	STVREN = ON, Stack full/underflow will cause Reset
   271                           ;	Single-Supply ICSP Enable bit
   272                           ;	LVP = OFF, Single-Supply ICSP disabled
   273                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   274                           ;	ICPRT = OFF, ICPORT disabled
   275                           ;	Extended Instruction Set Enable bit
   276                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   277                           ;	Background Debugger Enable bit
   278                           ;	DEBUG = 0x1, unprogrammed default
   279   300006                     	org	3145734
   280   300006  81                 	db	129
   281                           
   282                           ; Padding undefined space
   283   300007                     	org	3145735
   284   300007  FF                 	db	255
   285                           
   286                           ;Config register CONFIG5L @ 0x300008
   287                           ;	Code Protection bit
   288                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   289                           ;	Code Protection bit
   290                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   291                           ;	Code Protection bit
   292                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   293                           ;	Code Protection bit
   294                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   295   300008                     	org	3145736
   296   300008  0F                 	db	15
   297                           
   298                           ;Config register CONFIG5H @ 0x300009
   299                           ;	Boot Block Code Protection bit
   300                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   301                           ;	Data EEPROM Code Protection bit
   302                           ;	CPD = OFF, Data EEPROM is not code-protected
   303   300009                     	org	3145737
   304   300009  C0                 	db	192
   305                           
   306                           ;Config register CONFIG6L @ 0x30000A
   307                           ;	Write Protection bit
   308                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   309                           ;	Write Protection bit
   310                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   311                           ;	Write Protection bit
   312                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   313                           ;	Write Protection bit
   314                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   315   30000A                     	org	3145738
   316   30000A  0F                 	db	15
   317                           
   318                           ;Config register CONFIG6H @ 0x30000B
   319                           ;	Configuration Register Write Protection bit
   320                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   321                           ;	Boot Block Write Protection bit
   322                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   323                           ;	Data EEPROM Write Protection bit
   324                           ;	WRTD = OFF, Data EEPROM is not write-protected
   325   30000B                     	org	3145739
   326   30000B  E0                 	db	224
   327                           
   328                           ;Config register CONFIG7L @ 0x30000C
   329                           ;	Table Read Protection bit
   330                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   331                           ;	Table Read Protection bit
   332                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   333                           ;	Table Read Protection bit
   334                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   335                           ;	Table Read Protection bit
   336                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   337   30000C                     	org	3145740
   338   30000C  0F                 	db	15
   339                           
   340                           ;Config register CONFIG7H @ 0x30000D
   341                           ;	Boot Block Table Read Protection bit
   342                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   343   30000D                     	org	3145741
   344   30000D  40                 	db	64
   345                           tosu	equ	0xFFF
   346                           tosh	equ	0xFFE
   347                           tosl	equ	0xFFD
   348                           stkptr	equ	0xFFC
   349                           pclatu	equ	0xFFB
   350                           pclath	equ	0xFFA
   351                           pcl	equ	0xFF9
   352                           tblptru	equ	0xFF8
   353                           tblptrh	equ	0xFF7
   354                           tblptrl	equ	0xFF6
   355                           tablat	equ	0xFF5
   356                           prodh	equ	0xFF4
   357                           prodl	equ	0xFF3
   358                           indf0	equ	0xFEF
   359                           postinc0	equ	0xFEE
   360                           postdec0	equ	0xFED
   361                           preinc0	equ	0xFEC
   362                           plusw0	equ	0xFEB
   363                           fsr0h	equ	0xFEA
   364                           fsr0l	equ	0xFE9
   365                           wreg	equ	0xFE8
   366                           indf1	equ	0xFE7
   367                           postinc1	equ	0xFE6
   368                           postdec1	equ	0xFE5
   369                           preinc1	equ	0xFE4
   370                           plusw1	equ	0xFE3
   371                           fsr1h	equ	0xFE2
   372                           fsr1l	equ	0xFE1
   373                           bsr	equ	0xFE0
   374                           indf2	equ	0xFDF
   375                           postinc2	equ	0xFDE
   376                           postdec2	equ	0xFDD
   377                           preinc2	equ	0xFDC
   378                           plusw2	equ	0xFDB
   379                           fsr2h	equ	0xFDA
   380                           fsr2l	equ	0xFD9
   381                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRllll       20      0       0      26        0.0%
BITBIGSFRlllh        B      0       0      25        0.0%
BITBIGSFRllh         5      0       0      24        0.0%
BITBIGSFRlhl         2      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3       3        0.0%
DATA                 0      0       3       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 20 16:30:39 2024

                     l21 081E                       u10 081E                       u11 081A  
                     u20 082C                       u21 0828                       u30 0854  
                     u31 0850                       u47 0836                      l720 0860  
                    l712 082C                      l704 0802                      l722 0862  
                    l714 0844                      l706 0806                      l716 0854  
                    l708 0810                      l718 0858                      wreg 0FE8  
                   _LATD 0F8C                     _main 0802                     start 0000  
           ___param_bank 0000                    ?_main 0001                    _TRISD 0F95  
        __initialization 086E             __end_of_main 086E                   ??_main 0001  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0870            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 086E                  __ramtop 0800  
                __ptext0 0802     end_of_initialization 0870                _PORTAbits 0F80  
              _TRISAbits 0F92      start_initialization 086E              __pbssCOMRAM 0003  
            __smallconst 0800               _ADCON1bits 0FC1                 __Hrparam 0000  
               __Lrparam 0000                 _contador 0003                 isa$xinst 0000  
