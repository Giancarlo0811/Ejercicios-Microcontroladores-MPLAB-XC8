

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun May 05 15:18:28 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 23/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _RCREG	set	4014
    53   000000                     _TXREG	set	4013
    54   000000                     _SPBRG	set	4015
    55   000000                     _BAUDCON	set	4024
    56   000000                     _RCSTAbits	set	4011
    57   000000                     _TXSTAbits	set	4012
    58   000000                     _BAUDCONbits	set	4024
    59   000000                     _LATBbits	set	3978
    60   000000                     _TRISBbits	set	3987
    61   000000                     _ADCON1bits	set	4033
    62   000000                     _PIR1bits	set	3998
    63   000000                     _RCSTA	set	4011
    64   000000                     _TXSTA	set	4012
    65   000000                     _TRISCbits	set	3988
    66   000000                     _SPBRGH	set	4016
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71   0009F4                     __pcinit:
    72                           	callstack 0
    73   0009F4                     start_initialization:
    74                           	callstack 0
    75   0009F4                     __initialization:
    76                           	callstack 0
    77                           
    78                           ; Clear objects allocated to COMRAM (1 bytes)
    79   0009F4  6A1A               	clrf	__pbssCOMRAM& (0+255),c
    80   0009F6                     end_of_initialization:
    81                           	callstack 0
    82   0009F6                     __end_of__initialization:
    83                           	callstack 0
    84   0009F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    85   0009F8  6EF8               	movwf	tblptru,c
    86   0009FA  0100               	movlb	0
    87   0009FC  EF53  F004         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90   00001A                     __pbssCOMRAM:
    91                           	callstack 0
    92   00001A                     _dato_rx:
    93                           	callstack 0
    94   00001A                     	ds	1
    95                           
    96                           	psect	cstackCOMRAM
    97   000001                     __pcstackCOMRAM:
    98                           	callstack 0
    99   000001                     ?_Uart_Available:
   100                           	callstack 0
   101   000001                     ?___lldiv:
   102                           	callstack 0
   103   000001                     ___lldiv@dividend:
   104                           	callstack 0
   105                           
   106                           ; 4 bytes @ 0x0
   107   000001                     	ds	2
   108   000003                     ??_Uart_Available:
   109                           
   110                           ; 1 bytes @ 0x2
   111   000003                     	ds	2
   112   000005                     ___lldiv@divisor:
   113                           	callstack 0
   114                           
   115                           ; 4 bytes @ 0x4
   116   000005                     	ds	4
   117   000009                     ___lldiv@quotient:
   118                           	callstack 0
   119                           
   120                           ; 4 bytes @ 0x8
   121   000009                     	ds	4
   122   00000D                     ___lldiv@counter:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0xC
   126   00000D                     	ds	1
   127   00000E                     Uart_Init@baud:
   128                           	callstack 0
   129                           
   130                           ; 4 bytes @ 0xD
   131   00000E                     	ds	4
   132   000012                     ??_Uart_Init:
   133                           
   134                           ; 1 bytes @ 0x11
   135   000012                     	ds	4
   136   000016                     Uart_Init@vx:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x15
   140   000016                     	ds	2
   141   000018                     ??_main:
   142                           
   143                           ; 1 bytes @ 0x17
   144   000018                     	ds	2
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 24 in file "bluetooth_rx.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0
   167 ;;      Temps:          2       0       0       0       0       0       0       0       0
   168 ;;      Totals:         2       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        2 bytes
   170 ;; Hardware stack levels required when called: 2
   171 ;; This function calls:
   172 ;;		_Uart_Available
   173 ;;		_Uart_Init
   174 ;;		_Uart_Read
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181   0008A6                     __ptext0:
   182                           	callstack 0
   183   0008A6                     _main:
   184                           	callstack 29
   185   0008A6                     
   186                           ;bluetooth_rx.c: 25:     ADCON1bits.PCFG = 0x0F;
   187   0008A6  0E0F               	movlw	15
   188   0008A8  12C1               	iorwf	193,f,c	;volatile
   189   0008AA                     
   190                           ;bluetooth_rx.c: 26:     TRISBbits.RB0 = 0;
   191   0008AA  9093               	bcf	147,0,c	;volatile
   192   0008AC                     
   193                           ;bluetooth_rx.c: 27:     TRISBbits.RB1 = 0;
   194   0008AC  9293               	bcf	147,1,c	;volatile
   195   0008AE                     
   196                           ;bluetooth_rx.c: 28:     LATBbits.LB0 = 0;
   197   0008AE  908A               	bcf	138,0,c	;volatile
   198   0008B0                     
   199                           ;bluetooth_rx.c: 29:     LATBbits.LB1 = 0;
   200   0008B0  928A               	bcf	138,1,c	;volatile
   201   0008B2                     
   202                           ;bluetooth_rx.c: 31:     Uart_Init(9600);
   203   0008B2  0E80               	movlw	128
   204   0008B4  6E0E               	movwf	Uart_Init@baud^0,c
   205   0008B6  0E25               	movlw	37
   206   0008B8  6E0F               	movwf	(Uart_Init@baud+1)^0,c
   207   0008BA  0E00               	movlw	0
   208   0008BC  6E10               	movwf	(Uart_Init@baud+2)^0,c
   209   0008BE  0E00               	movlw	0
   210   0008C0  6E11               	movwf	(Uart_Init@baud+3)^0,c
   211   0008C2  ECA2  F004         	call	_Uart_Init	;wreg free
   212   0008C6                     l959:
   213                           
   214                           ;bluetooth_rx.c: 34:         if (Uart_Available() > 0) {
   215   0008C6  ECEC  F004         	call	_Uart_Available	;wreg free
   216   0008CA  BE02               	btfsc	(?_Uart_Available+1)^0,7,c
   217   0008CC  EF70  F004         	goto	u211
   218   0008D0  5002               	movf	(?_Uart_Available+1)^0,w,c
   219   0008D2  E108               	bnz	u210
   220   0008D4  0401               	decf	?_Uart_Available^0,w,c
   221   0008D6  A0D8               	btfss	status,0,c
   222   0008D8  EF70  F004         	goto	u211
   223   0008DC  EF72  F004         	goto	u210
   224   0008E0                     u211:
   225   0008E0  EF63  F004         	goto	l959
   226   0008E4                     u210:
   227   0008E4                     
   228                           ;bluetooth_rx.c: 35:             dato_rx = Uart_Read();
   229   0008E4  ECD9  F004         	call	_Uart_Read	;wreg free
   230   0008E8  6E1A               	movwf	_dato_rx^0,c
   231                           
   232                           ;bluetooth_rx.c: 37:             switch(dato_rx) {
   233   0008EA  EF83  F004         	goto	l965
   234   0008EE                     l22:
   235                           
   236                           ;bluetooth_rx.c: 39:                     LATBbits.LB0 = 1;
   237   0008EE  808A               	bsf	138,0,c	;volatile
   238                           
   239                           ;bluetooth_rx.c: 40:                     break;
   240   0008F0  EF63  F004         	goto	l959
   241   0008F4                     l24:
   242                           
   243                           ;bluetooth_rx.c: 42:                     LATBbits.LB0 = 0;
   244   0008F4  908A               	bcf	138,0,c	;volatile
   245                           
   246                           ;bluetooth_rx.c: 43:                     break;
   247   0008F6  EF63  F004         	goto	l959
   248   0008FA                     l25:
   249                           
   250                           ;bluetooth_rx.c: 45:                     LATBbits.LB1 = 1;
   251   0008FA  828A               	bsf	138,1,c	;volatile
   252                           
   253                           ;bluetooth_rx.c: 46:                     break;
   254   0008FC  EF63  F004         	goto	l959
   255   000900                     l26:
   256                           
   257                           ;bluetooth_rx.c: 48:                     LATBbits.LB1 = 0;
   258   000900  928A               	bcf	138,1,c	;volatile
   259                           
   260                           ;bluetooth_rx.c: 49:                     break;
   261   000902  EF63  F004         	goto	l959
   262   000906                     l965:
   263   000906  501A               	movf	_dato_rx^0,w,c
   264   000908  6E18               	movwf	??_main^0,c
   265   00090A  6A19               	clrf	(??_main+1)^0,c
   266                           
   267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   268                           ; Switch size 1, requested type "simple"
   269                           ; Number of cases is 1, Range of values is 0 to 0
   270                           ; switch strategies available:
   271                           ; Name         Instructions Cycles
   272                           ; simple_byte            4     3 (average)
   273                           ;	Chosen strategy is simple_byte
   274   00090C  5019               	movf	(??_main+1)^0,w,c
   275   00090E  0A00               	xorlw	0	; case 0
   276   000910  B4D8               	btfsc	status,2,c
   277   000912  EF8D  F004         	goto	l975
   278   000916  EF63  F004         	goto	l959
   279   00091A                     l975:
   280                           
   281                           ; Switch size 1, requested type "simple"
   282                           ; Number of cases is 4, Range of values is 97 to 100
   283                           ; switch strategies available:
   284                           ; Name         Instructions Cycles
   285                           ; simple_byte           13     7 (average)
   286                           ;	Chosen strategy is simple_byte
   287   00091A  5018               	movf	??_main^0,w,c
   288   00091C  0A61               	xorlw	97	; case 97
   289   00091E  B4D8               	btfsc	status,2,c
   290   000920  EF77  F004         	goto	l22
   291   000924  0A03               	xorlw	3	; case 98
   292   000926  B4D8               	btfsc	status,2,c
   293   000928  EF7A  F004         	goto	l24
   294   00092C  0A01               	xorlw	1	; case 99
   295   00092E  B4D8               	btfsc	status,2,c
   296   000930  EF7D  F004         	goto	l25
   297   000934  0A07               	xorlw	7	; case 100
   298   000936  B4D8               	btfsc	status,2,c
   299   000938  EF80  F004         	goto	l26
   300   00093C  EF63  F004         	goto	l959
   301   000940  EF00  F000         	goto	start
   302   000944                     __end_of_main:
   303                           	callstack 0
   304                           
   305 ;; *************** function _Uart_Read *****************
   306 ;; Defined at:
   307 ;;		line 43 in file "uart.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      unsigned char 
   314 ;; Registers used:
   315 ;;		wreg, status,2
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         0       0       0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels used: 1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		_main
   331 ;;		_Uart_Read_String
   332 ;;		_Uart_Read_StringUntil
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text1
   337   0009B2                     __ptext1:
   338                           	callstack 0
   339   0009B2                     _Uart_Read:
   340                           	callstack 30
   341   0009B2                     l74:
   342   0009B2  AA9E               	btfss	158,5,c	;volatile
   343   0009B4  EFDE  F004         	goto	u61
   344   0009B8  EFE0  F004         	goto	u60
   345   0009BC                     u61:
   346   0009BC  EFD9  F004         	goto	l74
   347   0009C0                     u60:
   348   0009C0                     
   349                           ;uart.c: 46:     if(RCSTAbits.OERR == 1)
   350   0009C0  A2AB               	btfss	171,1,c	;volatile
   351   0009C2  EFE5  F004         	goto	u71
   352   0009C6  EFE7  F004         	goto	u70
   353   0009CA                     u71:
   354   0009CA  EFE9  F004         	goto	l77
   355   0009CE                     u70:
   356   0009CE                     
   357                           ;uart.c: 47:     {;uart.c: 48:         RCSTAbits.CREN = 0;
   358   0009CE  98AB               	bcf	171,4,c	;volatile
   359                           
   360                           ;uart.c: 49:         RCSTAbits.CREN = 1;
   361   0009D0  88AB               	bsf	171,4,c	;volatile
   362   0009D2                     l77:
   363                           
   364                           ;uart.c: 51:     PIR1bits.RCIF = 0;
   365   0009D2  9A9E               	bcf	158,5,c	;volatile
   366   0009D4                     
   367                           ;uart.c: 52:     return RCREG;
   368   0009D4  50AE               	movf	174,w,c	;volatile
   369   0009D6  0012               	return		;funcret
   370   0009D8                     __end_of_Uart_Read:
   371                           	callstack 0
   372                           
   373 ;; *************** function _Uart_Init *****************
   374 ;; Defined at:
   375 ;;		line 11 in file "uart.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;  baud            4   13[COMRAM] unsigned long 
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  vx              2   21[COMRAM] unsigned int 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   389 ;;      Params:         4       0       0       0       0       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0       0       0       0       0
   391 ;;      Temps:          4       0       0       0       0       0       0       0       0
   392 ;;      Totals:        10       0       0       0       0       0       0       0       0
   393 ;;Total ram usage:       10 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; Hardware stack levels required when called: 1
   396 ;; This function calls:
   397 ;;		___lldiv
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text2
   404   000944                     __ptext2:
   405                           	callstack 0
   406   000944                     _Uart_Init:
   407                           	callstack 29
   408   000944                     
   409                           ;uart.c: 11: void Uart_Init(unsigned long baud);uart.c: 12: {;uart.c: 13:     TRISCbits.
      +                          RC6 = 0;
   410   000944  9C94               	bcf	148,6,c	;volatile
   411                           
   412                           ;uart.c: 14:     TRISCbits.RC7 = 1;
   413   000946  8E94               	bsf	148,7,c	;volatile
   414   000948                     
   415                           ;uart.c: 15:     TXSTA = 0x24;
   416   000948  0E24               	movlw	36
   417   00094A  6EAC               	movwf	172,c	;volatile
   418                           
   419                           ;uart.c: 16:     RCSTA = 0x90;
   420   00094C  0E90               	movlw	144
   421   00094E  6EAB               	movwf	171,c	;volatile
   422                           
   423                           ;uart.c: 17:     BAUDCON = 0x00;
   424   000950  0E00               	movlw	0
   425   000952  6EB8               	movwf	184,c	;volatile
   426   000954                     
   427                           ;uart.c: 18:     BAUDCONbits.BRG16 = 1;
   428   000954  86B8               	bsf	184,3,c	;volatile
   429   000956                     
   430                           ;uart.c: 19:     unsigned int vx = (48000000/(baud*4))-1;
   431   000956  0E00               	movlw	0
   432   000958  6E01               	movwf	___lldiv@dividend^0,c
   433   00095A  0E6C               	movlw	108
   434   00095C  6E02               	movwf	(___lldiv@dividend+1)^0,c
   435   00095E  0EDC               	movlw	220
   436   000960  6E03               	movwf	(___lldiv@dividend+2)^0,c
   437   000962  0E02               	movlw	2
   438   000964  6E04               	movwf	(___lldiv@dividend+3)^0,c
   439   000966  C00E  F012         	movff	Uart_Init@baud,??_Uart_Init
   440   00096A  C00F  F013         	movff	Uart_Init@baud+1,??_Uart_Init+1
   441   00096E  C010  F014         	movff	Uart_Init@baud+2,??_Uart_Init+2
   442   000972  C011  F015         	movff	Uart_Init@baud+3,??_Uart_Init+3
   443   000976  0E02               	movlw	2
   444   000978                     u195:
   445   000978  90D8               	bcf	status,0,c
   446   00097A  3612               	rlcf	??_Uart_Init^0,f,c
   447   00097C  3613               	rlcf	(??_Uart_Init+1)^0,f,c
   448   00097E  3614               	rlcf	(??_Uart_Init+2)^0,f,c
   449   000980  3615               	rlcf	(??_Uart_Init+3)^0,f,c
   450   000982  2EE8               	decfsz	wreg,f,c
   451   000984  EFBC  F004         	goto	u195
   452   000988  C012  F005         	movff	??_Uart_Init,___lldiv@divisor
   453   00098C  C013  F006         	movff	??_Uart_Init+1,___lldiv@divisor+1
   454   000990  C014  F007         	movff	??_Uart_Init+2,___lldiv@divisor+2
   455   000994  C015  F008         	movff	??_Uart_Init+3,___lldiv@divisor+3
   456   000998  EC01  F004         	call	___lldiv	;wreg free
   457   00099C  0EFF               	movlw	255
   458   00099E  2401               	addwf	?___lldiv^0,w,c
   459   0009A0  6E16               	movwf	Uart_Init@vx^0,c
   460   0009A2  0EFF               	movlw	255
   461   0009A4  2002               	addwfc	(?___lldiv+1)^0,w,c
   462   0009A6  6E17               	movwf	(Uart_Init@vx+1)^0,c
   463   0009A8                     
   464                           ;uart.c: 20:     SPBRG = vx & 0x00FF;
   465   0009A8  C016  FFAF         	movff	Uart_Init@vx,4015	;volatile
   466   0009AC                     
   467                           ;uart.c: 21:     SPBRGH = vx >> 8;
   468   0009AC  5017               	movf	(Uart_Init@vx+1)^0,w,c
   469   0009AE  6EB0               	movwf	176,c	;volatile
   470   0009B0  0012               	return		;funcret
   471   0009B2                     __end_of_Uart_Init:
   472                           	callstack 0
   473                           
   474 ;; *************** function ___lldiv *****************
   475 ;; Defined at:
   476 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  dividend        4    0[COMRAM] unsigned long 
   479 ;;  divisor         4    4[COMRAM] unsigned long 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  quotient        4    8[COMRAM] unsigned long 
   482 ;;  counter         1   12[COMRAM] unsigned char 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  4    0[COMRAM] unsigned long 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         8       0       0       0       0       0       0       0       0
   493 ;;      Locals:         5       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:        13       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:       13 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_Uart_Init
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text3
   506   000802                     __ptext3:
   507                           	callstack 0
   508   000802                     ___lldiv:
   509                           	callstack 29
   510   000802  0E00               	movlw	0
   511   000804  6E09               	movwf	___lldiv@quotient^0,c
   512   000806  0E00               	movlw	0
   513   000808  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   514   00080A  0E00               	movlw	0
   515   00080C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   516   00080E  0E00               	movlw	0
   517   000810  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   518   000812  5005               	movf	___lldiv@divisor^0,w,c
   519   000814  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   520   000816  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   521   000818  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   522   00081A  B4D8               	btfsc	status,2,c
   523   00081C  EF12  F004         	goto	u161
   524   000820  EF14  F004         	goto	u160
   525   000824                     u161:
   526   000824  EF4A  F004         	goto	l127
   527   000828                     u160:
   528   000828  0E01               	movlw	1
   529   00082A  6E0D               	movwf	___lldiv@counter^0,c
   530   00082C  EF1E  F004         	goto	l917
   531   000830                     l915:
   532   000830  90D8               	bcf	status,0,c
   533   000832  3605               	rlcf	___lldiv@divisor^0,f,c
   534   000834  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   535   000836  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   536   000838  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   537   00083A  2A0D               	incf	___lldiv@counter^0,f,c
   538   00083C                     l917:
   539   00083C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   540   00083E  EF23  F004         	goto	u171
   541   000842  EF25  F004         	goto	u170
   542   000846                     u171:
   543   000846  EF18  F004         	goto	l915
   544   00084A                     u170:
   545   00084A                     l919:
   546   00084A  90D8               	bcf	status,0,c
   547   00084C  3609               	rlcf	___lldiv@quotient^0,f,c
   548   00084E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   549   000850  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   550   000852  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   551   000854  5005               	movf	___lldiv@divisor^0,w,c
   552   000856  5C01               	subwf	___lldiv@dividend^0,w,c
   553   000858  5006               	movf	(___lldiv@divisor+1)^0,w,c
   554   00085A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   555   00085C  5007               	movf	(___lldiv@divisor+2)^0,w,c
   556   00085E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   557   000860  5008               	movf	(___lldiv@divisor+3)^0,w,c
   558   000862  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   559   000864  A0D8               	btfss	status,0,c
   560   000866  EF37  F004         	goto	u181
   561   00086A  EF39  F004         	goto	u180
   562   00086E                     u181:
   563   00086E  EF42  F004         	goto	l927
   564   000872                     u180:
   565   000872  5005               	movf	___lldiv@divisor^0,w,c
   566   000874  5E01               	subwf	___lldiv@dividend^0,f,c
   567   000876  5006               	movf	(___lldiv@divisor+1)^0,w,c
   568   000878  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   569   00087A  5007               	movf	(___lldiv@divisor+2)^0,w,c
   570   00087C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   571   00087E  5008               	movf	(___lldiv@divisor+3)^0,w,c
   572   000880  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   573   000882  8009               	bsf	___lldiv@quotient^0,0,c
   574   000884                     l927:
   575   000884  90D8               	bcf	status,0,c
   576   000886  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   577   000888  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   578   00088A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   579   00088C  3205               	rrcf	___lldiv@divisor^0,f,c
   580   00088E  2E0D               	decfsz	___lldiv@counter^0,f,c
   581   000890  EF25  F004         	goto	l919
   582   000894                     l127:
   583   000894  C009  F001         	movff	___lldiv@quotient,?___lldiv
   584   000898  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   585   00089C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   586   0008A0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   587   0008A4  0012               	return		;funcret
   588   0008A6                     __end_of___lldiv:
   589                           	callstack 0
   590                           
   591 ;; *************** function _Uart_Available *****************
   592 ;; Defined at:
   593 ;;		line 24 in file "uart.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2    0[COMRAM] short 
   600 ;; Registers used:
   601 ;;		wreg, status,2
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         2       0       0       0       0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0
   609 ;;      Temps:          1       0       0       0       0       0       0       0       0
   610 ;;      Totals:         3       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        3 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text4
   621   0009D8                     __ptext4:
   622                           	callstack 0
   623   0009D8                     _Uart_Available:
   624                           	callstack 30
   625   0009D8                     
   626                           ;uart.c: 26:     return PIR1bits.RCIF ? 1 : 0;
   627   0009D8  BA9E               	btfsc	158,5,c	;volatile
   628   0009DA  EFF1  F004         	goto	u201
   629   0009DE  EFF5  F004         	goto	u200
   630   0009E2                     u201:
   631   0009E2  6A03               	clrf	??_Uart_Available^0,c
   632   0009E4  2A03               	incf	??_Uart_Available^0,f,c
   633   0009E6  EFF6  F004         	goto	u208
   634   0009EA                     u200:
   635   0009EA  6A03               	clrf	??_Uart_Available^0,c
   636   0009EC                     u208:
   637   0009EC  5003               	movf	??_Uart_Available^0,w,c
   638   0009EE  6E01               	movwf	?_Uart_Available^0,c
   639   0009F0  6A02               	clrf	(?_Uart_Available+1)^0,c
   640   0009F2  0012               	return		;funcret
   641   0009F4                     __end_of_Uart_Available:
   642                           	callstack 0
   643                           
   644                           	psect	smallconst
   645   000800                     __psmallconst:
   646                           	callstack 0
   647   000800  00                 	db	0
   648   000801  00                 	db	0	; dummy byte at the end
   649   000000                     
   650                           	psect	rparam
   651   000000                     
   652                           	psect	config
   653                           
   654                           ;Config register CONFIG1L @ 0x300000
   655                           ;	PLL Prescaler Selection bits
   656                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   657                           ;	System Clock Postscaler Selection bits
   658                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   659                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   660                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   661   300000                     	org	3145728
   662   300000  21                 	db	33
   663                           
   664                           ;Config register CONFIG1H @ 0x300001
   665                           ;	Oscillator Selection bits
   666                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   667                           ;	Fail-Safe Clock Monitor Enable bit
   668                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   669                           ;	Internal/External Oscillator Switchover bit
   670                           ;	IESO = OFF, Oscillator Switchover mode disabled
   671   300001                     	org	3145729
   672   300001  0E                 	db	14
   673                           
   674                           ;Config register CONFIG2L @ 0x300002
   675                           ;	Power-up Timer Enable bit
   676                           ;	PWRT = OFF, PWRT disabled
   677                           ;	Brown-out Reset Enable bits
   678                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   679                           ;	Brown-out Reset Voltage bits
   680                           ;	BORV = 3, Minimum setting 2.05V
   681                           ;	USB Voltage Regulator Enable bit
   682                           ;	VREGEN = OFF, USB voltage regulator disabled
   683   300002                     	org	3145730
   684   300002  19                 	db	25
   685                           
   686                           ;Config register CONFIG2H @ 0x300003
   687                           ;	Watchdog Timer Enable bit
   688                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   689                           ;	Watchdog Timer Postscale Select bits
   690                           ;	WDTPS = 32768, 1:32768
   691   300003                     	org	3145731
   692   300003  1E                 	db	30
   693                           
   694                           ; Padding undefined space
   695   300004                     	org	3145732
   696   300004  FF                 	db	255
   697                           
   698                           ;Config register CONFIG3H @ 0x300005
   699                           ;	CCP2 MUX bit
   700                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   701                           ;	PORTB A/D Enable bit
   702                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   703                           ;	Low-Power Timer 1 Oscillator Enable bit
   704                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   705                           ;	MCLR Pin Enable bit
   706                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   707   300005                     	org	3145733
   708   300005  81                 	db	129
   709                           
   710                           ;Config register CONFIG4L @ 0x300006
   711                           ;	Stack Full/Underflow Reset Enable bit
   712                           ;	STVREN = ON, Stack full/underflow will cause Reset
   713                           ;	Single-Supply ICSP Enable bit
   714                           ;	LVP = OFF, Single-Supply ICSP disabled
   715                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   716                           ;	ICPRT = OFF, ICPORT disabled
   717                           ;	Extended Instruction Set Enable bit
   718                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   719                           ;	Background Debugger Enable bit
   720                           ;	DEBUG = 0x1, unprogrammed default
   721   300006                     	org	3145734
   722   300006  81                 	db	129
   723                           
   724                           ; Padding undefined space
   725   300007                     	org	3145735
   726   300007  FF                 	db	255
   727                           
   728                           ;Config register CONFIG5L @ 0x300008
   729                           ;	Code Protection bit
   730                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   731                           ;	Code Protection bit
   732                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   733                           ;	Code Protection bit
   734                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   735                           ;	Code Protection bit
   736                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   737   300008                     	org	3145736
   738   300008  0F                 	db	15
   739                           
   740                           ;Config register CONFIG5H @ 0x300009
   741                           ;	Boot Block Code Protection bit
   742                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   743                           ;	Data EEPROM Code Protection bit
   744                           ;	CPD = OFF, Data EEPROM is not code-protected
   745   300009                     	org	3145737
   746   300009  C0                 	db	192
   747                           
   748                           ;Config register CONFIG6L @ 0x30000A
   749                           ;	Write Protection bit
   750                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   751                           ;	Write Protection bit
   752                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   753                           ;	Write Protection bit
   754                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   755                           ;	Write Protection bit
   756                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   757   30000A                     	org	3145738
   758   30000A  0F                 	db	15
   759                           
   760                           ;Config register CONFIG6H @ 0x30000B
   761                           ;	Configuration Register Write Protection bit
   762                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   763                           ;	Boot Block Write Protection bit
   764                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   765                           ;	Data EEPROM Write Protection bit
   766                           ;	WRTD = OFF, Data EEPROM is not write-protected
   767   30000B                     	org	3145739
   768   30000B  E0                 	db	224
   769                           
   770                           ;Config register CONFIG7L @ 0x30000C
   771                           ;	Table Read Protection bit
   772                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   773                           ;	Table Read Protection bit
   774                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   775                           ;	Table Read Protection bit
   776                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   777                           ;	Table Read Protection bit
   778                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   779   30000C                     	org	3145740
   780   30000C  0F                 	db	15
   781                           
   782                           ;Config register CONFIG7H @ 0x30000D
   783                           ;	Boot Block Table Read Protection bit
   784                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   785   30000D                     	org	3145741
   786   30000D  40                 	db	64
   787                           tosu	equ	0xFFF
   788                           tosh	equ	0xFFE
   789                           tosl	equ	0xFFD
   790                           stkptr	equ	0xFFC
   791                           pclatu	equ	0xFFB
   792                           pclath	equ	0xFFA
   793                           pcl	equ	0xFF9
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           prodh	equ	0xFF4
   799                           prodl	equ	0xFF3
   800                           indf0	equ	0xFEF
   801                           postinc0	equ	0xFEE
   802                           postdec0	equ	0xFED
   803                           preinc0	equ	0xFEC
   804                           plusw0	equ	0xFEB
   805                           fsr0h	equ	0xFEA
   806                           fsr0l	equ	0xFE9
   807                           wreg	equ	0xFE8
   808                           indf1	equ	0xFE7
   809                           postinc1	equ	0xFE6
   810                           postdec1	equ	0xFE5
   811                           preinc1	equ	0xFE4
   812                           plusw1	equ	0xFE3
   813                           fsr1h	equ	0xFE2
   814                           fsr1l	equ	0xFE1
   815                           bsr	equ	0xFE0
   816                           indf2	equ	0xFDF
   817                           postinc2	equ	0xFDE
   818                           postdec2	equ	0xFDD
   819                           preinc2	equ	0xFDC
   820                           plusw2	equ	0xFDB
   821                           fsr2h	equ	0xFDA
   822                           fsr2l	equ	0xFD9
   823                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Uart_Init
    _Uart_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     457
                                             23 COMRAM     2     2      0
                     _Uart_Available
                          _Uart_Init
                          _Uart_Read
 ---------------------------------------------------------------------------------
 (1) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             13 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Uart_Available                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Uart_Available
   _Uart_Init
     ___lldiv
   _Uart_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1A       1       27.4%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2A      0       0      26        0.0%
BITBIGSFRlhlh        C      0       0      23        0.0%
BITBIGSFRlhll        9      0       0      24        0.0%
BITBIGSFRlhhh        8      0       0      21        0.0%
BITBIGSFRllh         8      0       0      25        0.0%
BITBIGSFRlhhlh       7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      27        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun May 05 15:18:28 2024

                     l22 08EE                       l24 08F4                       l25 08FA  
                     l26 0900                       l56 09B0                       l74 09B2  
                     l59 09F2                       l76 09C0                       l77 09D2  
                     l78 09D6                       u60 09C0                       u61 09BC  
                     u70 09CE                       u71 09CA                      l134 08A4  
                    l127 0894                      l811 09B2                      l813 09CE  
                    l911 0812                      l815 09D4                      l921 0854  
                    l913 0828                      l923 0872                      l915 0830  
                    l931 0944                      l925 0882                      l917 083C  
                    l909 0802                      l941 09AC                      l933 0948  
                    l943 09D8                      l927 0884                      l919 084A  
                    l935 0954                      l951 08AC                      l929 088E  
                    l937 0956                      l961 08E4                      l953 08AE  
                    l939 09A8                      l955 08B0                      l947 08A6  
                    l965 0906                      l957 08B2                      l949 08AA  
                    l975 091A                      l959 08C6                      u200 09EA  
                    u201 09E2                      u210 08E4                      u211 08E0  
                    u208 09EC                      u160 0828                      u161 0824  
                    u170 084A                      u171 0846                      u180 0872  
                    u181 086E                      u195 0978                      wreg 0FE8  
                   _main 08A6                     start 0000             ___param_bank 0000  
                  ?_main 0001          __end_of___lldiv 08A6                    _RCREG 0FAE  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _TXREG 0FAD  
                  _TXSTA 0FAC                    status 0FD8          __initialization 09F4  
           __end_of_main 0944                   ??_main 0018            __activetblptr 0002  
         _Uart_Available 09D8                   _SPBRGH 0FB0                ??___lldiv 0009  
                 isa$std 0001             __mediumconst 0000   __end_of_Uart_Available 09F4  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 09F6  
          ___rparam_used 0001           __pcstackCOMRAM 0001          ?_Uart_Available 0001  
      __end_of_Uart_Init 09B2        __end_of_Uart_Read 09D8                  _BAUDCON 0FB8  
            Uart_Init@vx 0016                  __Hparam 0000                  __Lparam 0000  
                ___lldiv 0802             __psmallconst 0800                  __pcinit 09F4  
                __ramtop 0800                  _dato_rx 001A                  __ptext0 08A6  
                __ptext1 09B2                  __ptext2 0944                  __ptext3 0802  
                __ptext4 09D8     end_of_initialization 09F6            __Lmediumconst 0000  
        ___lldiv@divisor 0005            Uart_Init@baud 000E          ___lldiv@counter 000D  
              _RCSTAbits 0FAB                _TRISBbits 0F93                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8         ??_Uart_Available 0003  
    start_initialization 09F4                _Uart_Init 0944                _Uart_Read 09B2  
            __pbssCOMRAM 001A               ?_Uart_Init 000E               ?_Uart_Read 0001  
               ?___lldiv 0001              __smallconst 0800                 _LATBbits 0F8A  
               _PIR1bits 0F9E               _ADCON1bits 0FC1                 __Hrparam 0000  
            ??_Uart_Init 0012              ??_Uart_Read 0001                 __Lrparam 0000  
               isa$xinst 0000         ___lldiv@dividend 0001         ___lldiv@quotient 0009  
