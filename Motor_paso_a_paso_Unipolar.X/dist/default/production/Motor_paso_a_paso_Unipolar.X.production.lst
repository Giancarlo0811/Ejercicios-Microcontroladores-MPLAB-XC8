

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Apr 17 13:30:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   0008DA                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _pasos
    57   0008DA  0C                 	db	12
    58   0008DB  06                 	db	6
    59   0008DC  03                 	db	3
    60   0008DD  09                 	db	9
    61   000000                     _PORTBbits	set	3969
    62   000000                     _LATD	set	3980
    63   000000                     _TRISBbits	set	3987
    64   000000                     _ADCON1bits	set	4033
    65   000000                     _TRISDbits	set	3989
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70   0008B4                     __pcinit:
    71                           	callstack 0
    72   0008B4                     start_initialization:
    73                           	callstack 0
    74   0008B4                     __initialization:
    75                           	callstack 0
    76                           
    77                           ; Initialize objects allocated to COMRAM (4 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79   0008B4  0EDA               	movlw	low __pidataCOMRAM
    80   0008B6  6EF6               	movwf	tblptrl,c
    81   0008B8  0E08               	movlw	high __pidataCOMRAM
    82   0008BA  6EF7               	movwf	tblptrh,c
    83   0008BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84   0008BE  6EF8               	movwf	tblptru,c
    85   0008C0  EE00  F001         	lfsr	0,__pdataCOMRAM
    86   0008C4  EE10 F004          	lfsr	1,4
    87   0008C8                     copy_data0:
    88   0008C8  0009               	tblrd		*+
    89   0008CA  CFF5 FFEE          	movff	tablat,postinc0
    90   0008CE  50E5               	movf	postdec1,w,c
    91   0008D0  50E1               	movf	fsr1l,w,c
    92   0008D2  E1FA               	bnz	copy_data0
    93   0008D4                     end_of_initialization:
    94                           	callstack 0
    95   0008D4                     __end_of__initialization:
    96                           	callstack 0
    97   0008D4  0100               	movlb	0
    98   0008D6  EF01  F004         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	dataCOMRAM
   101   000001                     __pdataCOMRAM:
   102                           	callstack 0
   103   000001                     _pasos:
   104                           	callstack 0
   105   000001                     	ds	4
   106                           
   107                           	psect	cstackCOMRAM
   108   000005                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000005                     ??_pasos_izquierda:
   111   000005                     ??_pasos_derecha:
   112   000005                     
   113                           ; 1 bytes @ 0x0
   114   000005                     	ds	1
   115   000006                     pasos_izquierda@i:
   116                           	callstack 0
   117   000006                     pasos_derecha@i:
   118                           	callstack 0
   119                           
   120                           ; 1 bytes @ 0x1
   121   000006                     	ds	1
   122   000007                     
   123                           ; 1 bytes @ 0x2
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 26 in file "motor_paso_a_paso_unipolar.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;		None
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   143 ;;      Params:         0       0       0       0       0       0       0       0       0
   144 ;;      Locals:         0       0       0       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0       0       0
   146 ;;      Totals:         0       0       0       0       0       0       0       0       0
   147 ;;Total ram usage:        0 bytes
   148 ;; Hardware stack levels required when called: 1
   149 ;; This function calls:
   150 ;;		_pasos_derecha
   151 ;;		_pasos_izquierda
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158   000802                     __ptext0:
   159                           	callstack 0
   160   000802                     _main:
   161                           	callstack 30
   162   000802                     
   163                           ;motor_paso_a_paso_unipolar.c: 27:     ADCON1bits.PCFG = 0x0F;
   164   000802  0E0F               	movlw	15
   165   000804  12C1               	iorwf	193,f,c	;volatile
   166   000806                     
   167                           ;motor_paso_a_paso_unipolar.c: 28:     TRISBbits.RB0 = 1;
   168   000806  8093               	bsf	147,0,c	;volatile
   169   000808                     
   170                           ;motor_paso_a_paso_unipolar.c: 29:     TRISBbits.RB1 = 1;
   171   000808  8293               	bsf	147,1,c	;volatile
   172   00080A                     
   173                           ;motor_paso_a_paso_unipolar.c: 30:     TRISDbits.RD0 = 0;
   174   00080A  9095               	bcf	149,0,c	;volatile
   175   00080C                     
   176                           ;motor_paso_a_paso_unipolar.c: 31:     TRISDbits.RD1 = 0;
   177   00080C  9295               	bcf	149,1,c	;volatile
   178   00080E                     
   179                           ;motor_paso_a_paso_unipolar.c: 32:     TRISDbits.RD2 = 0;
   180   00080E  9495               	bcf	149,2,c	;volatile
   181   000810                     
   182                           ;motor_paso_a_paso_unipolar.c: 33:     TRISDbits.RD3 = 0;
   183   000810  9695               	bcf	149,3,c	;volatile
   184                           
   185                           ;motor_paso_a_paso_unipolar.c: 34:     LATD = 0x00;
   186   000812  0E00               	movlw	0
   187   000814  6E8C               	movwf	140,c	;volatile
   188   000816                     l758:
   189                           
   190                           ;motor_paso_a_paso_unipolar.c: 37:         if (PORTBbits.RB0 == 1) {
   191   000816  A081               	btfss	129,0,c	;volatile
   192   000818  EF10  F004         	goto	u31
   193   00081C  EF12  F004         	goto	u30
   194   000820                     u31:
   195   000820  EF16  F004         	goto	l24
   196   000824                     u30:
   197   000824                     
   198                           ;motor_paso_a_paso_unipolar.c: 38:             pasos_izquierda();
   199   000824  EC27  F004         	call	_pasos_izquierda	;wreg free
   200                           
   201                           ;motor_paso_a_paso_unipolar.c: 39:         }
   202   000828  EF0B  F004         	goto	l758
   203   00082C                     l24:
   204   00082C  A281               	btfss	129,1,c	;volatile
   205   00082E  EF1B  F004         	goto	u41
   206   000832  EF1D  F004         	goto	u40
   207   000836                     u41:
   208   000836  EF21  F004         	goto	l764
   209   00083A                     u40:
   210   00083A                     
   211                           ;motor_paso_a_paso_unipolar.c: 41:             pasos_derecha();
   212   00083A  EC42  F004         	call	_pasos_derecha	;wreg free
   213                           
   214                           ;motor_paso_a_paso_unipolar.c: 42:         }
   215   00083E  EF0B  F004         	goto	l758
   216   000842                     l764:
   217                           
   218                           ;motor_paso_a_paso_unipolar.c: 44:             LATD = 0x00;
   219   000842  0E00               	movlw	0
   220   000844  6E8C               	movwf	140,c	;volatile
   221   000846  EF0B  F004         	goto	l758
   222   00084A  EF00  F000         	goto	start
   223   00084E                     __end_of_main:
   224                           	callstack 0
   225                           
   226 ;; *************** function _pasos_izquierda *****************
   227 ;; Defined at:
   228 ;;		line 49 in file "motor_paso_a_paso_unipolar.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  i               1    1[COMRAM] char 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   242 ;;      Params:         0       0       0       0       0       0       0       0       0
   243 ;;      Locals:         1       0       0       0       0       0       0       0       0
   244 ;;      Temps:          1       0       0       0       0       0       0       0       0
   245 ;;      Totals:         2       0       0       0       0       0       0       0       0
   246 ;;Total ram usage:        2 bytes
   247 ;; Hardware stack levels used: 1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256   00084E                     __ptext1:
   257                           	callstack 0
   258   00084E                     _pasos_izquierda:
   259                           	callstack 30
   260   00084E                     
   261                           ;motor_paso_a_paso_unipolar.c: 50:     for (signed char i = 0; i < 4; i++) {
   262   00084E  0E00               	movlw	0
   263   000850  6E06               	movwf	pasos_izquierda@i^0,c
   264   000852                     l722:
   265                           
   266                           ;motor_paso_a_paso_unipolar.c: 51:         LATD = pasos[i];
   267   000852  5006               	movf	pasos_izquierda@i^0,w,c
   268   000854  0F01               	addlw	low _pasos
   269   000856  6ED9               	movwf	fsr2l,c
   270   000858  6ADA               	clrf	fsr2h,c
   271   00085A  50DF               	movf	indf2,w,c
   272   00085C  6E8C               	movwf	140,c	;volatile
   273   00085E                     
   274                           ;motor_paso_a_paso_unipolar.c: 52:         _delay((unsigned long)((2000)*(48000000/40000
      +                          00.0)));
   275   00085E  0E20               	movlw	32
   276   000860  6E05               	movwf	??_pasos_izquierda^0,c
   277   000862  0E2A               	movlw	42
   278   000864                     u57:
   279   000864  2EE8               	decfsz	wreg,f,c
   280   000866  D7FE               	bra	u57
   281   000868  2E05               	decfsz	??_pasos_izquierda^0,f,c
   282   00086A  D7FC               	bra	u57
   283   00086C                     
   284                           ;motor_paso_a_paso_unipolar.c: 53:     }
   285   00086C  2A06               	incf	pasos_izquierda@i^0,f,c
   286   00086E  5006               	movf	pasos_izquierda@i^0,w,c
   287   000870  0A80               	xorlw	128
   288   000872  0F7C               	addlw	-132
   289   000874  A0D8               	btfss	status,0,c
   290   000876  EF3F  F004         	goto	u11
   291   00087A  EF41  F004         	goto	u10
   292   00087E                     u11:
   293   00087E  EF29  F004         	goto	l722
   294   000882                     u10:
   295   000882  0012               	return		;funcret
   296   000884                     __end_of_pasos_izquierda:
   297                           	callstack 0
   298                           
   299 ;; *************** function _pasos_derecha *****************
   300 ;; Defined at:
   301 ;;		line 56 in file "motor_paso_a_paso_unipolar.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  i               1    1[COMRAM] char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0
   317 ;;      Temps:          1       0       0       0       0       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329   000884                     __ptext2:
   330                           	callstack 0
   331   000884                     _pasos_derecha:
   332                           	callstack 30
   333   000884                     
   334                           ;motor_paso_a_paso_unipolar.c: 57:     for (signed char i = 3; i >= 0; i--) {
   335   000884  0E03               	movlw	3
   336   000886  6E06               	movwf	pasos_derecha@i^0,c
   337   000888                     l736:
   338                           
   339                           ;motor_paso_a_paso_unipolar.c: 58:         LATD = pasos[i];
   340   000888  5006               	movf	pasos_derecha@i^0,w,c
   341   00088A  0F01               	addlw	low _pasos
   342   00088C  6ED9               	movwf	fsr2l,c
   343   00088E  6ADA               	clrf	fsr2h,c
   344   000890  50DF               	movf	indf2,w,c
   345   000892  6E8C               	movwf	140,c	;volatile
   346   000894                     
   347                           ;motor_paso_a_paso_unipolar.c: 59:         _delay((unsigned long)((2000)*(48000000/40000
      +                          00.0)));
   348   000894  0E20               	movlw	32
   349   000896  6E05               	movwf	??_pasos_derecha^0,c
   350   000898  0E2A               	movlw	42
   351   00089A                     u67:
   352   00089A  2EE8               	decfsz	wreg,f,c
   353   00089C  D7FE               	bra	u67
   354   00089E  2E05               	decfsz	??_pasos_derecha^0,f,c
   355   0008A0  D7FC               	bra	u67
   356   0008A2                     
   357                           ;motor_paso_a_paso_unipolar.c: 60:     }
   358   0008A2  0606               	decf	pasos_derecha@i^0,f,c
   359   0008A4  BE06               	btfsc	pasos_derecha@i^0,7,c
   360   0008A6  EF59  F004         	goto	u20
   361   0008AA  EF57  F004         	goto	u21
   362   0008AE                     u21:
   363   0008AE  EF44  F004         	goto	l736
   364   0008B2                     u20:
   365   0008B2  0012               	return		;funcret
   366   0008B4                     __end_of_pasos_derecha:
   367                           	callstack 0
   368                           
   369                           	psect	smallconst
   370   000800                     __psmallconst:
   371                           	callstack 0
   372   000800  00                 	db	0
   373   000801  00                 	db	0	; dummy byte at the end
   374   000000                     
   375                           	psect	rparam
   376   000000                     
   377                           	psect	config
   378                           
   379                           ;Config register CONFIG1L @ 0x300000
   380                           ;	PLL Prescaler Selection bits
   381                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   382                           ;	System Clock Postscaler Selection bits
   383                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   384                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   385                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   386   300000                     	org	3145728
   387   300000  21                 	db	33
   388                           
   389                           ;Config register CONFIG1H @ 0x300001
   390                           ;	Oscillator Selection bits
   391                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   392                           ;	Fail-Safe Clock Monitor Enable bit
   393                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   394                           ;	Internal/External Oscillator Switchover bit
   395                           ;	IESO = OFF, Oscillator Switchover mode disabled
   396   300001                     	org	3145729
   397   300001  0E                 	db	14
   398                           
   399                           ;Config register CONFIG2L @ 0x300002
   400                           ;	Power-up Timer Enable bit
   401                           ;	PWRT = OFF, PWRT disabled
   402                           ;	Brown-out Reset Enable bits
   403                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   404                           ;	Brown-out Reset Voltage bits
   405                           ;	BORV = 3, Minimum setting 2.05V
   406                           ;	USB Voltage Regulator Enable bit
   407                           ;	VREGEN = OFF, USB voltage regulator disabled
   408   300002                     	org	3145730
   409   300002  19                 	db	25
   410                           
   411                           ;Config register CONFIG2H @ 0x300003
   412                           ;	Watchdog Timer Enable bit
   413                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   414                           ;	Watchdog Timer Postscale Select bits
   415                           ;	WDTPS = 32768, 1:32768
   416   300003                     	org	3145731
   417   300003  1E                 	db	30
   418                           
   419                           ; Padding undefined space
   420   300004                     	org	3145732
   421   300004  FF                 	db	255
   422                           
   423                           ;Config register CONFIG3H @ 0x300005
   424                           ;	CCP2 MUX bit
   425                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   426                           ;	PORTB A/D Enable bit
   427                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   428                           ;	Low-Power Timer 1 Oscillator Enable bit
   429                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   430                           ;	MCLR Pin Enable bit
   431                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   432   300005                     	org	3145733
   433   300005  81                 	db	129
   434                           
   435                           ;Config register CONFIG4L @ 0x300006
   436                           ;	Stack Full/Underflow Reset Enable bit
   437                           ;	STVREN = ON, Stack full/underflow will cause Reset
   438                           ;	Single-Supply ICSP Enable bit
   439                           ;	LVP = OFF, Single-Supply ICSP disabled
   440                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   441                           ;	ICPRT = OFF, ICPORT disabled
   442                           ;	Extended Instruction Set Enable bit
   443                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   444                           ;	Background Debugger Enable bit
   445                           ;	DEBUG = 0x1, unprogrammed default
   446   300006                     	org	3145734
   447   300006  81                 	db	129
   448                           
   449                           ; Padding undefined space
   450   300007                     	org	3145735
   451   300007  FF                 	db	255
   452                           
   453                           ;Config register CONFIG5L @ 0x300008
   454                           ;	Code Protection bit
   455                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   456                           ;	Code Protection bit
   457                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   458                           ;	Code Protection bit
   459                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   460                           ;	Code Protection bit
   461                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   462   300008                     	org	3145736
   463   300008  0F                 	db	15
   464                           
   465                           ;Config register CONFIG5H @ 0x300009
   466                           ;	Boot Block Code Protection bit
   467                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   468                           ;	Data EEPROM Code Protection bit
   469                           ;	CPD = OFF, Data EEPROM is not code-protected
   470   300009                     	org	3145737
   471   300009  C0                 	db	192
   472                           
   473                           ;Config register CONFIG6L @ 0x30000A
   474                           ;	Write Protection bit
   475                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   476                           ;	Write Protection bit
   477                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   478                           ;	Write Protection bit
   479                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   480                           ;	Write Protection bit
   481                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   482   30000A                     	org	3145738
   483   30000A  0F                 	db	15
   484                           
   485                           ;Config register CONFIG6H @ 0x30000B
   486                           ;	Configuration Register Write Protection bit
   487                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   488                           ;	Boot Block Write Protection bit
   489                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   490                           ;	Data EEPROM Write Protection bit
   491                           ;	WRTD = OFF, Data EEPROM is not write-protected
   492   30000B                     	org	3145739
   493   30000B  E0                 	db	224
   494                           
   495                           ;Config register CONFIG7L @ 0x30000C
   496                           ;	Table Read Protection bit
   497                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   498                           ;	Table Read Protection bit
   499                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   500                           ;	Table Read Protection bit
   501                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   502                           ;	Table Read Protection bit
   503                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   504   30000C                     	org	3145740
   505   30000C  0F                 	db	15
   506                           
   507                           ;Config register CONFIG7H @ 0x30000D
   508                           ;	Boot Block Table Read Protection bit
   509                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   510   30000D                     	org	3145741
   511   30000D  40                 	db	64
   512                           tosu	equ	0xFFF
   513                           tosh	equ	0xFFE
   514                           tosl	equ	0xFFD
   515                           stkptr	equ	0xFFC
   516                           pclatu	equ	0xFFB
   517                           pclath	equ	0xFFA
   518                           pcl	equ	0xFF9
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           prodh	equ	0xFF4
   524                           prodl	equ	0xFF3
   525                           indf0	equ	0xFEF
   526                           postinc0	equ	0xFEE
   527                           postdec0	equ	0xFED
   528                           preinc0	equ	0xFEC
   529                           plusw0	equ	0xFEB
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           wreg	equ	0xFE8
   533                           indf1	equ	0xFE7
   534                           postinc1	equ	0xFE6
   535                           postdec1	equ	0xFE5
   536                           preinc1	equ	0xFE4
   537                           plusw1	equ	0xFE3
   538                           fsr1h	equ	0xFE2
   539                           fsr1l	equ	0xFE1
   540                           bsr	equ	0xFE0
   541                           indf2	equ	0xFDF
   542                           postinc2	equ	0xFDE
   543                           postdec2	equ	0xFDD
   544                           preinc2	equ	0xFDC
   545                           plusw2	equ	0xFDB
   546                           fsr2h	equ	0xFDA
   547                           fsr2l	equ	0xFD9
   548                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_pasos_derecha
    _main->_pasos_izquierda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                      _pasos_derecha
                    _pasos_izquierda
 ---------------------------------------------------------------------------------
 (1) _pasos_izquierda                                      2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pasos_derecha                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pasos_derecha
   _pasos_izquierda

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRllll       21      0       0      26        0.0%
BITBIGSFRlllh        A      0       0      25        0.0%
BITBIGSFRllh         6      0       0      24        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       3        0.0%
DATA                 0      0       6       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Apr 17 13:30:12 2024

                     l40 08B2                       l24 082C                       l35 0882  
                     u10 0882                       u11 087E                       u20 08B2  
                     u21 08AE                       u30 0824                       u31 0820  
                     u40 083A                       u41 0836                       u57 0864  
                     u67 089A                      l730 0884                      l722 0852  
                    l740 08A2                      l724 085E                      l716 084E  
                    l742 08A4                      l726 086C                      l750 080A  
                    l736 0888                      l728 086E                      l760 0824  
                    l752 080C                      l744 0802                      l738 0894  
                    l762 083A                      l754 080E                      l746 0806  
                    l764 0842                      l756 0810                      l748 0808  
                    l758 0816                      wreg 0FE8                     _LATD 0F8C  
  __end_of_pasos_derecha 08B4                     _main 0802                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ?_main 0005  
                  _pasos 0001                    tablat 0FF5                    status 0FD8  
        __initialization 08B4             __end_of_main 084E                   ??_main 0007  
          __activetblptr 0000          _pasos_izquierda 084E                   isa$std 0001  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 08D4            ___rparam_used 0001           __pcstackCOMRAM 0005  
__end_of_pasos_izquierda 0884                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 08B4         ?_pasos_izquierda 0005  
                __ramtop 0800                  __ptext0 0802                  __ptext1 084E  
                __ptext2 0884     end_of_initialization 08D4                  postdec1 0FE5  
                postinc0 0FEE                _PORTBbits 0F81                _TRISBbits 0F93  
              _TRISDbits 0F95            _pasos_derecha 0884            __pidataCOMRAM 08DA  
    start_initialization 08B4           ?_pasos_derecha 0005           pasos_derecha@i 0006  
            __smallconst 0800          ??_pasos_derecha 0005               _ADCON1bits 0FC1  
              copy_data0 08C8                 __Hrparam 0000                 __Lrparam 0000  
       pasos_izquierda@i 0006                 isa$xinst 0000        ??_pasos_izquierda 0005  
